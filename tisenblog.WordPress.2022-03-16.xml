<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.4.10" created="2022-03-16 08:28" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Tisen Blog</title>
	<link>https://tisenye.com</link>
	<description></description>
	<pubDate>Wed, 16 Mar 2022 08:28:49 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://tisenye.com</wp:base_site_url>
	<wp:base_blog_url>https://tisenye.com</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[tisen]]></wp:author_login><wp:author_email><![CDATA[1600037849@qq.com]]></wp:author_email><wp:author_display_name><![CDATA[tisen]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

		<wp:category>
		<wp:term_id>2</wp:term_id>
		<wp:category_nicename><![CDATA[algorithm]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Algorithm]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>62</wp:term_id>
		<wp:category_nicename><![CDATA[android]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Android]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>3</wp:term_id>
		<wp:category_nicename><![CDATA[computational-geometry]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Computational geometry]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>4</wp:term_id>
		<wp:category_nicename><![CDATA[data-structure]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Data Structure]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>5</wp:term_id>
		<wp:category_nicename><![CDATA[develop]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Develop]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>6</wp:term_id>
		<wp:category_nicename><![CDATA[dfs]]></wp:category_nicename>
		<wp:category_parent><![CDATA[algorithm]]></wp:category_parent>
		<wp:cat_name><![CDATA[DFS]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>7</wp:term_id>
		<wp:category_nicename><![CDATA[dp]]></wp:category_nicename>
		<wp:category_parent><![CDATA[algorithm]]></wp:category_parent>
		<wp:cat_name><![CDATA[DP]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>50</wp:term_id>
		<wp:category_nicename><![CDATA[language]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Language]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>52</wp:term_id>
		<wp:category_nicename><![CDATA[linux]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Linux]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>51</wp:term_id>
		<wp:category_nicename><![CDATA[python]]></wp:category_nicename>
		<wp:category_parent><![CDATA[language]]></wp:category_parent>
		<wp:cat_name><![CDATA[Python]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>8</wp:term_id>
		<wp:category_nicename><![CDATA[startups]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Startups]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>9</wp:term_id>
		<wp:category_nicename><![CDATA[study]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Study]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>10</wp:term_id>
		<wp:category_nicename><![CDATA[travel]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Travel]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>11</wp:term_id>
		<wp:category_nicename><![CDATA[writing]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[信手之作]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>12</wp:term_id>
		<wp:category_nicename><![CDATA[games]]></wp:category_nicename>
		<wp:category_parent><![CDATA[algorithm]]></wp:category_parent>
		<wp:cat_name><![CDATA[博弈论]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>13</wp:term_id>
		<wp:category_nicename><![CDATA[graphic]]></wp:category_nicename>
		<wp:category_parent><![CDATA[algorithm]]></wp:category_parent>
		<wp:cat_name><![CDATA[图论]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>14</wp:term_id>
		<wp:category_nicename><![CDATA[string]]></wp:category_nicename>
		<wp:category_parent><![CDATA[algorithm]]></wp:category_parent>
		<wp:cat_name><![CDATA[字符串]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>15</wp:term_id>
		<wp:category_nicename><![CDATA[nbmultischool2020]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[宁波多校2020]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>16</wp:term_id>
		<wp:category_nicename><![CDATA[thinking]]></wp:category_nicename>
		<wp:category_parent><![CDATA[algorithm]]></wp:category_parent>
		<wp:cat_name><![CDATA[思维]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>53</wp:term_id>
		<wp:category_nicename><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84]]></wp:category_nicename>
		<wp:category_parent><![CDATA[algorithm]]></wp:category_parent>
		<wp:cat_name><![CDATA[数据结构]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>17</wp:term_id>
		<wp:category_nicename><![CDATA[number-theory]]></wp:category_nicename>
		<wp:category_parent><![CDATA[algorithm]]></wp:category_parent>
		<wp:cat_name><![CDATA[数论]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>18</wp:term_id>
		<wp:category_nicename><![CDATA[violence]]></wp:category_nicename>
		<wp:category_parent><![CDATA[algorithm]]></wp:category_parent>
		<wp:cat_name><![CDATA[暴力]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[未分类]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>19</wp:term_id>
		<wp:category_nicename><![CDATA[hdumultischool2020]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[杭电多校2020]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>20</wp:term_id>
		<wp:category_nicename><![CDATA[struct]]></wp:category_nicename>
		<wp:category_parent><![CDATA[algorithm]]></wp:category_parent>
		<wp:cat_name><![CDATA[构造]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>21</wp:term_id>
		<wp:category_nicename><![CDATA[enumerate]]></wp:category_nicename>
		<wp:category_parent><![CDATA[violence]]></wp:category_parent>
		<wp:cat_name><![CDATA[枚举]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>60</wp:term_id>
		<wp:category_nicename><![CDATA[%e7%83%b9%e9%a5%aa]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[烹饪]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>54</wp:term_id>
		<wp:category_nicename><![CDATA[%e7%ba%bf%e6%ae%b5%e6%a0%91]]></wp:category_nicename>
		<wp:category_parent><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84]]></wp:category_parent>
		<wp:cat_name><![CDATA[线段树]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>66</wp:term_id>
		<wp:category_nicename><![CDATA[%e7%bc%96%e8%af%91%e9%93%be%e6%8e%a5]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[编译链接]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>22</wp:term_id>
		<wp:category_nicename><![CDATA[networkflow]]></wp:category_nicename>
		<wp:category_parent><![CDATA[graphic]]></wp:category_parent>
		<wp:cat_name><![CDATA[网络流]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>56</wp:term_id>
		<wp:category_nicename><![CDATA[%e8%af%97%e6%ad%8c]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[诗歌]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>55</wp:term_id>
		<wp:category_nicename><![CDATA[c-c]]></wp:category_nicename>
		<wp:category_parent><![CDATA[language]]></wp:category_parent>
		<wp:cat_name><![CDATA[C/C++]]></wp:cat_name>
	</wp:category>
		<wp:category>
		<wp:term_id>23</wp:term_id>
		<wp:category_nicename><![CDATA[binarygraphic]]></wp:category_nicename>
		<wp:category_parent><![CDATA[graphic]]></wp:category_parent>
		<wp:cat_name><![CDATA[二分图]]></wp:cat_name>
	</wp:category>
			<wp:tag>
		<wp:term_id>24</wp:term_id>
		<wp:tag_slug><![CDATA[bm]]></wp:tag_slug>
		<wp:tag_name><![CDATA[BM]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>25</wp:term_id>
		<wp:tag_slug><![CDATA[dp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[DP]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>26</wp:term_id>
		<wp:tag_slug><![CDATA[dpjjzl]]></wp:tag_slug>
		<wp:tag_name><![CDATA[DP进阶之路]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>27</wp:term_id>
		<wp:tag_slug><![CDATA[duval-algorithm]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Duval算法]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>28</wp:term_id>
		<wp:tag_slug><![CDATA[games]]></wp:tag_slug>
		<wp:tag_name><![CDATA[games]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>29</wp:term_id>
		<wp:tag_slug><![CDATA[ganmes]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ganmes]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>68</wp:term_id>
		<wp:tag_slug><![CDATA[gcc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[gcc]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>30</wp:term_id>
		<wp:tag_slug><![CDATA[kmp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[KMP]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>58</wp:term_id>
		<wp:tag_slug><![CDATA[lsm]]></wp:tag_slug>
		<wp:tag_name><![CDATA[LSM]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>31</wp:term_id>
		<wp:tag_slug><![CDATA[lydonstring]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Lyndon串]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>32</wp:term_id>
		<wp:tag_slug><![CDATA[lyndonfenjie]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Lyndon分解]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>67</wp:term_id>
		<wp:tag_slug><![CDATA[makefile]]></wp:tag_slug>
		<wp:tag_name><![CDATA[makefile]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>65</wp:term_id>
		<wp:tag_slug><![CDATA[makefile%ef%bc%8c%e5%86%85%e6%a0%b8%e6%a8%a1%e5%9d%97]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Makefile，内核模块]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>33</wp:term_id>
		<wp:tag_slug><![CDATA[photography]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Photography]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>34</wp:term_id>
		<wp:tag_slug><![CDATA[optimize]]></wp:tag_slug>
		<wp:tag_name><![CDATA[优化]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>59</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%86%85%e6%a0%b8]]></wp:tag_slug>
		<wp:tag_name><![CDATA[内核]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>61</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%86%85%e6%a0%b8%e7%ad%be%e5%90%8d]]></wp:tag_slug>
		<wp:tag_name><![CDATA[内核签名]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>49</wp:term_id>
		<wp:tag_slug><![CDATA[%e5%90%90%e6%a7%bd]]></wp:tag_slug>
		<wp:tag_name><![CDATA[吐槽]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>35</wp:term_id>
		<wp:tag_slug><![CDATA[dxszhankai]]></wp:tag_slug>
		<wp:tag_name><![CDATA[多项式展开]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>36</wp:term_id>
		<wp:tag_slug><![CDATA[string-match]]></wp:tag_slug>
		<wp:tag_name><![CDATA[字符串匹配]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>37</wp:term_id>
		<wp:tag_slug><![CDATA[fibonaccishulie]]></wp:tag_slug>
		<wp:tag_name><![CDATA[斐波那契数列]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>38</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%9c%80%e5%a4%a7%e6%b5%81]]></wp:tag_slug>
		<wp:tag_name><![CDATA[最大流]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>39</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%9c%80%e5%b0%8f%e5%89%b2]]></wp:tag_slug>
		<wp:tag_name><![CDATA[最小割]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>40</wp:term_id>
		<wp:tag_slug><![CDATA[zuixiaobiaoshifa]]></wp:tag_slug>
		<wp:tag_name><![CDATA[最小表示法]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>63</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%9d%83%e9%99%90]]></wp:tag_slug>
		<wp:tag_name><![CDATA[权限]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>41</wp:term_id>
		<wp:tag_slug><![CDATA[template]]></wp:tag_slug>
		<wp:tag_name><![CDATA[模板]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>57</wp:term_id>
		<wp:tag_slug><![CDATA[%e6%af%9b%e6%b3%bd%e4%b8%9c]]></wp:tag_slug>
		<wp:tag_name><![CDATA[毛泽东]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>42</wp:term_id>
		<wp:tag_slug><![CDATA[onlinedp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[线性DP]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>43</wp:term_id>
		<wp:tag_slug><![CDATA[backpack]]></wp:tag_slug>
		<wp:tag_name><![CDATA[背包]]></wp:tag_name>
	</wp:tag>
		<wp:tag>
		<wp:term_id>64</wp:term_id>
		<wp:tag_slug><![CDATA[%e8%ae%be%e5%a4%87%e7%ae%a1%e7%90%86]]></wp:tag_slug>
		<wp:tag_name><![CDATA[设备管理]]></wp:tag_name>
	</wp:tag>
			<wp:term>
		<wp:term_id><![CDATA[2]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[algorithm]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Algorithm]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[62]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[android]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Android]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[24]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[bm]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[BM]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[3]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[computational-geometry]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Computational geometry]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[4]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[data-structure]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Data Structure]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[5]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[develop]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Develop]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[6]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[dfs]]></wp:term_slug>
		<wp:term_parent><![CDATA[algorithm]]></wp:term_parent>
		<wp:term_name><![CDATA[DFS]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[7]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[dp]]></wp:term_slug>
		<wp:term_parent><![CDATA[algorithm]]></wp:term_parent>
		<wp:term_name><![CDATA[DP]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[25]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[dp]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[DP]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[26]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[dpjjzl]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[DP进阶之路]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[27]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[duval-algorithm]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Duval算法]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[45]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[nav_menu]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[footer-menu]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Footer menu]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[28]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[games]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[games]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[29]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[ganmes]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[ganmes]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[68]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[gcc]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[gcc]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[44]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[nav_menu]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[home]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Home]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[30]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[kmp]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[KMP]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[50]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[language]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Language]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[52]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[linux]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Linux]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[58]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[lsm]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[LSM]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[31]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[lydonstring]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Lyndon串]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[32]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[lyndonfenjie]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Lyndon分解]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[46]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[nav_menu]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[main-menu]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Main menu]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[67]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[makefile]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[makefile]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[65]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[makefile%ef%bc%8c%e5%86%85%e6%a0%b8%e6%a8%a1%e5%9d%97]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Makefile，内核模块]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[33]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[photography]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Photography]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[51]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[python]]></wp:term_slug>
		<wp:term_parent><![CDATA[language]]></wp:term_parent>
		<wp:term_name><![CDATA[Python]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[8]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[startups]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Startups]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[9]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[study]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Study]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[10]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[travel]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[Travel]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[34]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[optimize]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[优化]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[11]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[writing]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[信手之作]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[59]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%86%85%e6%a0%b8]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[内核]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[61]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%86%85%e6%a0%b8%e7%ad%be%e5%90%8d]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[内核签名]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[12]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[games]]></wp:term_slug>
		<wp:term_parent><![CDATA[algorithm]]></wp:term_parent>
		<wp:term_name><![CDATA[博弈论]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[49]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e5%90%90%e6%a7%bd]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[吐槽]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[13]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[graphic]]></wp:term_slug>
		<wp:term_parent><![CDATA[algorithm]]></wp:term_parent>
		<wp:term_name><![CDATA[图论]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[35]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[dxszhankai]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[多项式展开]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[14]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[string]]></wp:term_slug>
		<wp:term_parent><![CDATA[algorithm]]></wp:term_parent>
		<wp:term_name><![CDATA[字符串]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[36]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[string-match]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[字符串匹配]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[15]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[nbmultischool2020]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[宁波多校2020]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[16]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[thinking]]></wp:term_slug>
		<wp:term_parent><![CDATA[algorithm]]></wp:term_parent>
		<wp:term_name><![CDATA[思维]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[53]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84]]></wp:term_slug>
		<wp:term_parent><![CDATA[algorithm]]></wp:term_parent>
		<wp:term_name><![CDATA[数据结构]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[17]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[number-theory]]></wp:term_slug>
		<wp:term_parent><![CDATA[algorithm]]></wp:term_parent>
		<wp:term_name><![CDATA[数论]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[37]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[fibonaccishulie]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[斐波那契数列]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[18]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[violence]]></wp:term_slug>
		<wp:term_parent><![CDATA[algorithm]]></wp:term_parent>
		<wp:term_name><![CDATA[暴力]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[38]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%9c%80%e5%a4%a7%e6%b5%81]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[最大流]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[39]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%9c%80%e5%b0%8f%e5%89%b2]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[最小割]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[40]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[zuixiaobiaoshifa]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[最小表示法]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[1]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[uncategorized]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[未分类]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[63]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%9d%83%e9%99%90]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[权限]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[19]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[hdumultischool2020]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[杭电多校2020]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[20]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[struct]]></wp:term_slug>
		<wp:term_parent><![CDATA[algorithm]]></wp:term_parent>
		<wp:term_name><![CDATA[构造]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[21]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[enumerate]]></wp:term_slug>
		<wp:term_parent><![CDATA[violence]]></wp:term_parent>
		<wp:term_name><![CDATA[枚举]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[41]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[template]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[模板]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[57]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e6%af%9b%e6%b3%bd%e4%b8%9c]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[毛泽东]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[60]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%83%b9%e9%a5%aa]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[烹饪]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[47]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[nav_menu]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%a4%be%e4%ba%a4%e7%bd%91%e7%bb%9c%e9%93%be%e6%8e%a5%e8%8f%9c%e5%8d%95]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[社交网络链接菜单]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[42]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[onlinedp]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[线性DP]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[54]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%ba%bf%e6%ae%b5%e6%a0%91]]></wp:term_slug>
		<wp:term_parent><![CDATA[%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84]]></wp:term_parent>
		<wp:term_name><![CDATA[线段树]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[66]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e7%bc%96%e8%af%91%e9%93%be%e6%8e%a5]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[编译链接]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[22]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[networkflow]]></wp:term_slug>
		<wp:term_parent><![CDATA[graphic]]></wp:term_parent>
		<wp:term_name><![CDATA[网络流]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[43]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[backpack]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[背包]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[64]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[post_tag]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%ae%be%e5%a4%87%e7%ae%a1%e7%90%86]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[设备管理]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[56]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e8%af%97%e6%ad%8c]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[诗歌]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[48]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[nav_menu]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[%e9%a1%b6%e9%83%a8%e8%8f%9c%e5%8d%95]]></wp:term_slug>
		<wp:term_parent><![CDATA[]]></wp:term_parent>
		<wp:term_name><![CDATA[顶部菜单]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[55]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[c-c]]></wp:term_slug>
		<wp:term_parent><![CDATA[language]]></wp:term_parent>
		<wp:term_name><![CDATA[C/C++]]></wp:term_name>
	</wp:term>
		<wp:term>
		<wp:term_id><![CDATA[23]]></wp:term_id>
		<wp:term_taxonomy><![CDATA[category]]></wp:term_taxonomy>
		<wp:term_slug><![CDATA[binarygraphic]]></wp:term_slug>
		<wp:term_parent><![CDATA[graphic]]></wp:term_parent>
		<wp:term_name><![CDATA[二分图]]></wp:term_name>
	</wp:term>
			<wp:term><wp:term_id>45</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[footer-menu]]></wp:term_slug><wp:term_name><![CDATA[Footer menu]]></wp:term_name>
</wp:term>
	<wp:term><wp:term_id>44</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[home]]></wp:term_slug><wp:term_name><![CDATA[Home]]></wp:term_name>
</wp:term>
	<wp:term><wp:term_id>46</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[main-menu]]></wp:term_slug><wp:term_name><![CDATA[Main menu]]></wp:term_name>
</wp:term>
	<wp:term><wp:term_id>47</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[%e7%a4%be%e4%ba%a4%e7%bd%91%e7%bb%9c%e9%93%be%e6%8e%a5%e8%8f%9c%e5%8d%95]]></wp:term_slug><wp:term_name><![CDATA[社交网络链接菜单]]></wp:term_name>
</wp:term>
	<wp:term><wp:term_id>48</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[%e9%a1%b6%e9%83%a8%e8%8f%9c%e5%8d%95]]></wp:term_slug><wp:term_name><![CDATA[顶部菜单]]></wp:term_name>
</wp:term>

	<generator>https://wordpress.org/?v=5.4.10</generator>

<image>
	<url>https://tisenye.com/wp-content/uploads/2020/10/ts-2-1.png</url>
	<title>Tisen Blog</title>
	<link>https://tisenye.com</link>
	<width>32</width>
	<height>32</height>
</image> 

		<item>
		<title>浓缩咖啡</title>
		<link>https://tisenye.com/%e6%b5%93%e7%bc%a9%e5%92%96%e5%95%a1</link>
		<pubDate>Fri, 19 Jun 2020 14:22:45 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/06/espresso-1-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date><![CDATA[2020-06-19 22:22:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-19 14:22:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%b5%93%e7%bc%a9%e5%92%96%e5%95%a1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/06/espresso-1-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/espresso-1-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2000;s:6:"height";i:1200;s:4:"file";s:24:"2020/06/espresso-1-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_starter_content_theme]]></wp:meta_key>
		<wp:meta_value><![CDATA[twentyseventeen]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>三明治</title>
		<link>https://tisenye.com/%e4%b8%89%e6%98%8e%e6%b2%bb</link>
		<pubDate>Fri, 19 Jun 2020 14:22:45 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/06/sandwich-1-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date><![CDATA[2020-06-19 22:22:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-19 14:22:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e4%b8%89%e6%98%8e%e6%b2%bb]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/06/sandwich-1-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/sandwich-1-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2000;s:6:"height";i:1200;s:4:"file";s:24:"2020/06/sandwich-1-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_starter_content_theme]]></wp:meta_key>
		<wp:meta_value><![CDATA[twentyseventeen]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[neve]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>咖啡</title>
		<link>https://tisenye.com/%e5%92%96%e5%95%a1</link>
		<pubDate>Fri, 19 Jun 2020 14:22:45 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/06/coffee-1-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date><![CDATA[2020-06-19 22:22:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-19 14:22:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%92%96%e5%95%a1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/06/coffee-1-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/coffee-1-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2000;s:6:"height";i:1200;s:4:"file";s:22:"2020/06/coffee-1-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_starter_content_theme]]></wp:meta_key>
		<wp:meta_value><![CDATA[twentyseventeen]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>backlit-clouds-crescent-moon-1804796</title>
		<link>https://tisenye.com/backlit-clouds-crescent-moon-1804796</link>
		<pubDate>Sat, 20 Jun 2020 07:35:59 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/06/backlit-clouds-crescent-moon-1804796-scaled-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date><![CDATA[2020-06-20 15:35:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-20 07:35:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[backlit-clouds-crescent-moon-1804796]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/06/backlit-clouds-crescent-moon-1804796-scaled-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/backlit-clouds-crescent-moon-1804796-scaled-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2048;s:6:"height";i:2560;s:4:"file";s:57:"2020/06/backlit-clouds-crescent-moon-1804796-scaled-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[neve]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>1</title>
		<link>https://tisenye.com/1</link>
		<pubDate>Wed, 27 Mar 2019 10:54:22 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/03/1-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4242</wp:post_id>
		<wp:post_date><![CDATA[2019-03-27 10:54:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-27 10:54:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/03/1-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/1-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:201;s:6:"height";i:201;s:4:"file";s:15:"2019/03/1-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>2</title>
		<link>https://tisenye.com/2</link>
		<pubDate>Wed, 27 Mar 2019 10:54:37 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/03/2-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4243</wp:post_id>
		<wp:post_date><![CDATA[2019-03-27 10:54:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-27 10:54:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/03/2-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/2-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:201;s:6:"height";i:201;s:4:"file";s:15:"2019/03/2-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>3</title>
		<link>https://tisenye.com/3-2</link>
		<pubDate>Wed, 27 Mar 2019 10:54:52 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/03/3-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4244</wp:post_id>
		<wp:post_date><![CDATA[2019-03-27 10:54:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-27 10:54:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[3-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/03/3-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/3-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:201;s:6:"height";i:201;s:4:"file";s:15:"2019/03/3-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>4</title>
		<link>https://tisenye.com/4</link>
		<pubDate>Wed, 27 Mar 2019 10:55:02 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/03/4-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4245</wp:post_id>
		<wp:post_date><![CDATA[2019-03-27 10:55:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-27 10:55:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[4]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/03/4-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/4-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:201;s:6:"height";i:201;s:4:"file";s:15:"2019/03/4-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>5</title>
		<link>https://tisenye.com/5</link>
		<pubDate>Wed, 27 Mar 2019 10:55:16 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/03/5-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4246</wp:post_id>
		<wp:post_date><![CDATA[2019-03-27 10:55:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-27 10:55:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[5]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/03/5-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/5-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:100;s:6:"height";i:100;s:4:"file";s:15:"2019/03/5-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>6</title>
		<link>https://tisenye.com/6</link>
		<pubDate>Wed, 27 Mar 2019 10:55:26 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/03/6-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4247</wp:post_id>
		<wp:post_date><![CDATA[2019-03-27 10:55:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-27 10:55:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[6]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/03/6-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/6-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:100;s:6:"height";i:100;s:4:"file";s:15:"2019/03/6-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>7</title>
		<link>https://tisenye.com/7</link>
		<pubDate>Wed, 27 Mar 2019 10:55:35 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/03/7-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4248</wp:post_id>
		<wp:post_date><![CDATA[2019-03-27 10:55:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-03-27 10:55:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[7]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/03/7-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/7-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:100;s:6:"height";i:100;s:4:"file";s:15:"2019/03/7-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>placeholder-image</title>
		<link>https://tisenye.com/placeholder-image</link>
		<pubDate>Tue, 02 Apr 2019 09:44:13 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/04/placeholder-image-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4251</wp:post_id>
		<wp:post_date><![CDATA[2019-04-02 09:44:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-04-02 09:44:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[placeholder-image]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/04/placeholder-image-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/04/placeholder-image-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1200;s:6:"height";i:900;s:4:"file";s:31:"2019/04/placeholder-image-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>woocommerce-placeholder</title>
		<link>https://tisenye.com/woocommerce-placeholder</link>
		<pubDate>Wed, 12 Jun 2019 15:06:07 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/06/woocommerce-placeholder-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4253</wp:post_id>
		<wp:post_date><![CDATA[2019-06-12 15:06:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-06-12 15:06:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[woocommerce-placeholder]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/06/woocommerce-placeholder-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/06/woocommerce-placeholder-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1200;s:6:"height";i:1200;s:4:"file";s:37:"2019/06/woocommerce-placeholder-1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>architecture-1</title>
		<link>https://tisenye.com/architecture-1</link>
		<pubDate>Mon, 22 Jul 2019 12:16:27 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/07/architecture-1-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4275</wp:post_id>
		<wp:post_date><![CDATA[2019-07-22 12:16:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-22 12:16:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[architecture-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/07/architecture-1-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/07/architecture-1-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:683;s:4:"file";s:28:"2019/07/architecture-1-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>industrial</title>
		<link>https://tisenye.com/industrial</link>
		<pubDate>Mon, 22 Jul 2019 11:52:05 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/07/industrial-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4276</wp:post_id>
		<wp:post_date><![CDATA[2019-07-22 11:52:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-22 11:52:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[industrial]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/07/industrial-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/07/industrial-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:683;s:4:"file";s:24:"2019/07/industrial-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>umbrella</title>
		<link>https://tisenye.com/4311/umbrella</link>
		<pubDate>Mon, 22 Jul 2019 11:52:07 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/07/umbrella-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4277</wp:post_id>
		<wp:post_date><![CDATA[2019-07-22 11:52:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-22 11:52:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[umbrella]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4311</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/07/umbrella-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/07/umbrella-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1024;s:6:"height";i:683;s:4:"file";s:22:"2019/07/umbrella-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>arnel-hasanovic-jJqd2mc-M9Q-unsplash</title>
		<link>https://tisenye.com/arnel-hasanovic-jjqd2mc-m9q-unsplash</link>
		<pubDate>Mon, 22 Jul 2019 12:46:36 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/07/arnel-hasanovic-jJqd2mc-M9Q-unsplash-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4280</wp:post_id>
		<wp:post_date><![CDATA[2019-07-22 12:46:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-22 12:46:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[arnel-hasanovic-jjqd2mc-m9q-unsplash]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/07/arnel-hasanovic-jJqd2mc-M9Q-unsplash-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/07/arnel-hasanovic-jJqd2mc-M9Q-unsplash-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:750;s:4:"file";s:50:"2019/07/arnel-hasanovic-jJqd2mc-M9Q-unsplash-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>artem-beliaikin-v9dffvQaM6k-unsplash</title>
		<link>https://tisenye.com/artem-beliaikin-v9dffvqam6k-unsplash</link>
		<pubDate>Mon, 22 Jul 2019 12:46:37 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/07/artem-beliaikin-v9dffvQaM6k-unsplash-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4281</wp:post_id>
		<wp:post_date><![CDATA[2019-07-22 12:46:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-22 12:46:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[artem-beliaikin-v9dffvqam6k-unsplash]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/07/artem-beliaikin-v9dffvQaM6k-unsplash-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/07/artem-beliaikin-v9dffvQaM6k-unsplash-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:750;s:4:"file";s:50:"2019/07/artem-beliaikin-v9dffvQaM6k-unsplash-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>icons8-team-k5fUTay0ghw-unsplash1</title>
		<link>https://tisenye.com/icons8-team-k5futay0ghw-unsplash1</link>
		<pubDate>Mon, 22 Jul 2019 12:46:38 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/07/icons8-team-k5fUTay0ghw-unsplash1-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4282</wp:post_id>
		<wp:post_date><![CDATA[2019-07-22 12:46:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-22 12:46:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[icons8-team-k5futay0ghw-unsplash1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/07/icons8-team-k5fUTay0ghw-unsplash1-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/07/icons8-team-k5fUTay0ghw-unsplash1-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:750;s:4:"file";s:47:"2019/07/icons8-team-k5fUTay0ghw-unsplash1-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>icons8-team-k5fUTay0ghw-unsplash2</title>
		<link>https://tisenye.com/icons8-team-k5futay0ghw-unsplash2</link>
		<pubDate>Mon, 22 Jul 2019 12:46:38 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/07/icons8-team-k5fUTay0ghw-unsplash2-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4283</wp:post_id>
		<wp:post_date><![CDATA[2019-07-22 12:46:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-07-22 12:46:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[icons8-team-k5futay0ghw-unsplash2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/07/icons8-team-k5fUTay0ghw-unsplash2-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/07/icons8-team-k5fUTay0ghw-unsplash2-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:500;s:6:"height";i:750;s:4:"file";s:47:"2019/07/icons8-team-k5fUTay0ghw-unsplash2-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>梦中的婚礼</title>
		<link>https://tisenye.com/%e6%a2%a6%e4%b8%ad%e7%9a%84%e5%a9%9a%e7%a4%bc</link>
		<pubDate>Sat, 20 Jun 2020 07:39:17 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/06/Richard-Clayderman-梦中的婚礼-1.mp3</guid>
		<description></description>
		<content:encoded><![CDATA[《梦中的婚礼》，来自Richard Clayderman的Richard Clayderman。 曲目10。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date><![CDATA[2020-06-20 15:39:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-20 07:39:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%a2%a6%e4%b8%ad%e7%9a%84%e5%a9%9a%e7%a4%bc]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/06/Richard-Clayderman-梦中的婚礼-1.mp3]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/Richard-Clayderman-梦中的婚礼-1.mp3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:22:{s:10:"dataformat";s:3:"mp3";s:8:"channels";i:2;s:11:"sample_rate";i:44100;s:7:"bitrate";d:128020.44944720397;s:11:"channelmode";s:6:"stereo";s:12:"bitrate_mode";s:3:"vbr";s:8:"lossless";b:0;s:15:"encoder_options";s:3:"VBR";s:17:"compression_ratio";d:0.09071743866723637;s:10:"fileformat";s:3:"mp3";s:8:"filesize";i:2730374;s:9:"mime_type";s:10:"audio/mpeg";s:6:"length";i:163;s:16:"length_formatted";s:4:"2:43";s:16:"encoder_settings";s:12:"Lavf56.4.101";s:13:"part_of_a_set";s:1:"1";s:12:"track_number";s:2:"10";s:6:"artist";s:18:"Richard Clayderman";s:7:"comment";s:558:"163 key(Don't modify):L64FU3W4YxX3ZFTmbZ+8/WoDU2ACx9/HPq2+sq4mmhKko+KrA+NxvtryZ3bko2nslx6/lBSu8ZML754rdiPTa8P1GBbb35T/AcecrMS+Pa6h1jcQOo4dIY3PzlD37LwBpdeUdgPmrkYEItTZ0plhumjwHZaUBi6w0li/2oogIs+zwS0T0knt8fKmmHd+vhSBpEvmHqC1TYZoblWeMDceWBukHAR4ymT4YJvI/fFi31k+IIias7TFLviRxlj1RDghodu6aXmBkJFBWP8l+2zsTriS4OjieHek2JKrFEN2+I4dzBIC2uaYef4XN2fwC0Xb5X3X5mEHONJOkSH0dOIwD0pbZa2LclsufZ50orX4sh1k4j9fkzV21v7+uTWZIdJWTgEiccD9XOlnkaogXoGj2QR2UIloyDBYIX96PapYFcU1Gl955Fei94kMABEcY/xovbENYkF3iNClQ4YZ82MQsfeaVL/oCKlFH8XHj3Qc8lnRM7EfwVGLgNPyLhJBtdFE/WwqcGSBcU/uNCAGHFtBqg==";s:5:"title";s:15:"梦中的婚礼";s:5:"album";s:18:"Richard Clayderman";s:5:"image";a:3:{s:4:"mime";s:10:"image/jpeg";s:5:"width";i:640;s:6:"height";i:640;}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_cover_hash]]></wp:meta_key>
		<wp:meta_value><![CDATA[80ab5daae94a225e293f17531351f4d8]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title></title>
		<link>https://tisenye.com/4285</link>
		<pubDate>Wed, 23 Jun 2021 02:00:07 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/4285/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4285</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:00:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:00:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[4285]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2021/06/Richard-Clayderman-梦中的婚礼-1-mp3-image.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/06/Richard-Clayderman-梦中的婚礼-1-mp3-image.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_cover_hash]]></wp:meta_key>
		<wp:meta_value><![CDATA[80ab5daae94a225e293f17531351f4d8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:640;s:6:"height";i:640;s:4:"file";s:58:"2021/06/Richard-Clayderman-梦中的婚礼-1-mp3-image.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>green-grass-field-1743165</title>
		<link>https://tisenye.com/green-grass-field-1743165</link>
		<pubDate>Sat, 20 Jun 2020 10:00:13 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/06/green-grass-field-1743165-scaled-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4289</wp:post_id>
		<wp:post_date><![CDATA[2020-06-20 18:00:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-20 10:00:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[green-grass-field-1743165]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/06/green-grass-field-1743165-scaled-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/green-grass-field-1743165-scaled-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1933;s:6:"height";i:2560;s:4:"file";s:46:"2020/06/green-grass-field-1743165-scaled-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>person-holding-hand-mirror-2183445</title>
		<link>https://tisenye.com/person-holding-hand-mirror-2183445</link>
		<pubDate>Mon, 29 Jun 2020 13:48:07 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/06/person-holding-hand-mirror-2183445-scaled-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4300</wp:post_id>
		<wp:post_date><![CDATA[2020-06-29 21:48:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-29 13:48:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[person-holding-hand-mirror-2183445]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/06/person-holding-hand-mirror-2183445-scaled-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/person-holding-hand-mirror-2183445-scaled-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2560;s:6:"height";i:1707;s:4:"file";s:55:"2020/06/person-holding-hand-mirror-2183445-scaled-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>bokeh-night-lights-city-9044</title>
		<link>https://tisenye.com/bokeh-night-lights-city-9044</link>
		<pubDate>Mon, 29 Jun 2020 13:48:15 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/06/bokeh-night-lights-city-9044-scaled-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4301</wp:post_id>
		<wp:post_date><![CDATA[2020-06-29 21:48:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-29 13:48:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[bokeh-night-lights-city-9044]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/06/bokeh-night-lights-city-9044-scaled-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/bokeh-night-lights-city-9044-scaled-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2560;s:6:"height";i:1707;s:4:"file";s:49:"2020/06/bokeh-night-lights-city-9044-scaled-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>silhouette-of-person-in-green-grass-under-the-sun-during-33696</title>
		<link>https://tisenye.com/silhouette-of-person-in-green-grass-under-the-sun-during-33696</link>
		<pubDate>Mon, 29 Jun 2020 13:48:21 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/06/silhouette-of-person-in-green-grass-under-the-sun-during-33696-scaled-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4302</wp:post_id>
		<wp:post_date><![CDATA[2020-06-29 21:48:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-29 13:48:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[silhouette-of-person-in-green-grass-under-the-sun-during-33696]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/06/silhouette-of-person-in-green-grass-under-the-sun-during-33696-scaled-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/silhouette-of-person-in-green-grass-under-the-sun-during-33696-scaled-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1707;s:6:"height";i:2560;s:4:"file";s:83:"2020/06/silhouette-of-person-in-green-grass-under-the-sun-during-33696-scaled-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>cropped-bokeh-night-lights-city-9044-scaled-1.jpg</title>
		<link>https://tisenye.com/cropped-bokeh-night-lights-city-9044-scaled-1-jpg</link>
		<pubDate>Mon, 29 Jun 2020 13:53:45 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/06/cropped-bokeh-night-lights-city-9044-scaled-1-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[https://tisenye.com/wp-content/uploads/2020/06/cropped-bokeh-night-lights-city-9044-scaled-1-1.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4306</wp:post_id>
		<wp:post_date><![CDATA[2020-06-29 21:53:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-29 13:53:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-bokeh-night-lights-city-9044-scaled-1-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/06/cropped-bokeh-night-lights-city-9044-scaled-1-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/06/cropped-bokeh-night-lights-city-9044-scaled-1-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2560;s:6:"height";i:1707;s:4:"file";s:59:"2020/06/cropped-bokeh-night-lights-city-9044-scaled-1-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia-transparent-header-logo]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>top-view-of-fern-leaves-3473569</title>
		<link>https://tisenye.com/top-view-of-fern-leaves-3473569</link>
		<pubDate>Thu, 23 Jul 2020 15:53:43 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/07/top-view-of-fern-leaves-3473569-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4401</wp:post_id>
		<wp:post_date><![CDATA[2020-07-23 23:53:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-23 15:53:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[top-view-of-fern-leaves-3473569]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/07/top-view-of-fern-leaves-3473569-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/07/top-view-of-fern-leaves-3473569-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1920;s:6:"height";i:1280;s:4:"file";s:45:"2020/07/top-view-of-fern-leaves-3473569-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>greyscale-photography-of-person-walking-between-trees-3304855</title>
		<link>https://tisenye.com/greyscale-photography-of-person-walking-between-trees-3304855</link>
		<pubDate>Thu, 23 Jul 2020 15:55:00 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/07/greyscale-photography-of-person-walking-between-trees-3304855-scaled-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4402</wp:post_id>
		<wp:post_date><![CDATA[2020-07-23 23:55:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-23 15:55:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[greyscale-photography-of-person-walking-between-trees-3304855]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/07/greyscale-photography-of-person-walking-between-trees-3304855-scaled-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/07/greyscale-photography-of-person-walking-between-trees-3304855-scaled-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1703;s:6:"height";i:2560;s:4:"file";s:82:"2020/07/greyscale-photography-of-person-walking-between-trees-3304855-scaled-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>bonfire-burning-camp-campfire-1368382</title>
		<link>https://tisenye.com/bonfire-burning-camp-campfire-1368382</link>
		<pubDate>Thu, 23 Jul 2020 15:56:21 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/07/bonfire-burning-camp-campfire-1368382-scaled-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4404</wp:post_id>
		<wp:post_date><![CDATA[2020-07-23 23:56:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-23 15:56:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[bonfire-burning-camp-campfire-1368382]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/07/bonfire-burning-camp-campfire-1368382-scaled-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/07/bonfire-burning-camp-campfire-1368382-scaled-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1707;s:6:"height";i:2560;s:4:"file";s:58:"2020/07/bonfire-burning-camp-campfire-1368382-scaled-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>cropped-4.jpg</title>
		<link>https://tisenye.com/cropped-4-jpg</link>
		<pubDate>Sat, 08 Aug 2020 13:10:39 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2019/03/cropped-4-1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4503</wp:post_id>
		<wp:post_date><![CDATA[2020-08-08 21:10:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-08 13:10:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-4-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2019/03/cropped-4-1.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2019/03/cropped-4-1.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:201;s:6:"height";i:200;s:4:"file";s:23:"2019/03/cropped-4-1.jpg";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>ts (1)</title>
		<link>https://tisenye.com/ts-1</link>
		<pubDate>Fri, 09 Oct 2020 06:47:06 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/10/ts-1-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4526</wp:post_id>
		<wp:post_date><![CDATA[2020-10-09 14:47:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-09 06:47:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ts-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/10/ts-1-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/10/ts-1-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:32;s:6:"height";i:32;s:4:"file";s:18:"2020/10/ts-1-1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>cropped-ts-1.png</title>
		<link>https://tisenye.com/cropped-ts-1-png</link>
		<pubDate>Fri, 09 Oct 2020 06:47:20 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/10/cropped-ts-1-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[https://tisenye.com/wp-content/uploads/2020/10/cropped-ts-1-1.png]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4527</wp:post_id>
		<wp:post_date><![CDATA[2020-10-09 14:47:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-09 06:47:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-ts-1-png]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/10/cropped-ts-1-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/10/cropped-ts-1-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:32;s:6:"height";i:32;s:4:"file";s:26:"2020/10/cropped-ts-1-1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom-logo]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>ts (2)</title>
		<link>https://tisenye.com/ts-2</link>
		<pubDate>Fri, 09 Oct 2020 06:48:38 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/10/ts-2-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4529</wp:post_id>
		<wp:post_date><![CDATA[2020-10-09 14:48:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-09 06:48:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ts-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/10/ts-2-1.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/10/ts-2-1.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:200;s:6:"height";i:200;s:4:"file";s:18:"2020/10/ts-2-1.png";s:5:"sizes";a:0:{}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>dp进阶之路-1.8</title>
		<link>https://tisenye.com/tools/dp%e8%bf%9b%e9%98%b6%e4%b9%8b%e8%b7%af-1-8</link>
		<pubDate>Fri, 09 Oct 2020 14:59:47 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/10/dp进阶之路-1.8-1.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4563</wp:post_id>
		<wp:post_date><![CDATA[2020-10-09 22:59:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-09 14:59:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[dp%e8%bf%9b%e9%98%b6%e4%b9%8b%e8%b7%af-1-8]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4558</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/10/dp进阶之路-1.8-1.pdf]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/10/dp进阶之路-1.8-1.pdf]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>计算几何</title>
		<link>https://tisenye.com/tools/%e8%ae%a1%e7%ae%97%e5%87%a0%e4%bd%95</link>
		<pubDate>Fri, 16 Oct 2020 05:53:36 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/10/计算几何-2.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4580</wp:post_id>
		<wp:post_date><![CDATA[2020-10-16 13:53:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-16 05:53:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%ae%a1%e7%ae%97%e5%87%a0%e4%bd%95]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4558</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/10/计算几何-2.pdf]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/10/计算几何-2.pdf]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>计算几何-1</title>
		<link>https://tisenye.com/tools/%e8%ae%a1%e7%ae%97%e5%87%a0%e4%bd%95-1</link>
		<pubDate>Fri, 16 Oct 2020 05:54:06 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/10/计算几何-1-1.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4583</wp:post_id>
		<wp:post_date><![CDATA[2020-10-16 13:54:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-16 05:54:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e8%ae%a1%e7%ae%97%e5%87%a0%e4%bd%95-1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4558</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/10/计算几何-1-1.pdf]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/10/计算几何-1-1.pdf]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>模板</title>
		<link>https://tisenye.com/tools/%e6%a8%a1%e6%9d%bf</link>
		<pubDate>Fri, 16 Oct 2020 05:54:28 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2020/10/模板-1.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4584</wp:post_id>
		<wp:post_date><![CDATA[2020-10-16 13:54:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-16 05:54:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%a8%a1%e6%9d%bf]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4558</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2020/10/模板-1.pdf]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020/10/模板-1.pdf]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>pexels-iva-muškić-691710</title>
		<link>https://tisenye.com/pexels-iva-muskic-691710</link>
		<pubDate>Wed, 23 Jun 2021 05:24:16 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2021/06/pexels-iva-muškić-691710.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4644</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 13:24:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 05:24:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[pexels-iva-muskic-691710]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2021/06/pexels-iva-muškić-691710-scaled.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/06/pexels-iva-muškić-691710-scaled.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:2560;s:6:"height";i:1886;s:4:"file";s:47:"2021/06/pexels-iva-muškić-691710-scaled.jpg";s:5:"sizes";a:7:{s:6:"medium";a:4:{s:4:"file";s:40:"pexels-iva-muškić-691710-300x221.jpg";s:5:"width";i:300;s:6:"height";i:221;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:41:"pexels-iva-muškić-691710-1024x754.jpg";s:5:"width";i:1024;s:6:"height";i:754;s:9:"mime-type";s:10:"image/jpeg";}s:9:"thumbnail";a:4:{s:4:"file";s:40:"pexels-iva-muškić-691710-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:40:"pexels-iva-muškić-691710-768x566.jpg";s:5:"width";i:768;s:6:"height";i:566;s:9:"mime-type";s:10:"image/jpeg";}s:9:"1536x1536";a:4:{s:4:"file";s:42:"pexels-iva-muškić-691710-1536x1131.jpg";s:5:"width";i:1536;s:6:"height";i:1131;s:9:"mime-type";s:10:"image/jpeg";}s:9:"2048x2048";a:4:{s:4:"file";s:42:"pexels-iva-muškić-691710-2048x1508.jpg";s:5:"width";i:2048;s:6:"height";i:1508;s:9:"mime-type";s:10:"image/jpeg";}s:11:"hestia-blog";a:4:{s:4:"file";s:40:"pexels-iva-muškić-691710-360x240.jpg";s:5:"width";i:360;s:6:"height";i:240;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:14:"original_image";s:32:"pexels-iva-muškić-691710.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>pexels-gantas-vaičiulėnas-3750272</title>
		<link>https://tisenye.com/pexels-gantas-vaiciule%cc%87nas-3750272</link>
		<pubDate>Wed, 23 Jun 2021 05:28:13 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2021/06/pexels-gantas-vaičiulėnas-3750272.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4646</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 13:28:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 05:28:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[pexels-gantas-vaiciule%cc%87nas-3750272]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2021/06/pexels-gantas-vaičiulėnas-3750272-scaled.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/06/pexels-gantas-vaičiulėnas-3750272-scaled.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1920;s:6:"height";i:2560;s:4:"file";s:56:"2021/06/pexels-gantas-vaičiulėnas-3750272-scaled.jpg";s:5:"sizes";a:7:{s:6:"medium";a:4:{s:4:"file";s:49:"pexels-gantas-vaičiulėnas-3750272-225x300.jpg";s:5:"width";i:225;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:50:"pexels-gantas-vaičiulėnas-3750272-768x1024.jpg";s:5:"width";i:768;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:9:"thumbnail";a:4:{s:4:"file";s:49:"pexels-gantas-vaičiulėnas-3750272-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:50:"pexels-gantas-vaičiulėnas-3750272-768x1024.jpg";s:5:"width";i:768;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:9:"1536x1536";a:4:{s:4:"file";s:51:"pexels-gantas-vaičiulėnas-3750272-1152x1536.jpg";s:5:"width";i:1152;s:6:"height";i:1536;s:9:"mime-type";s:10:"image/jpeg";}s:9:"2048x2048";a:4:{s:4:"file";s:51:"pexels-gantas-vaičiulėnas-3750272-1536x2048.jpg";s:5:"width";i:1536;s:6:"height";i:2048;s:9:"mime-type";s:10:"image/jpeg";}s:11:"hestia-blog";a:4:{s:4:"file";s:49:"pexels-gantas-vaičiulėnas-3750272-360x240.jpg";s:5:"width";i:360;s:6:"height";i:240;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:14:"original_image";s:41:"pexels-gantas-vaičiulėnas-3750272.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>首页</title>
		<link>https://tisenye.com/4284</link>
		<pubDate>Wed, 23 Jun 2021 02:00:03 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/2021/06/23/%e9%a6%96%e9%a1%b5/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4284</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:00:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:00:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%a6%96%e9%a1%b5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e9%a1%b6%e9%83%a8%e8%8f%9c%e5%8d%95"><![CDATA[顶部菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4284]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://101.37.29.215/]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>hestia-pro</title>
		<link>https://tisenye.com/4375</link>
		<pubDate>Thu, 23 Jul 2020 14:12:34 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/index.php/2020/07/23/hestia/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4375</wp:post_id>
		<wp:post_date><![CDATA[2020-07-23 22:12:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-23 14:12:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hestia-pro]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[custom_css]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Yelp</title>
		<link>https://tisenye.com/4589</link>
		<pubDate>Wed, 23 Jun 2021 02:00:33 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/2021/06/23/yelp/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4589</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:00:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:00:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[yelp]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e7%a4%be%e4%ba%a4%e7%bd%91%e7%bb%9c%e9%93%be%e6%8e%a5%e8%8f%9c%e5%8d%95"><![CDATA[社交网络链接菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4589]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://www.yelp.com]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Facebook</title>
		<link>https://tisenye.com/4590</link>
		<pubDate>Wed, 23 Jun 2021 02:00:33 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/2021/06/23/facebook/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4590</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:00:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:00:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[facebook]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e7%a4%be%e4%ba%a4%e7%bd%91%e7%bb%9c%e9%93%be%e6%8e%a5%e8%8f%9c%e5%8d%95"><![CDATA[社交网络链接菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4590]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://www.facebook.com/wordpress]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Twitter</title>
		<link>https://tisenye.com/4591</link>
		<pubDate>Wed, 23 Jun 2021 02:00:33 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/2021/06/23/twitter/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4591</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:00:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:00:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[twitter]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e7%a4%be%e4%ba%a4%e7%bd%91%e7%bb%9c%e9%93%be%e6%8e%a5%e8%8f%9c%e5%8d%95"><![CDATA[社交网络链接菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4591]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://twitter.com/wordpress]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Instagram</title>
		<link>https://tisenye.com/4592</link>
		<pubDate>Wed, 23 Jun 2021 02:00:33 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/2021/06/23/instagram/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4592</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:00:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:00:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[instagram]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e7%a4%be%e4%ba%a4%e7%bd%91%e7%bb%9c%e9%93%be%e6%8e%a5%e8%8f%9c%e5%8d%95"><![CDATA[社交网络链接菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4592]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://www.instagram.com/explore/tags/wordcamp/]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>电邮</title>
		<link>https://tisenye.com/4593</link>
		<pubDate>Wed, 23 Jun 2021 02:00:33 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/2021/06/23/%e7%94%b5%e9%82%ae/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4593</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:00:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:00:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%94%b5%e9%82%ae]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="%e7%a4%be%e4%ba%a4%e7%bd%91%e7%bb%9c%e9%93%be%e6%8e%a5%e8%8f%9c%e5%8d%95"><![CDATA[社交网络链接菜单]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4593]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[mailto:wordpress@example.com]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title></title>
		<link>https://tisenye.com/4596</link>
		<pubDate>Wed, 23 Jun 2021 02:00:33 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/2021/06/23/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4596</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:00:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:00:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[4596]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="main-menu"><![CDATA[Main menu]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4595]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Home</title>
		<link>https://tisenye.com/4597</link>
		<pubDate>Wed, 23 Jun 2021 02:00:33 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/2021/06/23/%e9%a6%96%e9%a1%b5-2/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4597</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:00:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:00:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e9%a6%96%e9%a1%b5-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="home"><![CDATA[Home]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4597]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[http://tisenye.com]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title></title>
		<link>https://tisenye.com/4604</link>
		<pubDate>Wed, 23 Jun 2021 02:00:34 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/2021/06/23/4604/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4604</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:00:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:00:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[4604]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>4372</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="main-menu"><![CDATA[Main menu]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4558]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title></title>
		<link>https://tisenye.com/4610</link>
		<pubDate>Wed, 23 Jun 2021 02:29:19 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/2021/06/23/4610/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4610</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:29:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:29:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[4610]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="home"><![CDATA[Home]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4595]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title></title>
		<link>https://tisenye.com/4616</link>
		<pubDate>Wed, 23 Jun 2021 02:34:28 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/2021/06/23/4616/</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4616</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 10:34:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 02:34:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[4616]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type><![CDATA[nav_menu_item]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="nav_menu" nicename="home"><![CDATA[Home]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_type]]></wp:meta_key>
		<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_menu_item_parent]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4558]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_object]]></wp:meta_key>
		<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_target]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_classes]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_xfn]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_menu_item_url]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>pexels-matheus-bertelli-1144687</title>
		<link>https://tisenye.com/pexels-matheus-bertelli-1144687</link>
		<pubDate>Wed, 23 Jun 2021 05:30:07 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2021/06/pexels-matheus-bertelli-1144687.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4647</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 13:30:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 05:30:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[pexels-matheus-bertelli-1144687]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2021/06/pexels-matheus-bertelli-1144687-scaled.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/06/pexels-matheus-bertelli-1144687-scaled.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:5:"width";i:1919;s:6:"height";i:2560;s:4:"file";s:50:"2021/06/pexels-matheus-bertelli-1144687-scaled.jpg";s:5:"sizes";a:7:{s:6:"medium";a:4:{s:4:"file";s:43:"pexels-matheus-bertelli-1144687-225x300.jpg";s:5:"width";i:225;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:44:"pexels-matheus-bertelli-1144687-768x1024.jpg";s:5:"width";i:768;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:9:"thumbnail";a:4:{s:4:"file";s:43:"pexels-matheus-bertelli-1144687-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:44:"pexels-matheus-bertelli-1144687-768x1024.jpg";s:5:"width";i:768;s:6:"height";i:1024;s:9:"mime-type";s:10:"image/jpeg";}s:9:"1536x1536";a:4:{s:4:"file";s:45:"pexels-matheus-bertelli-1144687-1152x1536.jpg";s:5:"width";i:1152;s:6:"height";i:1536;s:9:"mime-type";s:10:"image/jpeg";}s:9:"2048x2048";a:4:{s:4:"file";s:45:"pexels-matheus-bertelli-1144687-1535x2048.jpg";s:5:"width";i:1535;s:6:"height";i:2048;s:9:"mime-type";s:10:"image/jpeg";}s:11:"hestia-blog";a:4:{s:4:"file";s:43:"pexels-matheus-bertelli-1144687-360x240.jpg";s:5:"width";i:360;s:6:"height";i:240;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}s:14:"original_image";s:35:"pexels-matheus-bertelli-1144687.jpg";}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_is_custom_background]]></wp:meta_key>
		<wp:meta_value><![CDATA[hestia]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>image-1624955001341</title>
		<link>https://tisenye.com/4696/image-1624955001341</link>
		<pubDate>Tue, 29 Jun 2021 08:23:21 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2021/06/image-1624955001341.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4701</wp:post_id>
		<wp:post_date><![CDATA[2021-06-29 16:23:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-29 08:23:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-1624955001341]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4696</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2021/06/image-1624955001341.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/06/image-1624955001341.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:512;s:6:"height";i:128;s:4:"file";s:31:"2021/06/image-1624955001341.png";s:5:"sizes";a:3:{s:6:"medium";a:4:{s:4:"file";s:30:"image-1624955001341-300x75.png";s:5:"width";i:300;s:6:"height";i:75;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:31:"image-1624955001341-150x128.png";s:5:"width";i:150;s:6:"height";i:128;s:9:"mime-type";s:9:"image/png";}s:11:"hestia-blog";a:4:{s:4:"file";s:31:"image-1624955001341-360x128.png";s:5:"width";i:360;s:6:"height";i:128;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>hdrpl</title>
		<link>https://tisenye.com/4765/hdrpl</link>
		<pubDate>Mon, 01 Nov 2021 06:08:39 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2021/11/IMG_20211101_140322.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[hdrpl]]></excerpt:encoded>
		<wp:post_id>4777</wp:post_id>
		<wp:post_date><![CDATA[2021-11-01 14:08:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-01 06:08:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hdrpl]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4765</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2021/11/IMG_20211101_140322.jpg]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2021/11/IMG_20211101_140322.jpg]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2420;s:6:"height";i:1524;s:4:"file";s:31:"2021/11/IMG_20211101_140322.jpg";s:5:"sizes";a:7:{s:6:"medium";a:4:{s:4:"file";s:31:"IMG_20211101_140322-300x189.jpg";s:5:"width";i:300;s:6:"height";i:189;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:32:"IMG_20211101_140322-1024x645.jpg";s:5:"width";i:1024;s:6:"height";i:645;s:9:"mime-type";s:10:"image/jpeg";}s:9:"thumbnail";a:4:{s:4:"file";s:31:"IMG_20211101_140322-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:31:"IMG_20211101_140322-768x484.jpg";s:5:"width";i:768;s:6:"height";i:484;s:9:"mime-type";s:10:"image/jpeg";}s:9:"1536x1536";a:4:{s:4:"file";s:32:"IMG_20211101_140322-1536x967.jpg";s:5:"width";i:1536;s:6:"height";i:967;s:9:"mime-type";s:10:"image/jpeg";}s:9:"2048x2048";a:4:{s:4:"file";s:33:"IMG_20211101_140322-2048x1290.jpg";s:5:"width";i:2048;s:6:"height";i:1290;s:9:"mime-type";s:10:"image/jpeg";}s:11:"hestia-blog";a:4:{s:4:"file";s:31:"IMG_20211101_140322-360x240.jpg";s:5:"width";i:360;s:6:"height";i:240;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"1.8";s:6:"credit";s:0:"";s:6:"camera";s:8:"LYA-AL00";s:7:"caption";s:5:"hdrpl";s:17:"created_timestamp";s:10:"1634674838";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"5.58";s:3:"iso";s:4:"1000";s:13:"shutter_speed";s:4:"0.04";s:5:"title";s:5:"hdrpl";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>image-1645595292055</title>
		<link>https://tisenye.com/4921/image-1645595292055</link>
		<pubDate>Wed, 23 Feb 2022 05:48:12 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2022/02/image-1645595292055.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4925</wp:post_id>
		<wp:post_date><![CDATA[2022-02-23 13:48:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-23 05:48:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-1645595292055]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4921</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2022/02/image-1645595292055.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/02/image-1645595292055.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1192;s:6:"height";i:818;s:4:"file";s:31:"2022/02/image-1645595292055.png";s:5:"sizes";a:5:{s:6:"medium";a:4:{s:4:"file";s:31:"image-1645595292055-300x206.png";s:5:"width";i:300;s:6:"height";i:206;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:32:"image-1645595292055-1024x703.png";s:5:"width";i:1024;s:6:"height";i:703;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:31:"image-1645595292055-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:31:"image-1645595292055-768x527.png";s:5:"width";i:768;s:6:"height";i:527;s:9:"mime-type";s:9:"image/png";}s:11:"hestia-blog";a:4:{s:4:"file";s:31:"image-1645595292055-360x240.png";s:5:"width";i:360;s:6:"height";i:240;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>image-1645595373335</title>
		<link>https://tisenye.com/4921/image-1645595373335</link>
		<pubDate>Wed, 23 Feb 2022 05:49:34 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2022/02/image-1645595373335.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4926</wp:post_id>
		<wp:post_date><![CDATA[2022-02-23 13:49:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-23 05:49:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-1645595373335]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4921</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2022/02/image-1645595373335.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/02/image-1645595373335.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1346;s:6:"height";i:1136;s:4:"file";s:31:"2022/02/image-1645595373335.png";s:5:"sizes";a:5:{s:6:"medium";a:4:{s:4:"file";s:31:"image-1645595373335-300x253.png";s:5:"width";i:300;s:6:"height";i:253;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:32:"image-1645595373335-1024x864.png";s:5:"width";i:1024;s:6:"height";i:864;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:31:"image-1645595373335-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:31:"image-1645595373335-768x648.png";s:5:"width";i:768;s:6:"height";i:648;s:9:"mime-type";s:9:"image/png";}s:11:"hestia-blog";a:4:{s:4:"file";s:31:"image-1645595373335-360x240.png";s:5:"width";i:360;s:6:"height";i:240;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>image-1645595598274</title>
		<link>https://tisenye.com/4921/image-1645595598274</link>
		<pubDate>Wed, 23 Feb 2022 05:53:18 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2022/02/image-1645595598274.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4928</wp:post_id>
		<wp:post_date><![CDATA[2022-02-23 13:53:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-23 05:53:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-1645595598274]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4921</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2022/02/image-1645595598274.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/02/image-1645595598274.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2204;s:6:"height";i:144;s:4:"file";s:31:"2022/02/image-1645595598274.png";s:5:"sizes";a:7:{s:6:"medium";a:4:{s:4:"file";s:30:"image-1645595598274-300x20.png";s:5:"width";i:300;s:6:"height";i:20;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:31:"image-1645595598274-1024x67.png";s:5:"width";i:1024;s:6:"height";i:67;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:31:"image-1645595598274-150x144.png";s:5:"width";i:150;s:6:"height";i:144;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:30:"image-1645595598274-768x50.png";s:5:"width";i:768;s:6:"height";i:50;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:32:"image-1645595598274-1536x100.png";s:5:"width";i:1536;s:6:"height";i:100;s:9:"mime-type";s:9:"image/png";}s:9:"2048x2048";a:4:{s:4:"file";s:32:"image-1645595598274-2048x134.png";s:5:"width";i:2048;s:6:"height";i:134;s:9:"mime-type";s:9:"image/png";}s:11:"hestia-blog";a:4:{s:4:"file";s:31:"image-1645595598274-360x144.png";s:5:"width";i:360;s:6:"height";i:144;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>image-1645595669616</title>
		<link>https://tisenye.com/4921/image-1645595669616</link>
		<pubDate>Wed, 23 Feb 2022 05:54:30 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2022/02/image-1645595669616.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4929</wp:post_id>
		<wp:post_date><![CDATA[2022-02-23 13:54:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-23 05:54:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-1645595669616]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4921</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2022/02/image-1645595669616.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/02/image-1645595669616.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2202;s:6:"height";i:160;s:4:"file";s:31:"2022/02/image-1645595669616.png";s:5:"sizes";a:7:{s:6:"medium";a:4:{s:4:"file";s:30:"image-1645595669616-300x22.png";s:5:"width";i:300;s:6:"height";i:22;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:31:"image-1645595669616-1024x74.png";s:5:"width";i:1024;s:6:"height";i:74;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:31:"image-1645595669616-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:30:"image-1645595669616-768x56.png";s:5:"width";i:768;s:6:"height";i:56;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:32:"image-1645595669616-1536x112.png";s:5:"width";i:1536;s:6:"height";i:112;s:9:"mime-type";s:9:"image/png";}s:9:"2048x2048";a:4:{s:4:"file";s:32:"image-1645595669616-2048x149.png";s:5:"width";i:2048;s:6:"height";i:149;s:9:"mime-type";s:9:"image/png";}s:11:"hestia-blog";a:4:{s:4:"file";s:31:"image-1645595669616-360x160.png";s:5:"width";i:360;s:6:"height";i:160;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>image-1645596610172</title>
		<link>https://tisenye.com/4921/image-1645596610172</link>
		<pubDate>Wed, 23 Feb 2022 06:10:10 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/wp-content/uploads/2022/02/image-1645596610172.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4933</wp:post_id>
		<wp:post_date><![CDATA[2022-02-23 14:10:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-23 06:10:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[image-1645596610172]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>4921</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
						<wp:attachment_url><![CDATA[https://tisenye.com/wp-content/uploads/2022/02/image-1645596610172.png]]></wp:attachment_url>
											<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
		<wp:meta_value><![CDATA[2022/02/image-1645596610172.png]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2502;s:6:"height";i:1664;s:4:"file";s:31:"2022/02/image-1645596610172.png";s:5:"sizes";a:7:{s:6:"medium";a:4:{s:4:"file";s:31:"image-1645596610172-300x200.png";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:32:"image-1645596610172-1024x681.png";s:5:"width";i:1024;s:6:"height";i:681;s:9:"mime-type";s:9:"image/png";}s:9:"thumbnail";a:4:{s:4:"file";s:31:"image-1645596610172-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:31:"image-1645596610172-768x511.png";s:5:"width";i:768;s:6:"height";i:511;s:9:"mime-type";s:9:"image/png";}s:9:"1536x1536";a:4:{s:4:"file";s:33:"image-1645596610172-1536x1022.png";s:5:"width";i:1536;s:6:"height";i:1022;s:9:"mime-type";s:9:"image/png";}s:9:"2048x2048";a:4:{s:4:"file";s:33:"image-1645596610172-2048x1362.png";s:5:"width";i:2048;s:6:"height";i:1362;s:9:"mime-type";s:9:"image/png";}s:11:"hestia-blog";a:4:{s:4:"file";s:31:"image-1645596610172-360x240.png";s:5:"width";i:360;s:6:"height";i:240;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>宁波多校 2020（一） B 、狂赌之渊</title>
		<link>https://tisenye.com/4311</link>
		<pubDate>Wed, 08 Jul 2020 15:18:26 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4311</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p><a href="https://www.nitacm.com/contest_show.php?cid=429#problem/B">狂赌之渊</a></p>
<h4>DFS + 条件判断</h4>
</blockquote>
<p>看错体面调了一晚上。。。一直以为要对应出牌，结果是能获胜的牌面存在就行。。。。。。菜还瞎可真的是没话说了嗷 比赛的时候老忘记这种暴力（或者说是不想写？QAQ）</p>
<p>有一说一这个判断让我搞了好久，最后终于出现了！屎一样的代码~</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt; ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 2e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
int vis[4];
int a[N];
ll sum = 0;
double ans = 0;
void dfs(int step, double numb, string rst){
    // cout&lt;&lt;numb&lt;&lt;&quot; &quot;&lt;&lt;step&lt;&lt;&quot; &quot;&lt;&lt;rst&lt;&lt;endl;
    if(step == 3){
        // cout&lt;&lt;rst&lt;&lt;endl;
        // getchar();
        int vis2[3] = {0};
        rep(i,3){
            int flag = -1;
            int k = 0;
            rep(j,3){
                if((vis[i] + 1 == rst[j] - &#039;0&#039; || (vis[i] == 3 &amp;&amp; rst[j] == &#039;1&#039;)) &amp;&amp; !vis2[j]){
                    flag = 1;
                    break;
                }else if(vis[i] == rst[j] - &#039;0&#039; &amp;&amp; !vis2[j]){
                    flag = 0;
                    k = j;
                }
            }
            // cout&lt;&lt;flag&lt;&lt;endl;
            if(flag == 0) vis2[k] = 1;
            if(flag == -1) break;
            if(flag == 1){
                // cout&lt;&lt;rst&lt;&lt;&quot; &quot;&lt;&lt;numb&lt;&lt;endl;
                ans += numb;
                break;
            }
        }
        return;
    }
    rep(i,3){
        if(a[i]){
            a[i]--;
            dfs(step+1, numb * (a[i]+1)/(sum-step), rst+char(&#039;1&#039;+i));
            a[i]++;
        }
    }
}
int main(){
    ios::sync_with_stdio(false);
    int t;
    cin&gt;&gt;t;
    while(t--){
        ans = 0;
        sum = 0;
        rep(i,3){
            cin&gt;&gt;a[i];
            sum += a[i];
        }
        rep(i,3){
            cin&gt;&gt;vis[i];
        }
        dfs(0, 1, &quot;&quot;);
        printf(&quot;%.2f\n&quot;, ans);
    }
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4311</wp:post_id>
		<wp:post_date><![CDATA[2020-07-08 23:18:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-08 15:18:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nb2020-1-b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="category" nicename="dfs"><![CDATA[DFS]]></category>
		<category domain="category" nicename="nbmultischool2020"><![CDATA[宁波多校2020]]></category>
		<category domain="category" nicename="violence"><![CDATA[暴力]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e5%ae%81%e6%b3%a2%e5%a4%9a%e6%a0%a1-2020%ef%bc%88%e4%b8%80%ef%bc%89-b%e3%80%81%e7%8b%82%e8%b5%8c%e4%b9%8b%e6%b8%8a]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[37]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[nbduoxiao20201b]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[full-width]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[14]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020nbduoxiao1b]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>宁波多校（一）C、期末考试的安排</title>
		<link>https://tisenye.com/4342</link>
		<pubDate>Sat, 11 Jul 2020 11:22:47 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4342</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p><a href="https://www.nitacm.com/contest_show.php?cid=429#problem/C">期末考试的安排</a></p>
</blockquote>
<h5>二进制枚举</h5>
<p>将班级使用二进制表示，枚举每门课程。
参考<a href="https://www.cnblogs.com/ctyakwf/p/13252023.html">博客</a></p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt; ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x
const ll mod = 1e9 + 7;
const ll N =  20 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
int main(){
    ios::sync_with_stdio(false);
    int t;
    cin&gt;&gt;t;
    while(t--){
        int n,q;
        cin&gt;&gt;n&gt;&gt;q;
        int a[N] = {0};
        int now = 1;        //now所在位置代表班级是否有改科目需要考试
        rep(i,n){
            int m;;
            cin&gt;&gt;m;
            int tmp;
            rep(j,m){
                cin&gt;&gt;tmp;
                a[tmp] += now;      //叠加所有班级该科目的状态
            }
            now *= 2;           //二进制枚举班级
        }
        int vis[N] = {0};
        int day = 0;
        rep2(i, 1, 25){                 //暴力课程
            if(!vis[i] &amp;&amp; a[i]){
                day++;
                int tmp = a[i];
                rep2(j, 1, 25){
                    if(!vis[j] &amp;&amp; a[j]){
                        if((tmp &amp; a[j]) == 0){      //如果该课程和当前天要考的班级不冲突，那么安排考试
                            vis[j] = 1;
                            tmp += a[j];            //将班级加入当前天要考的班级
                        }
                    }
                }
            }
        }
        if(day &gt; q){
            cout&lt;&lt;&quot;NO&quot;&lt;&lt;endl;
        }else{
            cout&lt;&lt;&quot;YES&quot;&lt;&lt;endl;
        }
    }
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4342</wp:post_id>
		<wp:post_date><![CDATA[2020-07-11 19:22:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-11 11:22:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nb2020-1-c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="category" nicename="violence"><![CDATA[暴力]]></category>
		<category domain="category" nicename="enumerate"><![CDATA[枚举]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020宁波多校、二进制、暴力]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[%%title%% %%page%% %%sep%% %%sitename%% 宁波多校 期末考试的安排 二进制枚举]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[宁波多校（一）C、期末考试的安排 二进制 暴力 将班级使用二进制表示，枚举每门课程。]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
		<wp:meta_value><![CDATA[22]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[42]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e5%ae%81%e6%b3%a2%e5%a4%9a%e6%a0%a1%ef%bc%88%e4%b8%80%ef%bc%89c%e3%80%81%e6%9c%9f%e6%9c%ab%e8%80%83%e8%af%95%e7%9a%84%e5%ae%89%e6%8e%92]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[full-width]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[nbduoxiao20201c]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020nbduoxiao1c]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>2020 杭电多校（一）1004、Distinct Sub-palindromes</title>
		<link>https://tisenye.com/4354</link>
		<pubDate>Wed, 22 Jul 2020 12:49:02 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4354</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6754">题目链接</a></p>
</blockquote>
<p>题意：给你一个n，求长度为n的<strong>拥有最少的回文子串</strong>的串个数。</p>
<p>当时开题的时候这题目是真的难读懂。。。。搞了半天还是没明白到底是求什么东西。
其实这题明白题意之后是挺简单的</p>
<ul>
<li>当n长度为1时，只有26种情况（26个字母）</li>
<li>当n长度为2时，AB类型和AA类型的子串的回文是最少的（只有两种，分别是A、B和A、AA）此时这种情况就是26×26种</li>
<li>当n长度为3时，有AAA、ABB、AAB、ABC这四种类型的串，且他们的子串是会问最少的，只有3种。所以这种情况就是26×26×26</li>
<li>当n&gt;=4时，这个时候要想让串保持最少的回文，如果我们多加一种字母如ABCD，此时必然导致回文子串增加，但ABCA却不会增加回文子串，因为新增的字母的回文前面已经有了。所以可以看出只要大于等于4，循环长度为3的情况即可。此时的情况只有26×25×24（保证是ABC型）</li>
</ul>
<p>这道题其实是思维+构造（读题也十分关键，英语差没人权QAQ）</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt;= ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 2e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
int main(){
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int T;
    cin&gt;&gt;T;
    while(T--){
        int n;
        cin&gt;&gt;n;
        if(n &lt;= 3){
            cout&lt;&lt;pow(26,n)&lt;&lt;&quot;\n&quot;;
        }else{
            cout&lt;&lt;25*26*24&lt;&lt;&quot;\n&quot;;
        }
    }
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4354</wp:post_id>
		<wp:post_date><![CDATA[2020-07-22 20:49:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-22 12:49:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hdu2020-1-1004]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="category" nicename="thinking"><![CDATA[思维]]></category>
		<category domain="category" nicename="hdumultischool2020"><![CDATA[杭电多校2020]]></category>
		<category domain="category" nicename="struct"><![CDATA[构造]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
		<wp:meta_value><![CDATA[杭电多校2020 1004 Distinct Sub-palindromes 题意：给你一个n，求长度为n的**拥有最少的回文子串**的串个数。当时开题的时候这题目是真的难读懂。。。。搞了半天还是没明白到底是求什么东西。其实这题明白题意之后是挺简单的]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
		<wp:meta_value><![CDATA[37]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020-%e6%9d%ad%e7%94%b5%e5%a4%9a%e6%a0%a1%ef%bc%88%e4%b8%80%ef%bc%891004%e3%80%81distinct-sub-palindromes]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[full-width]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>2020 杭电多校（一）1005、Fibonacci Sum</title>
		<link>https://tisenye.com/4368</link>
		<pubDate>Thu, 23 Jul 2020 13:48:38 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4368</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6755">题目链接</a></p>
</blockquote>
<p>题意：给定N、C、K，求<code class="katex-inline">\sum_{i=0}^n F(i*c)^k</code>其中<code class="katex-inline">F(i)</code>表示斐波那契第 i 项</p>
<p>首先,有一个斐波那契求项的公式<code class="katex-inline">F(n)={1\over\sqrt{5}}(({1+\sqrt{5}\over2})^n-({1-\sqrt{5}\over2})^n)</code>
由上式看作为<code class="katex-inline">F(n)=d(A^n-B^n)</code>
由多项式展开定理可知<code class="katex-inline">F(n)^k=\sum_{i=0}^k(-1)^iC_k^i*A^{n(k-i)}B^{ni}</code></p>
<p>那么所求的即为</p>
<pre><code class="language-katex">\sum_{i=0}^nF(i*c)^k=\sum_{i=0}^k(-1)^iC_k^i*(\sum_{j=0}^n(A^{n(k-i)}B^{ni}))</code></pre>
<p>这题是真的难受了，化简方式用了另一种求一值T，T哭了都。赛后感觉代码也差不多，真的难受啊😭</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;
#define ll long long
#define rep(i, n) for (int i = 0; i &lt; n; ++i)
#define rep2(i, st, ed) for (int i = st; i &lt;= ed; ++i)
#define mk(x, y) make_pair(x, y)
#define pb(x) push_back(x)
const ll mod = 1000000009;
const ll N = 2e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
const ll sqrt5 = 383008016; //x^2 == 5 (mod 1e9+9)的一个解
const ll inv2 = 500000005;
ll fac[N], invfac[N]; //阶乘及其逆元
ll pa[N], pb[N];      //A的次方，B的次方
ll qpow(ll a, ll b)
{
    ll res = 1;
    while (b)
    {
        if (b &amp; 1) res = res * a % mod;
        a = a * a % mod;
        b &gt;&gt;= 1;
    }
    return res;
}
ll C(ll n, ll k)
{ //求C(n,k)组合数
    return fac[n] * invfac[k] % mod * invfac[n - k] % mod;
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    fac[0] = invfac[0] = 1;
    ll inv_sqrt5 = qpow(sqrt5, mod - 2);
    rep2(i, 1, N-1)
    { //求阶乘及其逆元
        fac[i] = fac[i - 1] * (ll)i % mod;
        invfac[i] = qpow(fac[i], mod - 2LL);
    }
    ll A = (1 + sqrt5) * inv2 % mod;       //(1+sqrt(5))/2
    ll B = (1 - sqrt5 + mod) * inv2 % mod; //(1-sqrt(5))/2
    int T;
    cin &gt;&gt; T;
    while (T--)
    {
        ll n, c, k;
        cin &gt;&gt; n &gt;&gt; c &gt;&gt; k;
        ll ans = 0;
        ll ac = qpow(A, c % (mod - 1));
        ll bc = qpow(B, c % (mod - 1));
        pa[0] = pb[0] = 1;
        rep2(i, 1, k)
        {
            pa[i] = pa[i - 1] * ac % mod;
            pb[i] = pb[i - 1] * bc % mod;
        }
        rep(i, k + 1)
        {
            ll q = pa[k - i] * pb[i] % mod;
            ll t;
            if (q == 1)
                t = n % mod;
            else
                t = (q * (qpow(q, n % (mod - 1)) - 1) % mod) * qpow(q - 1, mod - 2) % mod;
            int flag = 1;
            if (i &amp; 1)
                flag = -1;
            ans = (ans + (ll)flag * t % mod * C(k, i) % mod) % mod;
        }
        ans = ans * qpow(inv_sqrt5, k) % mod;
        ans = (ans + mod) % mod;
        cout &lt;&lt; ans &lt;&lt; &quot;\n&quot;;
    }
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4368</wp:post_id>
		<wp:post_date><![CDATA[2020-07-23 21:48:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-23 13:48:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hdu2020-1-1005]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="post_tag" nicename="dxszhankai"><![CDATA[多项式展开]]></category>
		<category domain="category" nicename="number-theory"><![CDATA[数论]]></category>
		<category domain="post_tag" nicename="fibonaccishulie"><![CDATA[斐波那契数列]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
		<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020-%e6%9d%ad%e7%94%b5%e5%a4%9a%e6%a0%a1%ef%bc%88%e4%b8%80%ef%bc%891005%e3%80%81fibonacci-sum]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[full-width]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>2020 杭电多校（一）1009、Leading Robots</title>
		<link>https://tisenye.com/4408</link>
		<pubDate>Wed, 29 Jul 2020 03:32:53 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4408</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6759">题目链接</a></p>
</blockquote>
<p><strong>题意：给一组机器人，机器人有参数初始位置P，加速度A，求有多少个机器人可能领先其他所有机器人（相同不算，必须绝对领先所有）</strong></p>
<p>可将加速度看做斜率，机器人转换位二维坐标上的线，即方程<code class="katex-inline">y=ax+b</code>,其中的x为平面的为一，y为时间变量。
机器人领先条件：</p>
<ol>
<li>初始位置位置最大的第一时刻领先</li>
<li>加速度大于当前领先的机器人</li>
<li>如果有机器人A的初始位置和加速度都大于机器人B，B在任何时候都不可能领先</li>
<li>如果机器人B在超过机器人A时被机器人C超过，则B在任何时候都不可能领先</li>
</ol>
<p>由此可以先对加速度进行由小到大排序（加速度大的必然能超过加速度小的），再使用单调栈维护当前可能领先的机器人序列，单调栈内的元素即有可能成为第一的所有机器人</p>
<hr />
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt;= ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 2e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
bool check(pair&lt;ll,ll&gt; a, pair&lt;ll,ll&gt; b, pair&lt;ll,ll&gt; c){        //判断c能否在b超过a之前超过b
    return (a.second - b.second) * (b.first - c.first) &lt;= (c.second - b.second) * (b.first - a.first);
}
int main(){
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin &gt;&gt; t;
    while(t--){
        int n;
        cin &gt;&gt; n;
        vector&lt;pair&lt;ll, ll&gt;&gt; v(n);
        map&lt;pair&lt;ll, ll&gt;, int&gt; mp;
        rep(i,n){
            cin &gt;&gt; v[i].second &gt;&gt; v[i].first;
            mp[v[i]]++;                         //相同参数的机器人没有可能成为第一
        }
        sort(v.begin(), v.end());               //对加速度进行由小到大的排序
        pair&lt;ll, ll&gt; stk[N];                    //单调上升栈
        int top = 0;
        rep(i, n)
        {
            /*
                1、当初始位置大于当栈顶元素的初始位置，当前元素会领先栈顶元素（加速度大于且初始位置大于，必然领先）
                2、当栈元素大于1个时，判断当前元素有没有可能比栈顶元素更优
            */
            while((top &gt; 0 &amp;&amp; stk[top].second &lt;= v[i].second) || (top &gt; 1 &amp;&amp; check(stk[top-1], stk[top], v[i]))){
                top--;
            }
            stk[++top] = v[i];                  //放入单调队列
        }
        ll sum = 0;
        rep2(i,1, top)
        {
           if(mp[stk[i]] == 1){
               sum++;
           }
        }
        cout &lt;&lt; sum &lt;&lt; &#039;\n&#039;;
    }
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4408</wp:post_id>
		<wp:post_date><![CDATA[2020-07-29 11:32:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-29 03:32:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[2020hdu-1-1009]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="category" nicename="data-structure"><![CDATA[Data Structure]]></category>
		<category domain="category" nicename="thinking"><![CDATA[思维]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020-%e6%9d%ad%e7%94%b5%e5%a4%9a%e6%a0%a1%ef%bc%88%e4%b8%80%ef%bc%891009%e3%80%81leading-robots]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[full-width]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Lyndon 分解</title>
		<link>https://tisenye.com/4420</link>
		<pubDate>Thu, 30 Jul 2020 09:29:40 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4420</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Lyndon分解</h1>
<p>Lyndon串定义：当前仅当这个串的最小后缀是这个串本身  </p>
<p>Lyndon串性质：这个串是它的所有循环表示中字典序最小的</p>
<pre><code class="language-katex">引理一：如果 u 和v都是Lyndon串并且,u&lt;v则uv也是Lyndon串</code></pre>
<pre><code class="language-katex"> 引理二：若字符串v和字符串c满足vc是某个Lyndon串的前缀，则对于字符d>c有vd是Lyndon串</code></pre>
<hr />
<p>定义一个串S的Lyndon分解为一个字符串序列 <code class="katex-inline">A_1,A_2,...,A_m</code>，满足:</p>
<ul>
<li><code class="katex-inline">\forall i \in [1,m],满足A_i是Lyndon串</code></li>
<li><code class="katex-inline">\forall i \in [1, m-1],满足A_i \ge A_{i+1}</code>
这种划分存在且唯一</li>
</ul>
<hr />
<h4>Duval算法</h4>
<p>在O(n)时间复杂度，O(1)空间复杂度求出一个串的Lyndon分解。</p>
<p>在该算法中需维护三个变量i,j,k</p>
<p>维持一个循环不变式：</p>
<ul>
<li><code class="katex-inline">s[:i-1] = s_1s_2...Sg是固定下来的分解，也就是\forall l \in [1,g], s_l是Lyndon串且s_l > s_{l+1}</code></li>
<li><code class="katex-inline">s[i,k-1]=t^h+v (h>1)是没有固定的分解，满足t是Lyndon串，且v是t的可为空的不等于t的前缀且有</code></li>
</ul>
<p>分三种情况讨论：</p>
<ul>
<li><code class="katex-inline">当s[k]=s[j]时，直接k \gets k+1,j \gets j+1,周期k-j继续保持</code></li>
<li><code class="katex-inline">当s[k]>s[j]时，由引理2可知v+s[k]是Lyndon串，由于Lyndon分解需要满足s_i \ge s_{i+1},所以不断向前合并，最终整个t^h+v+s[k]形成了一个新的Lyndon串</code></li>
<li><code class="katex-inline">当s[k]>s[j]是,t^h的分解被固定下来，算法从v的开头处重新开始</code></li>
</ul>
<p><a href="https://www.luogu.com.cn/blog/wucstdio/solution-p6127">参考博客</a>
<a href="index.php/2020/07/30/duval-template/">模板</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4420</wp:post_id>
		<wp:post_date><![CDATA[2020-07-30 17:29:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-30 09:29:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[lyndonword]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="post_tag" nicename="duval-algorithm"><![CDATA[Duval算法]]></category>
		<category domain="post_tag" nicename="lydonstring"><![CDATA[Lyndon串]]></category>
		<category domain="category" nicename="study"><![CDATA[Study]]></category>
		<category domain="category" nicename="string"><![CDATA[字符串]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[lydon-%e5%88%86%e8%a7%a3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[lydonword]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Duval模板-----Lyndon分解</title>
		<link>https://tisenye.com/4480</link>
		<pubDate>Thu, 30 Jul 2020 13:11:42 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4480</guid>
		<description></description>
		<content:encoded><![CDATA[<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt; //luogu 6114模板题
using namespace std;
#define ll long long
#define rep(i, n) for (int i = 0; i &lt; n; ++i)
#define rep2(i, st, ed) for (int i = st; i &lt;= ed; ++i)
#define mk(x, y) make_pair(x, y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 2e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    string s;
    cin &gt;&gt; s;
    int len = s.length();
    int i = 0;
    ll ans = 0;
    while (i &lt; len)
    {
        int j = i, k = i + 1;
        while (k &lt; len &amp;&amp; s[j] &lt;= s[k])  //寻找循环
        {
            if (s[j] &lt; s[k])    //并入循环串
                j = i;
            else
                j++; //相同，找下一个匹配循环串的字符
            k++;
        }
        while (i &lt;= j)
        {
            ans ^= (i + (k - j));
            i += k - j; //每次跳找到的循环字符串一次
        }
    }
    cout &lt;&lt; ans &lt;&lt; endl;
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4480</wp:post_id>
		<wp:post_date><![CDATA[2020-07-30 21:11:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-30 13:11:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[duval-template]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="duval-algorithm"><![CDATA[Duval算法]]></category>
		<category domain="post_tag" nicename="lyndonfenjie"><![CDATA[Lyndon分解]]></category>
		<category domain="category" nicename="string"><![CDATA[字符串]]></category>
		<category domain="post_tag" nicename="template"><![CDATA[模板]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[duval%e6%a8%a1%e6%9d%bf-lyndon%e5%88%86%e8%a7%a3]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>最小表示法</title>
		<link>https://tisenye.com/4488</link>
		<pubDate>Thu, 30 Jul 2020 14:27:12 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4488</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>最小表示发定义：字符串S的循环同构中字典序最小的串</h3>
<p>例：S = &quot;badc&quot;  ,  其循环同构串有  ''dcba'', ''cbad&quot;, &quot;adcb&quot;, &quot;badc&quot; 这四种，其中字典序最小的为 &quot;abcd&quot;</p>
<p>使用Duval算法求出 SS 串（放大一倍S串，2个S串拼接），找到第一个跨过第 ∣S∣个位置的 Lyndon 串，通过 Lyndon 分解的性质可以得到，该串的首字符就是 SS 的最小表示法的首字符。</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;     //luogu P1368
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt;= ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 2e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
int Duval(vector&lt;ll&gt; v){
    int ans;
    int i = 0;
    int n = v.size();
    while (i &lt; n/2){
        ans = i;
        int j = i, k = i + 1;
        while (j &lt; n &amp;&amp; v[j] &lt;= v[k])
        {
            if(v[j] &lt; v[k]){
                j = i;
            }else{
                j++;
            }
            k++;
        }
        while(i &lt;= j){
            i += k - j;
        }
    }
    return ans;
}
int main(){
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    cin &gt;&gt; n;
    vector&lt;ll&gt; v(n*2);
    rep(i, n)
    {
        cin &gt;&gt; v[i];
        v[i + n] = v[i];
    }
    ll ans = Duval(v);
    rep(i, n)
    {
        if(i)
            cout &lt;&lt; &quot; &quot;;
        cout &lt;&lt; v[i + ans];
    }
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4488</wp:post_id>
		<wp:post_date><![CDATA[2020-07-30 22:27:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-30 14:27:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[zxbiaoshifa]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="post_tag" nicename="duval-algorithm"><![CDATA[Duval算法]]></category>
		<category domain="post_tag" nicename="lyndonfenjie"><![CDATA[Lyndon分解]]></category>
		<category domain="category" nicename="string"><![CDATA[字符串]]></category>
		<category domain="post_tag" nicename="zuixiaobiaoshifa"><![CDATA[最小表示法]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e6%9c%80%e5%b0%8f%e8%a1%a8%e7%a4%ba%e6%b3%95]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>2020 杭电多校（一）1011、Minimum Index</title>
		<link>https://tisenye.com/4490</link>
		<pubDate>Fri, 31 Jul 2020 04:25:42 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4490</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=6761">题目链接</a></p>
</blockquote>
<p><strong>题意：求一个串的所有前缀的最小后缀</strong></p>
<p>根据Lyndon串的性质，为最小后缀字典序。将该串进行Lyndon分解，那么当前位置 i 的最小后缀应该是左边离得最近的Lyndon串的首位，如果有循环就跳一次循环节，因为这样才能字典序最小（长度短）。</p>
<p><a href="https://www.cnblogs.com/ctyakwf/p/13384279.html">参考博客</a>
这篇博客巧妙的利用了Lyndon的性质，进行了简单且高效的计算，相比其他的KMP和DP啥的好的不是一点点。   对于Lyndon的性质有了更充分的理解👍</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt;= ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 1e6 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
ll f[N];
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    f[0] = 1;
    rep2(i, 1, N)
    {
        f[i] = f[i - 1] * 1112L;
        f[i] %= mod;
    }
    int t;
    cin &gt;&gt; t;
    while(t--){
        string s;
        cin &gt;&gt; s;
        int len = s.length();
        int i = 0;
        vector&lt;ll&gt; p(len);
        while (i &lt; len)
        {
            int j = i, k = i + 1;
            p[i] = i;
            while(k &lt; len &amp;&amp; s[j] &lt;= s[k]){
                if(s[j] &lt; s[k]){
                    p[k] = i;
                    j = i;
                }else{
                    p[k] = p[j] + (k - j);
                    j++;
                }
                k++;
            }
            while(i &lt;= j){
                i += k - j;
            }
        }
        ll ans = 0;
        rep(i, len)
        {
            ans += f[i] * (p[i]+1LL) % mod;
        }
        cout &lt;&lt; ans % mod &lt;&lt; endl;
    }
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4490</wp:post_id>
		<wp:post_date><![CDATA[2020-07-31 12:25:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-07-31 04:25:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hdu2020-1-1011]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="post_tag" nicename="duval-algorithm"><![CDATA[Duval算法]]></category>
		<category domain="post_tag" nicename="lyndonfenjie"><![CDATA[Lyndon分解]]></category>
		<category domain="category" nicename="string"><![CDATA[字符串]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[2020-%e6%9d%ad%e7%94%b5%e5%a4%9a%e6%a0%a1%ef%bc%88%e4%b8%80%ef%bc%891011%e3%80%81minimum-index]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>DP进阶之路--------线性DP例3：顺序对齐</title>
		<link>https://tisenye.com/4496</link>
		<pubDate>Sat, 08 Aug 2020 13:00:26 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4496</guid>
		<description></description>
		<content:encoded><![CDATA[<p>题意：考虑两个字符串右对齐的最佳解法。 例如，有一个右对齐方案中字符串是AADDEFGGHC和ADCDEGH。
第一行AAD DEFGGHC
第二行ADCDE  GH
每一个数值匹配的位置值2分，一段连续的空格值-1分。 所以总分是匹配点的2倍减去连续空格的段数， 在上述给定的例子中，6个位置（A，D，D，E，G，H） 匹配， 三段空格， 所以得分2×6+3×(-1)=9， 注意， 我们并不处罚左边的不匹配位置。 若匹配的位置是两个不同的字符，则既不得分也不失分。 请你写个程序找出最佳右对齐方案。</p>
<p>输入：
输入文件包含两行，每行一个字符串，最长50个字符。字符全部是大字字母。</p>
<p>输出：
一行，为最佳对齐的得分。</p>
<p>[样例]
input：
AADDEFGGHC
ADCDEGH </p>
<p>output：
9</p>
<p>思路：</p>
<ol>
<li>状态设计为f[i][j]前a串的第i个位置和b串的第j个位置当前所能匹配的最大值。</li>
<li>如果当前a[i] == b[i]，那么f[i][j] = f[i-1][j-1] + 2</li>
<li>如果在当前出现空格，枚举空格在产生的位置和在那个串产生，转移为：
<ul>
<li>f[i][j] = f[i][k] - 1</li>
<li>f[i][j] = f[k][j] - 1</li>
</ul></li>
</ol>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt;= ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 2e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
int dp[N][N];
int main(){
    ios::sync_with_stdio(false);
    cin.tie(0),cout.tie(0);
    string a, b;
    cin&gt;&gt;a&gt;&gt;b;
    int n = a.length(), m = b.length();
    rep(i, n){
        rep(j, m){
            if(a[i] == b[j]){
                dp[i+1][j+1] = dp[i][j] + 2;
            }
            rep(k,i){
                dp[i+1][j+1] = max(dp[i+1][j+1], dp[k+1][j+1] - 1);
            }
            rep(k,j){
                dp[i+1][j+1] = max(dp[i+1][j+1], dp[i+1][k+1] - 1);
            }
            dp[i+1][j+1] = max(dp[i+1][j+1], dp[i][j]);
        }
    }
    cout&lt;&lt;dp[n][m]&lt;&lt;endl;
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4496</wp:post_id>
		<wp:post_date><![CDATA[2020-08-08 21:00:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-08-08 13:00:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dpjjzl-ssdq]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="category" nicename="dp"><![CDATA[DP]]></category>
		<category domain="post_tag" nicename="dp"><![CDATA[DP]]></category>
		<category domain="post_tag" nicename="dpjjzl"><![CDATA[DP进阶之路]]></category>
		<category domain="post_tag" nicename="onlinedp"><![CDATA[线性DP]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[dp%e8%bf%9b%e9%98%b6%e4%b9%8b%e8%b7%af-%e7%ba%bf%e6%80%a7dp%e4%be%8b3%ef%bc%9a%e9%a1%ba%e5%ba%8f%e5%af%b9%e9%bd%90]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[16]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>ISAP（究极优化版）</title>
		<link>https://tisenye.com/4510</link>
		<pubDate>Mon, 28 Sep 2020 05:27:26 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4510</guid>
		<description></description>
		<content:encoded><![CDATA[<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;     //O(n^2m)
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt;= ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 2e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
struct nod{
    ll next, v, w;
} edge[N&lt;&lt;1];
int head[N], tot;
int s, t, n, m;
ll maxflow;
void add(int u ,int v, int w = 1){
    edge[tot].next = head[u],edge[tot].v = v,edge[tot].w = w,head[u] = tot++;
    edge[tot].next = head[v],edge[tot].v = u,edge[tot].w = 0,head[v] = tot++;
}
int dep[N], gap[N], cur[N];
queue&lt;ll&gt; q;
void bfs(){
    memset(dep, -1, sizeof(dep));
    memset(gap, 0, sizeof(gap));
    q.push(t), dep[t] = 0, gap[0] = 1;
    while(!q.empty()){
        int u = q.front();
        q.pop();
        for (int i = head[u]; ~i; i = edge[i].next){
            int v = edge[i].v;
            if(dep[v] != -1)    //防止重复修改某个点
                continue;
            q.push(v);
            dep[v] = dep[u] + 1, gap[dep[v]]++;
        }
    }
}
int dfs(int u, ll flow){
    if(u == t){
        maxflow += flow;
        return flow;
    }
    ll used = 0;
    for (int i = cur[u]; ~i; i = edge[i].next){
        cur[u] = i;
        int v = edge[i].v;
        if(edge[i].w &amp;&amp; dep[v] + 1 == dep[u]){
            int d = dfs(v, min(flow - used, edge[i].w));
            if(d &gt; 0){
                edge[i].w -= d;
                edge[i ^ 1].w += d;
                used += d;
            }
            if(used == flow)
                return used;
        }
    }
    --gap[dep[u]];
    // gap优化，如果出现断层，无法到达t，直接而结束。
    if(!gap[dep[u]])
        dep[s] = n + 1;
    dep[u]++;
    gap[dep[u]]++;
    return used;
}
void ISAP(int s, int t){
    bfs();      //初始化标记深度
    while(dep[s] &lt; n){
        memcpy(cur, head, sizeof(head));    //弧优化
        dfs(s, INF);        //寻找增广路，最多跑n-dep跳增广路
    }
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0),cout.tie(0);
    memset(head, -1, sizeof(head));
    maxflow = 0;
    cin &gt;&gt; n &gt;&gt; m &gt;&gt; s &gt;&gt; t;
    rep(i, m)
    {
        ll u, v, w;
        cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;
        add(u, v, w);
    }
    ISAP(s, t);
    cout &lt;&lt; maxflow &lt;&lt; endl;
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4510</wp:post_id>
		<wp:post_date><![CDATA[2020-09-28 13:27:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-09-28 05:27:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[isaptemplate]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="graphic"><![CDATA[图论]]></category>
		<category domain="post_tag" nicename="template"><![CDATA[模板]]></category>
		<category domain="category" nicename="networkflow"><![CDATA[网络流]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[isap%ef%bc%88%e7%a9%b6%e6%9e%81%e4%bc%98%e5%8c%96%e7%89%88%ef%bc%89]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>二分图一些概念、性质、定理</title>
		<link>https://tisenye.com/4512</link>
		<pubDate>Mon, 28 Sep 2020 05:55:19 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4512</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>二分图：把一个图的顶点划分为两个不相交集U和V，使得每一条边都分别连接U、V中的定点。如果存在这样的划分，则此图为一个二分图。</p>
</blockquote>
<h5>匹配</h5>
<p>匹配是一个边的集合，其中任意两条边都没有公共定点</p>
<h5>最大匹配</h5>
<p>一个图所有匹配中，所含匹配边数最多的匹配，称为这个图中的最大匹配</p>
<h5>完美匹配</h5>
<p>如果一个图的某个匹配中，所有的定点都是匹配点，那么它就是一个完美匹配</p>
<h5>定义</h5>
<p><strong>最大匹配数</strong>：最大匹配的匹配边的数目
<strong>最小点覆盖数</strong>：选取最少的点，使任意一条边至少有一个端点被选择
<strong>最大独立数</strong>：选取最多的点，使任意所选两点均不相连
<strong>链</strong>：满足任意两点 x, y 要么 x 可以到达 y 要么 y 可以到达 x 的点集 （即使只有一个点）
<strong>反链</strong>：任意两点没有路径的点集，链上任意两个点x, y，满足 x 不能到达 y，且 y 也不能到达 x。
<strong>最长链</strong>：点的个数最多的链（可以有多个）
<strong>最长反链</strong>：点的个数最多的反链（可以有多个）
<strong>最小链覆盖数</strong>：对于一个DAG（有向无环图），选取最少路径，使得每个顶点属于且仅属于一条路径包括单点（链）。即，用最少的链覆盖所有顶点。
<strong>最小反链覆盖数</strong>：用最少的反链覆盖所有顶点
<strong>偏序集高度</strong>：最长链的元素个数
<strong>偏序集宽度</strong>：最长反链中的元素个数</p>
<h5>定理</h5>
<ol>
<li>最大匹配数 = 最小点覆盖数（Konig定理）</li>
<li>最大匹配数 = 最大独立数</li>
<li>最小不想交路径覆盖 = 最小链覆盖数 = 最长反链长度 = 顶点数 - 最大匹配数 = 偏序集宽度 （Dilworth定理）</li>
<li>最小反链覆盖数 = 最长链长度 = 偏序集深度 （Dilworth定理）</li>
</ol>
<p><a href="http://tisenye.com/index.php/2020/10/09/hungry/">匈牙利算法</a></p>
<p><a href="http://tisenye.com/index.php/2020/09/28/isaptemplate/">网络流ISAP</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4512</wp:post_id>
		<wp:post_date><![CDATA[2020-09-28 13:55:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-09-28 05:55:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[binarygraphic]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="binarygraphic"><![CDATA[二分图]]></category>
		<category domain="category" nicename="graphic"><![CDATA[图论]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e4%ba%8c%e5%88%86%e5%9b%be%e4%b8%80%e4%ba%9b%e6%a6%82%e5%bf%b5%e3%80%81%e6%80%a7%e8%b4%a8%e3%80%81%e5%ae%9a%e7%90%86]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>取数字（最小割使用）</title>
		<link>https://tisenye.com/4519</link>
		<pubDate>Tue, 29 Sep 2020 12:09:36 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4519</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>网络流经典建模，最小割=最大流的使用</p>
</blockquote>
<h4>最小割</h4>
<p>最小割就是将一个图用最小的代价（把边切割开）将图切成一个二分图，<strong>最小割==最大流</strong></p>
<h4><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1565">HDU 1565</a></h4>
<h5>题意：</h5>
<p>给定一个矩阵，每个矩阵的位子上都有一个数字，取数字，求所有取出来的数字最大和。相邻的格子不能取（四周）。</p>
<h5>分析：</h5>
<ul>
<li>首先从相邻这个规则进行考虑，也就是上下左右无法与自己兼容，上下左右和x的位子是差1的（一步就能到达），也就意味着建图时候的点的奇偶性和x相反（加一奇偶必然不同）。</li>
<li>直观的建图想法是直接拉超级源和超级汇把奇偶拉成一个二分图，能走的连边，也就是取数字，但是这样细想发现无法解决不能选相邻边的问题。</li>
<li>如果反向思考，将图中所有点中删去最小的非法（导致相邻）的点会怎么样呢？这就是这题的最小割思想了，<strong>最小割在这题里的意义就是完成一次使所有存在的点不相邻的最小花费</strong>。为什么这样能保证结果为最大值呢？yeah，当所有权值和减去最小花费剩下的就是最大可以取的数字和了（<strong>最大点权独立集=所有点权-最小点权覆盖</strong>）
<h5>步骤：</h5>
<ol>
<li>先将点进行奇偶分类</li>
<li>s点连奇数点，t点连偶数点。边权为点权值（相反也没关系，二分图就行）</li>
<li>相邻点连边，由于相邻点不能被割开（奇偶只能二选一），所以边权为INF</li>
<li>跑最大流，将所有点权将最大流即可</li>
</ol></li>
</ul>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;     //O(n^2m)
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt;= ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 4e5 + 200;
const ll INF = 0x3f3f3f3f;
const double eps = 1e-7;
struct nod{
    ll next, v, w;
} edge[N&lt;&lt;1];
int head[N], tot;
int s, t, n, m;
ll maxflow;
void add(int u ,int v, ll w = 1){
    edge[tot].next = head[u],edge[tot].v = v,edge[tot].w = w,head[u] = tot++;
    edge[tot].next = head[v],edge[tot].v = u, edge[tot].w = 0, head[v] = tot++;
}
int dep[N], gap[N], cur[N];
queue&lt;ll&gt; q;
void bfs(){
    memset(dep, -1, sizeof(dep));
    memset(gap, 0, sizeof(gap));
    q.push(t), dep[t] = 0, gap[0] = 1;
    while(!q.empty()){
        int u = q.front();
        q.pop();
        for (int i = head[u]; ~i; i = edge[i].next){
            int v = edge[i].v;
            if(dep[v] != -1)    //防止重复修改某个点
                continue;
            q.push(v);
            dep[v] = dep[u] + 1, gap[dep[v]]++;
        }
    }
}
ll dfs(int u, ll flow){
    if(u == t){
        maxflow += flow;
        return flow;
    }
    ll used = 0;
    for (int i = cur[u]; ~i; i = edge[i].next){
        cur[u] = i;
        int v = edge[i].v;
        if(edge[i].w &amp;&amp; dep[v] + 1 == dep[u]){
            ll d = dfs(v, min(flow - used, edge[i].w));
            if(d &gt; 0){
                edge[i].w -= d;
                edge[i ^ 1].w += d;
                used += d;
            }
            if(used == flow)
                return used;
        }
    }
    --gap[dep[u]];
    // gap优化，如果出现断层，无法到达t，直接而结束。
    if(!gap[dep[u]])
        dep[s] = n + 1;
    dep[u]++;
    gap[dep[u]]++;
    return used;
}
void ISAP(int s, int t){
    bfs();      //初始化标记深度
    while(dep[s] &lt; n){
        memcpy(cur, head, sizeof(head));    //弧优化
        dfs(s, INF);        //寻找增广路，最多跑n-dep跳增广路
    }
}
int g[200][200];
int gox[] = {1, 0, -1, 0}, goy[] = {0, -1, 0, 1};
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0),cout.tie(0);
    while(cin&gt;&gt;n){
        memset(head, -1, sizeof(head));
        maxflow = 0;
        m = n;
        s = 0, t = n*m+1;
        ll sum = 0;
        rep2(i,1,n){
            rep2(j,1,m){
                cin&gt;&gt;g[i][j];
                sum += g[i][j];
                if((i+j)%2){
                    add(s, (i-1)*m+j, g[i][j]);
                }else{
                    add((i-1)*m+j, t, g[i][j]);
                }
            }
        }
        rep2(i, 1, n){
            rep2(j, 1, m){
                if((i+j)%2){
                    rep(k, 4){
                        int tmpx = i + gox[k], tmpy = j +goy[k];
                        if(tmpx &lt; 1 || tmpy &lt; 1 || tmpx &gt; n || tmpy &gt; m) continue;
                        add((i-1)*m+j, (tmpx-1)*m+tmpy, INF);
                    }
                }
            }
        }
        n = t+1;
        ISAP(s, t);
        cout &lt;&lt; sum -  maxflow &lt;&lt; endl;
    }
    return 0;
}</code></pre>
<h4><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3657">HDU 3657</a></h4>
<h5>题意：</h5>
<p>和之前的一样，但是现在相邻的边可以选，但是代价是减去2×(x&amp;y)的边，x、y为边相邻两个点的点权。而且有一些点必须选。</p>
<h5>分析：</h5>
<ul>
<li>大致思路和之前差不多，但是改变的两个地方需要思考一下。
<ol>
<li>如何改变能够选择相邻的边？</li>
<li>如何保证有些点一定要被选到？ </li>
</ol></li>
<li>考虑之前对于边权的选择，相邻之间连INF表示不能从中间断开（也就是两个都选），那么可以选的时候应该将边权设置为相应的代价。s、t连边同理，有些点必须被选那么相连的边权应为INF</li>
</ul>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;     //O(n^2m)
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt;= ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 4e5 + 200;
const ll INF = 0x3f3f3f3f;
const double eps = 1e-7;
struct nod{
    ll next, v, w;
} edge[N&lt;&lt;1];
int head[N], tot;
int s, t, n, m;
ll maxflow;
void add(int u ,int v, ll w = 1){
    edge[tot].next = head[u],edge[tot].v = v,edge[tot].w = w,head[u] = tot++;
    edge[tot].next = head[v],edge[tot].v = u, edge[tot].w = 0, head[v] = tot++;
}
int dep[N], gap[N], cur[N];
queue&lt;ll&gt; q;
void bfs(){
    memset(dep, -1, sizeof(dep));
    memset(gap, 0, sizeof(gap));
    q.push(t), dep[t] = 0, gap[0] = 1;
    while(!q.empty()){
        int u = q.front();
        q.pop();
        for (int i = head[u]; ~i; i = edge[i].next){
            int v = edge[i].v;
            if(dep[v] != -1)    //防止重复修改某个点
                continue;
            q.push(v);
            dep[v] = dep[u] + 1, gap[dep[v]]++;
        }
    }
}
ll dfs(int u, ll flow){
    if(u == t){
        maxflow += flow;
        return flow;
    }
    ll used = 0;
    for (int i = cur[u]; ~i; i = edge[i].next){
        cur[u] = i;
        int v = edge[i].v;
        if(edge[i].w &amp;&amp; dep[v] + 1 == dep[u]){
            ll d = dfs(v, min(flow - used, edge[i].w));
            if(d &gt; 0){
                edge[i].w -= d;
                edge[i ^ 1].w += d;
                used += d;
            }
            if(used == flow)
                return used;
        }
    }
    --gap[dep[u]];
    // gap优化，如果出现断层，无法到达t，直接而结束。
    if(!gap[dep[u]])
        dep[s] = n + 1;
    dep[u]++;
    gap[dep[u]]++;
    return used;
}
void ISAP(int s, int t){
    bfs();      //初始化标记深度
    while(dep[s] &lt; n){
        memcpy(cur, head, sizeof(head));    //弧优化
        dfs(s, INF);        //寻找增广路，最多跑n-dep跳增广路
    }
}
int g[200][200];
int gox[] = {1, 0, -1, 0}, goy[] = {0, -1, 0, 1};
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0),cout.tie(0);
    while(cin&gt;&gt;n){
        memset(head, -1, sizeof(head));
        maxflow = 0;
        ll choos;
        cin&gt;&gt;m&gt;&gt;choos;
        s = 0, t = n*m+1;
        ll sum = 0;
        rep2(i,1,n){
            rep2(j,1,m){
                cin&gt;&gt;g[i][j];
                sum += g[i][j];
                if((i+j)%2){
                    add(s, (i-1)*m+j, g[i][j]);
                }else{
                    add((i-1)*m+j, t, g[i][j]);
                }
            }
        }
        rep2(i, 1, n){
            rep2(j, 1, m){
                if((i+j)%2){
                    rep(k, 4){
                        int tmpx = i + gox[k], tmpy = j +goy[k];
                        if(tmpx &lt; 1 || tmpy &lt; 1 || tmpx &gt; n || tmpy &gt; m) continue;
                        add((i-1)*m+j, (tmpx-1)*m+tmpy, 2*(g[i][j]&amp;g[tmpx][tmpy]));
                    }
                }
            }
        }
        while(choos--){
            ll x,y;
            cin&gt;&gt;x&gt;&gt;y;
            if((x+y)%2){
                add(s, (x-1)*m+y, INF);
            }else{
                add((x-1)*m+y, t, INF);
            }
        }
        n = t+1;
        ISAP(s, t);
        cout &lt;&lt; sum -  maxflow &lt;&lt; endl;
    }
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4519</wp:post_id>
		<wp:post_date><![CDATA[2020-09-29 20:09:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-09-29 12:09:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[networkflowmodeling]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="graphic"><![CDATA[图论]]></category>
		<category domain="post_tag" nicename="%e6%9c%80%e5%a4%a7%e6%b5%81"><![CDATA[最大流]]></category>
		<category domain="post_tag" nicename="%e6%9c%80%e5%b0%8f%e5%89%b2"><![CDATA[最小割]]></category>
		<category domain="category" nicename="networkflow"><![CDATA[网络流]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e7%bd%91%e7%bb%9c%e6%b5%81%e5%bb%ba%e6%a8%a1%ef%bc%88%e6%9c%80%e5%b0%8f%e5%89%b2%e4%bd%bf%e7%94%a8%ef%bc%89]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Tools</title>
		<link>https://tisenye.com/tools</link>
		<pubDate>Fri, 09 Oct 2020 14:52:45 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?page_id=4558</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:file {"id":4563,"href":"https://tisenye.com/wp-content/uploads/2020/10/dp进阶之路-1.8-1.pdf"} -->
<div class="wp-block-file"><a href="https://tisenye.com/wp-content/uploads/2020/10/dp进阶之路-1.8-1.pdf">dp进阶之路-1.8</a><a href="https://tisenye.com/wp-content/uploads/2020/10/dp进阶之路-1.8-1.pdf" class="wp-block-file__button" download>下载</a></div>
<!-- /wp:file -->

<!-- wp:file {"id":4580,"href":"https://tisenye.com/wp-content/uploads/2020/10/计算几何-2.pdf"} -->
<div class="wp-block-file"><a href="https://tisenye.com/wp-content/uploads/2020/10/计算几何-2.pdf">计算几何</a><a href="https://tisenye.com/wp-content/uploads/2020/10/计算几何-2.pdf" class="wp-block-file__button" download>下载</a></div>
<!-- /wp:file -->

<!-- wp:file {"id":4584,"href":"https://tisenye.com/wp-content/uploads/2020/10/模板-1.pdf"} -->
<div class="wp-block-file"><a href="https://tisenye.com/wp-content/uploads/2020/10/模板-1.pdf">模板</a><a href="https://tisenye.com/wp-content/uploads/2020/10/模板-1.pdf" class="wp-block-file__button" download>下载</a></div>
<!-- /wp:file -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4558</wp:post_id>
		<wp:post_date><![CDATA[2020-10-09 22:52:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-09 14:52:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[tools]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
		<wp:meta_value><![CDATA[709304b3-802d-4a98-ba1c-0b733060dfd8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4644]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Home</title>
		<link>https://tisenye.com/</link>
		<pubDate>Mon, 12 Nov 2018 11:50:12 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://demo.themeisle.com/hestia-default/hestia-front/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4594</wp:post_id>
		<wp:post_date><![CDATA[2018-11-12 11:50:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-12 11:50:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[065c0-hestia-front]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Blog</title>
		<link>https://tisenye.com/065c0-blog</link>
		<pubDate>Mon, 12 Nov 2018 11:50:12 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://demo.themeisle.com/hestia-default/blog/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4595</wp:post_id>
		<wp:post_date><![CDATA[2018-11-12 11:50:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-11-12 11:50:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[065c0-blog]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[4401]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>个人站点成功建立</title>
		<link>https://tisenye.com/4598</link>
		<pubDate>Fri, 19 Jun 2020 07:04:31 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://101.37.29.215/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>    其实很早就有搭建一个个人博客的想法，但是一直拖着😂。忙里偷闲整了一手，期间波折多多，但也有所收货吧。</p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p>                                                                                            </p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->
<!-- wp:paragraph -->
<p>                         </p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4598</wp:post_id>
		<wp:post_date><![CDATA[2020-06-19 15:04:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-06-19 07:04:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hello-world-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="writing"><![CDATA[信手之作]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Foot</title>
		<link>https://tisenye.com/foot</link>
		<pubDate>Wed, 23 Jun 2021 05:35:24 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?page_id=4654</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4654</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 13:35:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 05:35:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[foot]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
		<wp:meta_value><![CDATA[80f73d9d-2d70-4112-aef6-264f0617b7f8]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Character</title>
		<link>https://tisenye.com/character</link>
		<pubDate>Fri, 31 Dec 2021 05:38:54 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?page_id=4861</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph {"textColor":"black","backgroundColor":"accent","fontSize":"medium"} -->
<p class="has-text-color has-background has-medium-font-size has-black-color has-accent-background-color">我曾经7次鄙视自己的灵魂。它本可以进取却故作谦卑；它在空虚时用爱欲填充；在困难和容易之间选择了容易；它犯了错，却借由别人也会犯错来宽慰自己；它自由软弱却把他认为生命的坚韧；它鄙夷一张丑恶的嘴脸，却不知那正是自己面具中的一副；它侧身于生活的污泥，虽不甘心，却又畏首畏尾。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"textColor":"black","customBackgroundColor":"#3eaef3"} -->
<p style="background-color:#3eaef3" class="has-text-color has-background has-black-color">少年就是少年，他们看春风不喜，看夏蝉不烦，看秋风不悲，看冬雪不叹，看满身富贵懒察觉，看不公不允敢面对，只因他们是少年。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"customBackgroundColor":"#f7ad5e"} -->
<p style="background-color:#f7ad5e" class="has-background">社会十大俗气：腰有十文钱必振衣作响；每与人言必谈及贵戚；遇美人必急索登床；见到问路之人必作傲睨之态；与朋友相聚便喋喋高吟其酸腐诗文；头已花白却喜唱艳曲；施人一小惠便广布于众；与人交谈便借刁言以逞才；借人之债时其脸如丐，被人索偿时则其态如王；见人常多蜜语而背地却常揭人短处。</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4861</wp:post_id>
		<wp:post_date><![CDATA[2021-12-31 13:38:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-31 05:38:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[character]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_customize_changeset_uuid]]></wp:meta_key>
		<wp:meta_value><![CDATA[e749abc4-1ea7-44b5-97f1-b61b0413c66e]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[page-templates/template-fullwidth.php]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Poetry</title>
		<link>https://tisenye.com/poetry</link>
		<pubDate>Fri, 31 Dec 2021 05:54:26 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?page_id=4880</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4880</wp:post_id>
		<wp:post_date><![CDATA[2021-12-31 13:54:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-31 05:54:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[poetry]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
														<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>博弈论 SG函数</title>
		<link>https://tisenye.com/4531</link>
		<pubDate>Fri, 09 Oct 2020 06:55:27 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4531</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>Impartial Combinatorial Games</p>
</blockquote>
<h3>巴什博奕</h3>
<p>模型：一堆n个物品，两个人轮流从中取出1~m个，最后取光者胜（不能继续取的人输）。
<strong>同余定理：n=k∗(m+1)+r</strong>，先者拿走r个，那么后者无论拿走多少都大于1小于m+1，先手必然还有一次拿的机会而且这次机会必然能直接拿完，那么先手必赢。反之若n=k∗(m+1)，那么先手无论怎样都会输（情形反转）。</p>
<pre><code class="language-cpp">if (n % (m + 1))  return false;
else  return true;</code></pre>
<h3>威佐夫博弈</h3>
<p>模型：有两堆各若干物品，两个人轮流从任意一堆中至少取出一个或者从两堆中取出同样多的物品，规定每次至少取一个，至多不限，最后取光者胜。
<strong>求出差值，差值×黄金分割比 == 最小值的话后手赢，否者先手赢。</strong></p>
<pre><code class="language-cpp">double r = (sqrt(5) + 1) / 2;
int d = abs(a - b) * r;
if (d != min(a, b))  return true;
else  false;</code></pre>
<h3>斐波那契博弈</h3>
<p>模型：一堆石子有n个，两人轮流取，先取者第一次可以去任意多个，但是不能取完，以后每次取的石子数不能超过上次取子数的2倍。取完者胜。
<strong>先手胜当且仅当n不是斐波那契数。</strong></p>
<pre><code class="language-cpp">f[0] = f[1] = 1;
for (int i = 0; f[i - 1] &lt; n; i++)
{
    f[i] = f[i - 1] + f[i - 2];
    if (f[i] == n)  return true;
}
return false;</code></pre>
<h3>环形博弈</h3>
<p>模型：n个石子围成一个环,每次取一个或者取相邻的2个（每个石子有序号）
<strong>根据题目，待补</strong></p>
<h3>尼姆博弈</h3>
<p>模型：有n堆物品，两人轮流取，每次取某堆中不少于1个，最后取完者胜。
<strong>假设只有一堆，先手必赢；假设只有两堆且数量相同，先手必输（先手拿多少，后手在另一堆也拿多少，维持局面，），如果两堆数量不同，先手将多的那堆拿成少的那堆一样的（情形发转），先手必胜。多堆情况，通过异或运算：如果所有堆数异或和为0，后手必胜（参考两堆相同），否则先手必胜</strong></p>
<pre><code class="language-cpp">int res = 0;
for (int i = 1; i &lt;= n; i++)
    res ^= arr[i];
if (res)  return true;
else  return false;</code></pre>
<h3>SG函数</h3>
<p>我们可以定义有向图游戏的和。设G1,G2,...Gn为n个“有向图”游戏的和(Sum)，游戏G的移动规则是：任选一个子游戏Gi并移动上面的棋子。
定义mex(minimal excludant)运算，这是施加于一个集合的运算，表示最小的不属于这个集合的非负整数。
例如：mex{0,1,2,4}=3、mex{2,3,5}=0、mex{}=0。
对于一个给定的有向无环图，定义关于图的每个顶点的Sprague-Garundy函数如下：g(x)=mex{ g(y) | y是x的后继 }。
<strong>SG定理就是：sg(G)=sg(G1)∧sg(G2)∧....∧sg(Gn)。即，游戏的SG函数值就是它的所有子游戏的SG函数值的异或。</strong>
SG函数的意义是将原游戏缩小规模，分而治之，再将结果异或（Nim游戏）。</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;           //hdu 1848
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt;= ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 2e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
int f[18];
int SG[N], S[N];
//SG函数,S数组存后继状态的SG函数值的集合，f为每次操作可以取的值
void getSG(int n){
    memset(SG, 0, sizeof(SG));
    for (int i = 1; i &lt;= n; i++){
        memset(S, 0, sizeof(S));
        for (int j = 0; f[j] &lt;= i &amp;&amp; j &lt;= 20; j++){
            S[SG[i - f[j]]] = 1;
        }
        for (int j = 0;;j++){
            if(!S[j]){
                SG[i] = j;
                break;
            }
        }
    }
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0),cout.tie(0);
    int n, m, p;
    f[0] = 1;
    f[1] = 1, f[2] = 2;
    for (int i = 3; i &lt;= 16; i++)
    {
        f[i] = f[i - 1] + f[i - 2];
    }
    getSG(1000);
    while (~scanf(&quot;%d%d%d&quot;, &amp;m, &amp;n, &amp;p) &amp;&amp; (m + n + p))
    {
        if (SG[n] ^ SG[m] ^ SG[p])
        {
            printf(&quot;Fibo\n&quot;);
        }
        else
        {
            printf(&quot;Nacci\n&quot;);
        }
    }
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4531</wp:post_id>
		<wp:post_date><![CDATA[2020-10-09 14:55:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-09 06:55:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[games]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="post_tag" nicename="ganmes"><![CDATA[ganmes]]></category>
		<category domain="category" nicename="games"><![CDATA[博弈论]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e5%8d%9a%e5%bc%88%e8%ae%ba-sg%e5%87%bd%e6%95%b0]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>匈牙利算法</title>
		<link>https://tisenye.com/4551</link>
		<pubDate>Fri, 09 Oct 2020 09:48:42 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4551</guid>
		<description></description>
		<content:encoded><![CDATA[<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;         //O(m*n)
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt; ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 2e5 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
typedef struct nod{
    int v,Next,w;
}nods;
nods edge[N];
int head[N],tot,n;
int vis[N],match[N];
void add(int u, int v, int w){
    edge[++tot].v = v;
    edge[tot].Next = head[u];
    edge[tot].w = w;
    head[u] = tot;
}
int dfs(int u){
    for(int i = head[u]; i; i = edge[i].Next){
        int v = edge[i].v;
        if(!vis[v]){
            vis[v] = 1;
            if(!match[v] || dfs(match[v])){
                match[v] = u;
                match[u] = v;
                return 1;
            }
        }
    }
    return 0;
}
int hungary(int x){
    memset(vis, 0, sizeof(vis));
    return dfs(x);
}
int ans[N],ins[N];
int main(){
    int m;
    cin&gt;&gt;n&gt;&gt;m;
    int x,y;
    rep(i,m){
       scanf(&quot;%d%d&quot;,&amp;x,&amp;y);
       add(x,y+n,1);
    }
    int rst = n;
    rep2(i,1,n+1){          //求最大匹配
        if(!match[i]){
            rst -= hungary(i);
        }
    }
    rep2(i,n+1,2*n+1){
        if(match[i]){
            ans[match[i]] = i - n;
            ins[i-n]++;
        }
    }
    rep2(i,1,n+1){
        if(!ins[i]){
            printf(&quot;%d&quot;,i);
            int tmp = i;
            while((tmp = ans[tmp])){
                printf(&quot; %d&quot;, tmp);
            }
            printf(&quot;\n&quot;);
        }
    }
    cout&lt;&lt;rst&lt;&lt;endl;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4551</wp:post_id>
		<wp:post_date><![CDATA[2020-10-09 17:48:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-09 09:48:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hungry]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="binarygraphic"><![CDATA[二分图]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e5%8c%88%e7%89%99%e5%88%a9%e7%ae%97%e6%b3%95]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Computational geometry</title>
		<link>https://tisenye.com/4578</link>
		<pubDate>Thu, 15 Oct 2020 08:42:53 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4578</guid>
		<description></description>
		<content:encoded><![CDATA[<pre><code class="language-cpp">#include&lt;stdio.h&gt;
#include&lt;math.h&gt;
#include&lt;string.h&gt;
#define eps 1e-8
#define pi  3.141592653589793
using namespace std;
//二维点类
struct Point
{
    double x,y;
    Point(double a=0,double b=0){x=a;y=b;}
};
typedef Point Vector;
//二维直线类，一般方程ax+by+c=0
struct Line
{
    double a,b,c,angle;
    Point p1,p2;
    Line(Point s,Point e)
    {
        a=s.y-e.y;
        b=e.x-s.x;
        c=s.x*e.y-e.x*s.y;
        angle=atan2(e.y-s.y,e.x-s.x);
        p1=s;p2=e;
    }
    Line(){}
};
//二维线段类
struct Segment
{
    Point s,e;
    Segment(Point a,Point b){s=a;e=b;}
    Segment(double x1,double y1,double x2,double y2)
    {
        s=Point(x1,y1);
        e=Point(x2,y2);
    }
    Segment(){}
};
//向量的加减及数乘
Vector operator + (Point a,Point b)
{
    return Vector(a.x+b.x,a.y+b.y);
}
Vector operator - (Point a,Point b)
{
    return Vector(a.x-b.x,a.y-b.y);
}
Vector operator * (Point a,double k)
{
    return Vector(a.x*k,a.y*k);
}
Vector operator / (Point a,double k)
{
    return Vector(a.x/k,a.y/k);
}
//求向量的模（长度）
double len(Vector a)
{
    return sqrt(a.x*a.x+a.y*a.y);
}
//得到sp-op和ep-op的叉积
//&gt;0时ep在opsp的逆时针方向，&lt;0时顺时针，=0时共线
double Cross(Point &amp;sp, Point &amp;ep, Point &amp;op)
{
    return (sp.x-op.x)*(ep.y-op.y)-(ep.x-op.x)*(sp.y-op.y);
}
//两向量求叉积，求三角形面积需要除以2
double Cross(Vector a,Vector b)
{
    return a.x*b.y-b.x*a.y;
}
//两向量求点积
double Dot(Vector a,Vector b)
{
    return a.x*b.x+a.y*b.y;
}
//求最大最小值
double max(double a,double b)
{
    if (a&lt;b) return b; else return a;
}
double min(double a,double b)
{
    if (a&gt;b) return b; else return a;
}
//采用eps的精度判断大/小于零
int epssgn(double x)
{
    if (fabs(x)&lt;eps) return 0;
    else return x&lt;0?-1:1;
}
//求两点之间的直线距离
double dis(Point a,Point b)
{
    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));
}
//判断两直线是否平行
int Parallel(Line l1,Line l2)
{
    return (fabs(l1.a*l2.b-l2.a*l1.b)&lt;eps);
}
//判断两直线是否相等
int LineEqual(Line l1,Line l2)
{
    if (!Parallel(l1,l2)) return 0;
    else return (fabs(l1.a*l2.c-l2.a*l1.c)&lt;eps &amp;&amp; fabs(l1.b*l2.c-l2.b*l1.c)&lt;eps);
}
//求点C到线段AB的距离
double PointToSegDist(Point A,Point B,Point C)
{
    if (dis(A,B)&lt;eps) return dis(B,C);
    if (epssgn(Dot(B-A,C-A))&lt;0) return dis(A,C);
    if (epssgn(Dot(A-B,C-B))&lt;0) return dis(B,C);
    return fabs(Cross(B-A,C-A))/dis(B,A);
}
//求线段两端AB到另一线段CD的距离
double TwoSegMinDist(Point A,Point B,Point C,Point D)
{
    return min(min(PointToSegDist(A,B,C),PointToSegDist(A,B,D)),
               min(PointToSegDist(C,D,A),PointToSegDist(C,D,B)));
}
Point SymPoint(Point p,Line l) //求二维平面上点p关于直线p1p2的对称点
{
    Point result;
    double a=l.p2.x-l.p1.x;
    double b=l.p2.y-l.p1.y;
    double t=((p.x-l.p1.x)*a+(p.y-l.p1.y)*b)/(a*a+b*b);
    result.x=2*l.p1.x+2*a*t-p.x;
    result.y=2*l.p1.y+2*b*t-p.y;
    return result;
}
//判断线段s1e1与s2e2是否相交（含端点）
//不含端点的话将下面的&lt;=改成&lt;
int IsSegmentIntersect(Point s1, Point e1, Point s2, Point e2)
{
    if( min(s1.x,e1.x)&lt;= max(s2.x,e2.x) &amp;&amp;
        min(s1.y,e1.y)&lt;= max(s2.y,e2.y) &amp;&amp;
        min(s2.x,e2.x)&lt;= max(s1.x,e1.x) &amp;&amp;
        min(s2.y,e2.y)&lt;= max(s1.y,e1.y) &amp;&amp;
        Cross(s2,e2,s1)*Cross(s2,e2,e1)&lt;=0 &amp;&amp;
        Cross(s1,e1,s2)*Cross(s1,e1,e2)&lt;=0)
    return 1;
    return 0;
}
//知道直线上两点p1p2，判断直线与线段se是否相交，含顶点
int IsLineIntersectSegment(Point p1,Point p2,Point s,Point e)
{
    if (Cross(p1,p2,s)*Cross(p1,p2,e)&gt;eps) return 0;
    else return 1;
}
int IsLineIntersectSegment(Line l1,Point s,Point e)
{
    if (Cross(l1.p1,l1.p2,s)*Cross(l1.p1,l1.p2,e)&gt;eps) return 0;
    else return 1;
}
//求两条直线l1和l2的交点
Point GetIntersect(Line l1, Line l2)
{
    Point res;
    res.x=(l1.b*l2.c-l2.b*l1.c)/(l1.a*l2.b-l2.a*l1.b);
    res.y=(l1.c*l2.a-l2.c*l1.a)/(l1.a*l2.b-l2.a*l1.b);
    return res;
}
//求质量均匀分布的多边形的重心
Point BaryCenter(Point *p,int n)
{
    Point res(0,0);
    double s=0.0,t;
    int i;
    for (i=1;i&lt;n-1;i++)
    {
        t=Cross(p[i]-p[0],p[i+1]-p[0])/2;   //分割成三角形，算面积
        s+=t;
        res.x+=(p[0].x+p[i].x+p[i+1].x)*t;  //将面积作为重量放在三角形的重心上
        res.y+=(p[0].y+p[i].y+p[i+1].y)*t;  //质量*坐标，三角形重心所需的除以3放在后面
    }
    res.x/=(3*s);
    res.y/=(3*s);
    return res;
}
//求多边形面积，要求点集按逆时针顺序
double ConvexPolygonArea(Point *p,int n)
{
    int i;
    double area=0;
    for (i=1;i&lt;n-1;i++) area+=Cross(p[i]-p[0],p[i+1]-p[0]);
    return area/2;
}
//求以原点为圆心，过a、b，半径为r的扇形面积
double SectorArea(Point a,Point b,double r)
{
    double theta=atan2(a.y,a.x)-atan2(b.y,b.x);
    while (theta&lt;=0) theta+=2*pi;
    while (theta&gt;=2*pi) theta-=2*pi;
    theta=min(theta,2*pi-theta);
    return r*r*theta/2;
}
//求以o为圆心r为半径的圆与线段（直线）ab的交点
//返回的ret是交点，num是交点数量
//把判断t范围的两个if去掉可以计算圆与直线的交点
void CircleCrossLine(Point a,Point b,Point o,double r,Point ret[],int &amp;num)
{
    double x0=o.x,y0=o.y;
    double x1=a.x,y1=a.y;
    double x2=b.x,y2=b.y;
    double dx=x2-x1,dy=y2-y1;
    double A=dx*dx+dy*dy;
    double B=2*dx*(x1-x0)+2*dy*(y1-y0);
    double C=(x1-x0)*(x1-x0)+(y1-y0)*(y1-y0)-r*r;
    double delta=B*B-4*A*C;
    num=0;
    if (epssgn(delta)&gt;=0)
    {
        double t1=(-B-sqrt(fabs(delta)))/(2*A);
        double t2=(-B+sqrt(fabs(delta)))/(2*A);
        if (epssgn(t1-1.0)&lt;=0 &amp;&amp; epssgn(t1)&gt;=0)
            ret[num++]=Point(x1+t1*dx,y1+t1*dy);
        if (epssgn(t2-1.0)&lt;=0 &amp;&amp; epssgn(t2)&gt;=0)
            ret[num++]=Point(x1+t2*dx,y1+t2*dy);
    }
}
//求以原点为圆心半径为r的园，与原点、a、b组成的三角形的重叠面积
double Calc(Point a,Point b,double r)
{
    Point p[2];
    int num=0;
    int ina=(epssgn(len(a)-r)&lt;0);
    int inb=(epssgn(len(b)-r)&lt;0);
    if (ina)
    {
        if (inb) return fabs(Cross(a,b))/2.0; //情形1：三角形完全在圆内：直接求三角形面积
        else  //情形2：一个点在圆内，一个点在圆外：分割成一个完全在圆内的三角形和一个扇形
        {
            CircleCrossLine(a,b,Point(0,0),r,p,num);
            return SectorArea(b,p[0],r)+fabs(Cross(a,p[0]))/2.0;
        }
    }
    else
    {
        CircleCrossLine(a,b,Point(0,0),r,p,num);
        //情形2：一个点在圆内，一个点在圆外：分割成一个完全在圆内的三角形和一个扇形
        if (inb) return SectorArea(p[0],a,r)+fabs(Cross(p[0],b))/2.0;
        else
        {
            //情形4：两个点都在圆外，但是两点的连线与圆有两个焦点：分割成一个完全在圆内的三角形和两个扇形
            if (num==2) return SectorArea(a,p[0],r)+SectorArea(p[1],b,r)+fabs(Cross(p[0],p[1]))/2.0;
            //情形3：两个点都在圆外，并且相交处为一个扇形：直接求扇形面积
            else return SectorArea(a,b,r);
        }
    }
}
//求质量均匀分布的三角形的重心
Point TriangleMassCenter(Point a,Point b,Point c)
{
    return (a+b+c)/3.0;
}
//求三角形的外心
Point TriangleCircumCenter(Point a,Point b,Point c)
{
    Point res;
    double a1=atan2(b.y-a.y,b.x-a.x)+pi/2;
    double a2=atan2(c.y-b.y,c.x-b.x)+pi/2;
    double ax=(a.x+b.x)/2;
    double ay=(a.y+b.y)/2;
    double bx=(c.x+b.x)/2;
    double by=(c.y+b.y)/2;
    double r1=(sin(a2)*(ax-bx)+cos(a2)*(by-ay))/(sin(a1)*cos(a2)-sin(a2)*cos(a1));
    return Point(ax+r1*cos(a1),ay+r1*sin(a1));
}
//求三角形的垂心
Point TriangleOrthoCenter(Point a,Point b,Point c)
{
    return TriangleMassCenter(a,b,c)*3.0-TriangleCircumCenter(a,b,c)*2.0;
}
//求三角形的内心
Point TriangleInnerCenter(Point a,Point b,Point c)
{
    Point res;
    double la=len(b-c);
    double lb=len(a-c);
    double lc=len(a-b);
    res.x=(la*a.x+lb*b.x+lc*c.x)/(la+lb+lc);
    res.y=(la*a.y+lb*b.y+lc*c.y)/(la+lb+lc);
}
/*------Graham求凸包----*/
int cmp(Point &amp;a,Point &amp;b)
{
    if (a.y==b.y) return (a.x&lt;b.x);
    return (a.y&lt;b.y);
}
//对所有的点进行一次排序
void QSort(Point p[],int l,int r)
{
    int i=l,j=r;
    Point mid=p[(l+r)/2],swap;
    while (i&lt;=j)
    {
        while (cmp(p[i],mid)) i++;
        while (cmp(mid,p[j])) j--;
        if (i&lt;=j)
        {
            swap=p[i];
            p[i]=p[j];
            p[j]=swap;
            i++;j--;
        }
    }
    if (i&lt;r) QSort(p,i,r);
    if (l&lt;j) QSort(p,l,j);
}
//n为原图的点数，p[]为原图的点（0~n-1），top为凸包点的数量（0~top-1），res[]为凸包点的下标，。
int Graham(Point p[],int n,int res[])
{
    int i,len,top;
    top=1;
    QSort(p,0,n-1);
    for (i=0;i&lt;3;i++) res[i]=i;
    for (i=2;i&lt;n;i++)
    {
        while (top &amp;&amp; epssgn(Cross(p[i],p[res[top]],p[res[top-1]]))&gt;=0) top--;
        res[++top]=i;
    }
    len=top;
    res[++top]=n-2;
    for (i=n-3;i&gt;=0;i--)
    {
        while (top!=len &amp;&amp; epssgn(Cross(p[i], p[res[top]], p[res[top-1]]))&gt;=0) top--;
        res[++top]=i;
    }
    return top;
}
//判断点x是否在凸包p[res[1~chnum]]中，返回1则为在内部或边界上
int PointInConvexHull(Point p[],int res[],int chnum,Point x)
{
    //找一个凸包内的点
    Point g=(p[res[0]]+p[res[chnum/3]]+p[res[2*chnum/3]])/3.0;
    int l=0,r=chnum,mid;
    //二分凸包
    while (l+1&lt;r)
    {
        mid=(l+r)/2;
        if (epssgn(Cross(p[res[l]]-g,p[res[mid]]-g))&gt;0)
        {
            if (epssgn(Cross(p[res[l]]-g,x-g))&gt;=0
             &amp;&amp; epssgn(Cross(p[res[mid]]-g,x-g))&lt;0) r=mid;
            else l=mid;
        }
        else
        {
            if (epssgn(Cross(p[res[l]]-g,x-g))&lt;0
             &amp;&amp; epssgn(Cross(p[res[mid]]-g,x-g))&gt;=0) l=mid;
            else r=mid;
        }
    }
    r%=chnum;
    if (epssgn(Cross(p[res[r]]-x,p[res[l]]-x))==-1) return 1; else return 0;
}
//旋转卡壳求凸包p[res[1~chnum]]的直径，对踵点数量appnum，存储在app[][2]中
double Diameter(Point p[],int res[],int chnum,int app[][2],int &amp;appnum) //AntiPodal Point
{
    int i,j;
    double ret=0,nowlen;
    res[chnum]=res[0];
    j=1;
    appnum=0;
    for (i=0;i&lt;chnum;i++)
    {
        while (Cross(p[res[i]]-p[res[i+1]],p[res[j+1]]-p[res[i+1]])
              &lt;Cross(p[res[i]]-p[res[i+1]],p[res[j]]-p[res[i+1]]))
        {
            j++;
            j%=chnum;
        }
        app[appnum][0]=res[i];
        app[appnum][1]=res[j];
        appnum++;
        nowlen=dis(p[res[i]],p[res[j]]);
        if (nowlen&gt;ret) ret=nowlen;
        nowlen=dis(p[res[i+1]],p[res[j+1]]);
        if (nowlen&gt;ret) ret=nowlen;
    }
    return ret;
}
//旋转卡壳求凸包p[res[1~chnum]]内最大面积三角形
double ConvexHullMaxTriangleArea(Point p[],int res[],int chnum)
{
    int i,j,k;
    double area=0,tmp;
    k=2;j=1;
    res[chnum]=res[0];
    for (i=0;i&lt;chnum;i++)
    {
        //卡住i,j，若向前旋转k能令面积更大的话就一直转一下去
        while (fabs(Cross(p[res[j]]-p[res[i]],p[res[(k+1)%chnum]]-p[res[i]]))
              &gt;fabs(Cross(p[res[j]]-p[res[i]],p[res[k]]          -p[res[i]])))
              k=(k+1)%chnum;
        tmp=fabs(Cross(p[res[j]]-p[res[i]],p[res[k]]-p[res[i]]));
        if (tmp&gt;area) area=tmp;
        //卡住i,k，若向前旋转j能令面积更大的话就一直转一下去
        while (fabs(Cross(p[res[(j+1)%chnum]]-p[res[i]],p[res[k]]-p[res[i]]))
              &gt;fabs(Cross(p[res[j]]-          p[res[i]],p[res[k]]-p[res[i]])))
              j=(j+1)%chnum;
        tmp=fabs(Cross(p[res[j]]-p[res[i]],p[res[k]]-p[res[i]]));
        if (tmp&gt;area) area=tmp;
                //j,k转到最大位置，向前转i(i++)
    }
    return area/2;
}
//求两凸包p、q间的最小距离，注意调用的时候要交换参数位置调用两次
//卡住p（p步进），旋转q，求能得到的最小距离
double TwoConvexHullMinDist(Point P[],Point Q[],int n,int m)
{
    int YMinP=0,YMaxQ=0,i;
    double tmp,ans=999999999;
    for (i=0;i&lt;n;i++) if (P[i].y&lt;P[YMinP].y) YMinP=i;
    for (i=0;i&lt;m;i++) if (Q[i].y&gt;Q[YMaxQ].y) YMaxQ=i;
    P[n]=P[0];
    Q[m]=Q[0];
    for (i=0;i&lt;n;i++)
    {
        //注意，tmp保存的是&gt;比较的结果
        while (tmp=Cross(Q[YMaxQ+1]-P[YMinP+1],P[YMinP]-P[YMinP+1])
                  &gt;Cross(Q[YMaxQ]  -P[YMinP+1],P[YMinP]-P[YMinP+1]))
              YMaxQ=(YMaxQ+1)%m;
        if (tmp&lt;0) ans=min(ans,PointToSegDist(P[YMinP],P[YMinP+1],Q[YMaxQ]));
        else       ans=min(ans,TwoSegMinDist (P[YMinP],P[YMinP+1],Q[YMaxQ],Q[YMaxQ+1]));
        YMinP=(YMinP+1)%n;
    }
    return ans;
}
/*------Graham求凸包----*/
/*-----半平面交O(nlogn)模板-----*/
int cmp(const Line &amp; l1,const Line &amp; l2)
{
    int d=epssgn(l1.angle-l2.angle);
    if (!d) return (epssgn(Cross(l2.p1-l1.p1,l2.p2-l1.p1))&gt;0); //极角相同时，将更靠半平面里面的放在前面
    return d&lt;0;
}
void QSort(Line L[],int l,int r)
{
    int i=l,j=r;
    Line swap,mid=L[(l+r)/2];
    while (i&lt;=j)
    {
        while (cmp(L[i],mid)) i++;
        while (cmp(mid,L[j])) j--;
        if (i&lt;=j)
        {
            swap=L[i];
            L[i]=L[j];
            L[j]=swap;
            i++;j--;
        }
    }
    if (i&lt;r) QSort(L,i,r);
    if (l&lt;j) QSort(L,l,j);
}
//判断l1与l2的交点是否在半平面hpl外
int IntersectionOutOfHalfPlane(Line &amp;hpl,Line &amp;l1,Line &amp;l2)
{
     Point p=GetIntersect(l1,l2);
     return (epssgn(Cross(hpl.p1-p,hpl.p2-p))&lt;0);
}
//半平面hpl向内推进dis长度
Line HalfPlaneMoveIn(Line &amp;hpl,double &amp;dis)
{
    double dx=hpl.p1.x-hpl.p2.x;
    double dy=hpl.p1.y-hpl.p2.y;
    double ll=len(hpl.p1-hpl.p2);
    Point pa=Point(dis*dy/ll+hpl.p1.x,hpl.p1.y-dis*dx/ll);
    Point pb=Point(dis*dy/ll+hpl.p2.x,hpl.p2.y-dis*dx/ll);
    return Line(pa,pb);
}
//求n个半平面l的半平面交，得到的交点储存在p中，交点数目返回到pn
//可以将一个多边形每一条边看成半平面，求出来的交就是多边形的核，要求pn&gt;=3
void HalfPlaneIntersect(Line l[],int n,Point p[],int &amp;pn)
{
    int i,j;
    int dq[MaxN],top,bot;
    //排序是在满足所有半平面A*x+B*y+C&gt;0或（&lt;,&lt;=,&gt;=）,
    //也就是所有半平面的符号均相同的情况下对极角进行排序。
    QSort(l,0,n-1);
    //极角相同时，只保留最靠里面的那条
    for (i=j=0;i&lt;n;i++) if (epssgn(l[i].angle-l[j].angle)&gt;0) l[++j]=l[i];
    n=j+1;
    dq[0]=0; //双端队列
    dq[1]=1;
    top=1;   //顶部和底部
    bot=0;
    for (i=2;i&lt;n;i++)
    {
        //当栈顶的两条直线交点在当前半平面外部时，弹栈
        while (top&gt;bot &amp;&amp; IntersectionOutOfHalfPlane(l[i],l[dq[top]],l[dq[top-1]])) top--;
        //由于求的是一个凸多边形，所以当半平面转过接近一圈时，某个半平面满足上一个while的条件后，
        //它又会影响到底部的两条直线，当底部的两条直线的交点，在当前的半平面外部时，底部弹栈
        while (top&gt;bot &amp;&amp; IntersectionOutOfHalfPlane(l[i],l[dq[bot]],l[dq[bot+1]])) bot++;
        dq[++top]=i; //当前半平面入栈
    }
    //当最顶部的两条直线的交点不在最底部的半平面内时，顶部的那个半平面是多余的，顶部弹栈
    while (top&gt;bot &amp;&amp; IntersectionOutOfHalfPlane(l[dq[bot]],l[dq[top]],l[dq[top-1]])) top--;
    //当最底部的两条直线的交点不在最顶部的半平面内时，底部的那个半平面是多余的，底部弹栈
    while (top&gt;bot &amp;&amp; IntersectionOutOfHalfPlane(l[dq[top]],l[dq[bot]],l[dq[bot+1]])) bot++;
    dq[++top]=dq[bot]; //将最底部的半平面放到最顶部来，方便下面求顶点
    for (pn=0,i=bot;i&lt;top;i++,pn++) p[pn]=GetIntersect(l[dq[i+1]],l[dq[i]]);
}
/*-----半平面交O(nlogn)模板-----*/
/*-----半平面交O(n^2)模板-----*/
//p是现在切出来的半平面的点，pn是点的数量，需要按顺时针或者逆时针排序
//新的半平面直线为ax+by+c=0
void HalfPlaneCut(Point p[],int &amp;pn,double a,double b,double c)
{
    int cnt=0,i;
    Point tp[MaxN];  //temp_p
    //现在交出来的点在新的半平面内，保留
    for (i=1;i&lt;=pn;i++) if (epssgn(a*p[i].x+b*p[i].y+c)&gt;=0) tp[++cnt]=p[i];
    else //否则如果其前后的点在半平面内，重新切割
    {
        if (epssgn(a*p[i-1].x+b*p[i-1].y+c)&gt;0)
            tp[++cnt]=GetIntersect(Line(p[i-1],p[i]),Line(a,b,c));
        if (epssgn(a*p[i+1].x+b*p[i+1].y+c)&gt;0)
            tp[++cnt]=GetIntersect(Line(p[i],p[i+1]),Line(a,b,c));
    }
    pn=cnt;
    for (i=1;i&lt;=cnt;i++) p[i]=tp[i];
    p[0]=p[cnt];
    p[cnt+1]=p[1];
}
/*-----半平面交O(n^2)模板-----*/</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4578</wp:post_id>
		<wp:post_date><![CDATA[2020-10-15 16:42:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-15 08:42:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[computational-geometry]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="category" nicename="computational-geometry"><![CDATA[Computational geometry]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>A Lot of Games (CF 455B)</title>
		<link>https://tisenye.com/4599</link>
		<pubDate>Mon, 19 Oct 2020 13:41:29 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4587</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>没有人是不怕输的，有那就是没输够</p>
</blockquote>
<h4>题意：</h4>
<p>有两个人轮流van游戏，往一个空串里面轮流填字符。填完之后形成的字符必须是给定的几个模式串的前缀，当有人没法填时，输，游戏结束。给定一个n、k，分别表示模式串数量和游戏轮数（最多进行k轮游戏）</p>
<h4>分析：</h4>
<p>感觉模型还是挺有意思、经典的，字符串前缀可以想到trie，建一个trie在上面博弈。
分析一下局面的情况：</p>
<ul>
<li>如果是叶子节点则必胜（下一步无路可走）</li>
<li>如果不是叶子节点
<ul>
<li>如果子节点有一个可以赢，则当前节点能赢</li>
<li>如果子节点有一个可以输，则当前节点能输</li>
</ul></li>
</ul>
<p>考虑一下结果（先手视角）：</p>
<ol>
<li>如果先手没有赢的可能，则必输</li>
<li>如果先手有赢的可能，也有输的可能，则必赢（可以改变走向）</li>
<li>如果先手只有赢的可能，则和k的大小有关（只进行k轮）。如果k为偶数，则必输，否则必胜。</li>
</ol>
<pre><code class="language-cpp">/*************************************************************************
    &gt; File Name: 1.cpp
    &gt; Author: Tisen
    &gt; Mail: 1600037849@qq.com
    &gt; Created Time: 一 10/19 20:02:25 2020
 ************************************************************************/
#include&lt;bits/stdc++.h&gt;
#include &lt;cstdio&gt;
#include &lt;iostream&gt;
#include &lt;memory&gt;
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; int(n); i++)
#define rep2(i,st,ed) for(int i = int(st); i &lt;= int(ed); i++)
const ll N = 2e5 + 200;
const ll INF = 0x3f3f3f3f;
const ll mod = 1e9 + 7;
int trie[N][27],tot;
int root;
void addTrie(string s){
    ll len = s.length();
    int v = root;
    rep(i,len){
        int c = s[i] - &#039;a&#039;;
        if(!trie[v][c]) trie[v][c] = ++tot;
        v = trie[v][c];
    }
}
int win[N], los[N];
void dfs(int x){
    win[x] = los[x] = 0;
    int flag = 0;
    rep(i,26){
        int v = trie[x][i];
        if(v){
            flag = 1;
            dfs(v);
            win[x] |= !win[v];
            los[x] |= !los[v];
        }
    }
    if(!flag){
        los[x] = 1;
    }
}
int main()
{
    /* freopen(&quot;in.txt&quot;,&quot;r&quot;,stdin); */
    /* freopen(&quot;out.txt&quot;,&quot;w&quot;,stdout); */
    ll n,k;
    cin&gt;&gt;n&gt;&gt;k;
    string s;
    rep(i,n){
        cin&gt;&gt;s;
        addTrie(s);
    }
    dfs(root);
    if(!win[root]){
        cout&lt;&lt;&quot;Second\n&quot;;
    }else if(los[root]){
        cout&lt;&lt;&quot;First\n&quot;;
    }else{
        if(k%2){
            cout&lt;&lt;&quot;First\n&quot;;
        }else{
            cout&lt;&lt;&quot;Second\n&quot;;
        }
    }
    return 0;
}
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4599</wp:post_id>
		<wp:post_date><![CDATA[2020-10-19 21:41:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-10-19 13:41:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[a-lot-of-games-cf-455b]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="games"><![CDATA[博弈论]]></category>
		<category domain="category" nicename="string"><![CDATA[字符串]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>完全背包的二进制拆分优化</title>
		<link>https://tisenye.com/4600</link>
		<pubDate>Sat, 07 Nov 2020 13:59:10 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4590</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>完全背包由于没有上限，如果直接枚举会遇到超时的情况，二进制拆分就很灵性QAQ
题目连接：<a href="https://www.luogu.com.cn/problem/P1833">樱花Luogu1833</a></p>
</blockquote>
<p>通过二进制拆分优化过的完全背包速度飞起</p>
<pre><code class="language-cpp">/*************************************************************************
    &gt; File Name: 1.cpp
    &gt; Author: Tisen
    &gt; Mail: 1600037849@qq.com
    &gt; Created Time: 四 10/29 12:15:29 2020
 ************************************************************************/
#include&lt;bits/stdc++.h&gt;
using namespace std;
#define ll long long
#define rep(i,n) for(ll i = 0; i &lt; n; i++)
#define rep2(i,start,end) for(ll i = start; i &lt;= end; i++)
#define pll pair&lt;ll,ll&gt;
#define mk(x,y) make_pair(x,y)
#define pdl pair&lt;double, ll&gt;
const ll N = 4e4 + 200;
const ll INF = 9999999999;
const ll mod = 1e9 + 7;
ll dp[N];
ll w[N],v[N],c[N];
pair&lt;ll,ll&gt; p[N*100];
int main(){
    /* freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin); */
    int h1,m1,h2,m2,n;
    scanf(&quot;%d:%d %d:%d %d&quot;,&amp;h1,&amp;m1,&amp;h2,&amp;m2,&amp;n);
    int m = 0;
    if(m2 &lt; m1){
        h2--;
        m += 60 - m1;
        m += m2;
    }else{
        m += m2-m1;
    }
    m += (h2-h1)*60;
    rep(i,n){
        cin&gt;&gt;w[i]&gt;&gt;v[i]&gt;&gt;c[i];
        if(!c[i]) c[i] = 99999999;      //如果是完全背包就设上限为一个很大的值
    }
    int tot = 0;
    rep(i,n){           //二进制拆分
        int tmp = 1;
        while(c[i]){
            tot++;
            p[tot].first = tmp * w[i];
            p[tot].second = tmp * v[i];
            c[i] -= tmp;
            tmp *= 2;
            if(c[i] &lt; tmp){     //如果不够达到下一个二进制数，直接算余下来的
                tot++;
                p[tot].first = w[i]*c[i];
                p[tot].second = v[i]*c[i];
                break;
            }
        }
    }
    rep2(i,1,tot){      //普通01背包模型
        for(int j = m; j &gt;= p[i].first; j--){
            dp[j] = max(dp[j], dp[j-p[i].first] + p[i].second);
        }
    }
    cout&lt;&lt;dp[m]&lt;&lt;endl;
    return 0;
}
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4600</wp:post_id>
		<wp:post_date><![CDATA[2020-11-07 21:59:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-11-07 13:59:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[completely-backpack-optimize]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="algorithm"><![CDATA[Algorithm]]></category>
		<category domain="category" nicename="dp"><![CDATA[DP]]></category>
		<category domain="post_tag" nicename="optimize"><![CDATA[优化]]></category>
		<category domain="post_tag" nicename="backpack"><![CDATA[背包]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[%e5%ae%8c%e5%85%a8%e8%83%8c%e5%8c%85%e7%9a%84%e4%ba%8c%e8%bf%9b%e5%88%b6%e6%8b%86%e5%88%86%e4%bc%98%e5%8c%96]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>BM and KMP</title>
		<link>https://tisenye.com/4601</link>
		<pubDate>Mon, 21 Dec 2020 15:17:41 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">http://tisenye.com/?p=4597</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>KMP是经典的匹配算法，且复杂度是优秀的O(n)。但是居然有比它还快的，传说中的BM大法，也是文本搜索中常用的匹配算法</p>
</blockquote>
<h3>KMP（Knuth-Morris-Pratt）</h3>
<p>KMP使用一个失配数组next来加快匹配失效后的移动，数组next是更具模式串的构造特点产生的，且匹配方向是从左往右。</p>
<h3>BM（Boyer-Moore）</h3>
<p>BM也是通过模式串的结构特点来加快失效匹配的移动，但是它牛逼就牛逼在有两个评估函数：坏字符、好后缀。（人多就是猛）而且与KMP不同的是，它的匹配方向在区间内是从右往左（后面开始）</p>
<ul>
<li>坏字符：移动的位数 = 坏字符在模式串中的位置 - 坏字符在模式串中最右出现的位置。此外，如果&quot;坏字符&quot;不包含在模式串之中，则最右出现位置为-1</li>
<li>好后缀：后移位数 = 好后缀在模式串中的位置 - 好后缀在模式串上一次出现的位置，且如果好后缀在模式串中没有再次出现，则为-1</li>
</ul>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
#define ll long long
#define rep(i,n) for(int i = 0; i &lt; n; ++i)
#define rep2(i,st,ed) for(int i = st; i &lt;= ed; ++i)
#define mk(x,y) make_pair(x,y)
#define pb(x) push_back(x)
const ll mod = 1e9 + 7;
const ll N = 1e6 + 200;
const int INF = 0x3f3f3f3f;
const double eps = 1e-7;
//---------------------BM-----------------------------------
int bad_table[N] = {0};
int good_table[N] = {0};
//好
void build_bad(string pattern){
    int len = pattern.length();
    for(int i = 0; i &lt; 256; i++){
        bad_table[i] = len;
    }
    for(int i = 0; i &lt; len-1; i++){
        bad_table[pattern[i]] = len - 1 - i;
    }
}
void build_good(string pattern){
    int len = pattern.length();
    int last = len;
    for(int i = len-1; i &gt;= 0; i--){
        int flag = 0;
        for(int j = 0, k = i+1; k &lt; len; k++, j++){
            if(pattern[j] != pattern[k]){
                flag = 1;
                break;
            }
        }
        if(!flag) last = i+1;
        good_table[len-1-i] = last - i + len - 1;
    }
    for(int i = 0; i &lt; len - 1; i++){
        int slen = 0;
        for(int j = i, k = len - 1; j &gt;= 0 &amp;&amp; pattern[j] == pattern[k]; k--,j--){
            slen+=1;
        }
        good_table[slen] = len - 1 - i + slen;
    }
}
vector&lt;int&gt; rst;
int Boyer_Moore(string target, string pattern){
    //n为主串（target被匹配串）, m为模式串（pattern需要匹配的串）
    int n = target.length();
    int m = pattern.length();
    if(m &gt; n) return -1;
    build_bad(pattern);
    build_good(pattern);
    for(int i = m-1, j; i &lt; n;){
        for(j = m-1; target[i] == pattern[j]; i--,j--){
            if(j == 0){
                rst.push_back(i+1);
                break;
            }
        }
        i += max(good_table[m-j-1], bad_table[target[i]]);
    }
    return -1;
}
//---------------------KMP-----------------------------------
int nxt[N];
void get_next(string pattern){
    int t1 = 0, t2;
    nxt[0] = t2 = -1;
    int n = pattern.length();
    while(t1 &lt; n){
        if(t2 == -1 || pattern[t1] == pattern[t2]){
            nxt[++t1] = ++t2;
        }else{
            t2 = nxt[t2];
        }
    }
}
void KMP(string target, string pattern){
    int t1 = 0, t2 = 0;
    get_next(pattern);
    int n = target.length(), m = pattern.length();
    while(t1 &lt; n){
        if(t2 == -1 || target[t1] == pattern[t2]){
            t1++,t2++;
        }else{
            t2 = nxt[t2];
        }
        if(t2 == m){
            rst.push_back(t1-m+1);
            t2 = nxt[t2];
        }
    }
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0),cout.tie(0);
    //freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);
    string a,b;
    cin&gt;&gt;a&gt;&gt;b;
    // KMP(a,b);
    Boyer_Moore(a,b);
    for(int i = 0; i &lt; rst.size(); i++){
        cout&lt;&lt;rst[i]&lt;&lt;endl;
    }
    get_next(b);
    int len = b.length();
    rep(i,len){
        if(i) cout&lt;&lt;&quot; &quot;;
        cout&lt;&lt;nxt[i+1];
    }
    return 0;
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4601</wp:post_id>
		<wp:post_date><![CDATA[2020-12-21 23:17:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2020-12-21 15:17:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[bm-and-kmp]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="bm"><![CDATA[BM]]></category>
		<category domain="post_tag" nicename="kmp"><![CDATA[KMP]]></category>
		<category domain="category" nicename="string"><![CDATA[字符串]]></category>
		<category domain="post_tag" nicename="string-match"><![CDATA[字符串匹配]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-header-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[obfx-footer-scripts]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp,c]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>吐槽网站搬家</title>
		<link>https://tisenye.com/4673</link>
		<pubDate>Wed, 23 Jun 2021 08:39:44 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4673</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>阿里云服务器到期了,续费天价,转投小马的怀抱</p>
</blockquote>
<p>&ensp;&ensp;一开始就觉得换服务器供应商应该会很麻烦了,没想到麻烦成这样子.
&ensp;&ensp;域名时间和服务器差不多,在腾讯云买了服务器后想着吧原先华为托管的域名也迁过来,结果迁过来最后确认的那封Email链接点不开🤮,愣是让我多等了5天,成功让我记住了新网这家公司.
&ensp;&ensp;服务器买好了想着要备案,但是腾讯云这边要等两天,等就等吧,结果备案材料交了第二天,好几条问题给我整懵了,为毛我阿里那边备案都没那么复杂啊😩,拖着吧.
&ensp;&ensp;等到终于想起来我博客网站还没弄好呢,已经是一个月后了....项目搬家,数据区迁移,nginx配置,搞搞搞,搞成了502,下班回家搞了一晚上,最后把502搞成了数据库连接错误,开心的睡觉去了,想着这下子简单了.第二天起来搞,搞到最后尼玛数据库崩了😭,死活连接不上,查了半天结果,原因是导出的数据库没有内容只有表结构,但是之前的数据库被我不小心删了,删了......当时就给整破防了,然后整个站点的备份只有去年的,我的文章,我的文章,我的文章😭.
&ensp;&ensp;这次搬家让我切身体会到了数据备份的重要性,一定要看好是哪个ssh连的那个服务器,不然手贱删错库,哭都来不及.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4673</wp:post_id>
		<wp:post_date><![CDATA[2021-06-23 16:39:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-23 08:39:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%90%90%e6%a7%bd%e7%bd%91%e7%ab%99%e6%90%ac%e5%ae%b6]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="writing"><![CDATA[信手之作]]></category>
		<category domain="post_tag" nicename="%e5%90%90%e6%a7%bd"><![CDATA[吐槽]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Python 调用 C 库</title>
		<link>https://tisenye.com/4687</link>
		<pubDate>Fri, 25 Jun 2021 06:58:06 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4687</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Ctypes</h2>
<p><strong>该模块python自带</strong></p>
<h3>调用</h3>
<ol>
<li>
<p>使用ctypes加载C/C++编译的so库</p>
<p>如果使用c++的函数接口,需要使用extern声明成C</p>
<pre><code>gcc c_dll.c -shared -o c_dll.so     #编译动态库.so</code></pre>
</li>
<li>
<p>在Python文件中导入头文件  “ctypes”</p>
<pre><code class="language-python">from ctypes import *</code></pre>
</li>
<li>
<p>引入动态库</p>
<pre><code class="language-python">tmp = cdll.LoadLibrary("./c_dll.so")</code></pre>
<pre><code class="language-python">tmp = CDLL("./c_dll.so")                         #CDLL等价于cdll.LoadLibrary</code></pre>
<p><strong>其中路径如果不在当前目录,需提供绝对路径</strong></p>
</li>
<li>
<p>调用动态库方法</p>
<pre><code class="language-python">tmp.func(args)               #动态库引用变量.库函数(参数)</code></pre>
</li>
</ol>
<h3>数据类型</h3>
<p>所有的Python类型都必须使用它们对应的ctypes类型进行包装,才能被正确转换为C语言所需的类型</p>
<table>
<thead>
<tr>
<th>ctypes类型</th>
<th>c类型</th>
<th style="text-align: center;">python数据类型</th>
</tr>
</thead>
<tbody>
<tr>
<td>c_bool</td>
<td>_Bool</td>
<td style="text-align: center;">bool  (1)</td>
</tr>
<tr>
<td>c_char</td>
<td>char</td>
<td style="text-align: center;">单字符字节串对象</td>
</tr>
<tr>
<td>c_wchar</td>
<td>wchar_t</td>
<td style="text-align: center;">单字符字符串</td>
</tr>
<tr>
<td>c_byte</td>
<td>char</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_ubyte</td>
<td>unsigned  char</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_short</td>
<td>short</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_ushort</td>
<td>unsigned  short</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_int</td>
<td>int</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_uint</td>
<td>unsigned  int</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_long</td>
<td>long</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_ulong</td>
<td>unsigned  long</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_longlong</td>
<td>__int64 或 long  long</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_ulonglong</td>
<td>unsigned __int64 或 unsigned  long long</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_size_t</td>
<td>size_t</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_ssize_t</td>
<td>ssize_t 或  Py_ssize_t</td>
<td style="text-align: center;">int</td>
</tr>
<tr>
<td>c_float</td>
<td>float</td>
<td style="text-align: center;">float</td>
</tr>
<tr>
<td>c_double</td>
<td>double</td>
<td style="text-align: center;">float</td>
</tr>
<tr>
<td>c_longdouble</td>
<td>long  double</td>
<td style="text-align: center;">float</td>
</tr>
<tr>
<td>c_char_p</td>
<td>char * (NUL  terminated)</td>
<td style="text-align: center;">字节串对象或  None</td>
</tr>
<tr>
<td>c_wchar_p</td>
<td>wchar_t * (NUL  terminated)</td>
<td style="text-align: center;">字符串或  None</td>
</tr>
<tr>
<td>c_void_p</td>
<td>void  *</td>
<td style="text-align: center;">int 或 None</td>
</tr>
</tbody>
</table>
<p>每个数据类型都有构造函数可以直接调用</p>
<p>对于指针类型对象   <strong><em>c_char_p,  c_wchar_p,  c_void_p</em></strong> 等赋值时,将改变它们所指向的<strong>内存地址</strong>,而不是所指向的内容.</p>
<h3>使用</h3>
<h4>指定必选参数类型:</h4>
<p>通过设置 argtypes 属性指定从DLL中导出函数的必选参数类型,且 argtypes 必须是一个数据类型的序列</p>
<pre><code class="language-c">#C代码
typedef struct point
{
    /* data */
    int x,y;
}point;

char* pt(point a){
    printf(&quot;%d %d %d\n&quot;, a.x, a.y, a.x+a.y);
    return &quot;done&quot;;
}</code></pre>
<pre><code class="language-python">class poin(Structure):              #在c中定义了结构体Point,其中两个int型参数x,y
    _fields_ = [(&#039;x&#039;, c_int),
                (&#039;y&#039;, c_int)]

tmp = CDLL( &quot;./hello.so&quot;)
p = poin(2,3)
tmp.pt.argtypes = [poin]            #pt函数将参数x,y相加并打印x,y和结果; argtypes指定传入参数为poin类型
tmp.pt(p)
#结果为: 2 3 5</code></pre>
<p>在函数调用中ctypes的函数传值解析过程十分有趣</p>
<pre><code class="language-python">class poin(Structure):
    _fields_ = [(&#039;x&#039;, c_int),
                (&#039;y&#039;, c_int)]

tmp = CDLL( &quot;./hello.so&quot;)
p = poin(1,3)
tmp.pt.argtypes = [c_int,poin]    #先传递一个整型,在传递一个point类型
tmp.pt(3, p)
#结果为: 3 0 3    居然没有报错</code></pre>
<p>猜测转换成C语言的过程,直接将参数按顺序进行解析.但是C中是point类型的,cytpes似乎自动添加了一个默认值0参数.</p>
<h4>返回类型:</h4>
<p>默认情况下会返回 int 类型,可以通过设置函数对象的 restype 属性来指定</p>
<pre><code class="language-python">tmp.pt.restype = c_char_p#结果为: b&#039;done&#039;</code></pre>
<h4>指针:</h4>
<p>pointer()函数用来创建指针, 实例的 contents 属性,返回指针指向的真实对象.</p>
<pre><code class="language-python">i = c_int(42)pi = pointer(i)pi.contents         #c_int(42)</code></pre>
<h4>传递指针:</h4>
<p>使用byref()或者pointer()</p>
<h4>结构体和联合:</h4>
<p>结构体和联合必须继承自 ctypes 模块中的 Structure 和 Union . 子类必须定义 <strong>fields</strong> 属性.  <strong>fields</strong> 是一个二元组列表, 包含 field name 和 field type. type 子段必须是一个 ctypes 类型.</p>
<pre><code class="language-python">class poin(Structure):              #在c中定义了结构体Point,其中两个int型参数x,y    _fields_ = [(&#039;x&#039;, c_int),                (&#039;y&#039;, c_int)]</code></pre>
<p>结构体和联合中是可以包含位域字段的。位域只能用于整型字段，位长度通过 <code>_fields_</code> 中的第三个参数指定:</p>
<pre><code class="language-python">class poin(Structure):              _fields_ = [(&#039;x&#039;, c_int, 16),                (&#039;y&#039;, c_int), 16]</code></pre>
<h4>数组:</h4>
<p>创建数组可以使用一个类型乘以一个正数</p>
<pre><code class="language-python">a = (c_int * 4)b = (c_int * 3) * 2              #二维数组对象</code></pre>
<h3>参考文档</h3>
<p><a href="https://docs.python.org/zh-cn/3/library/ctypes.html#ctypes.byref">官方文档</a></p>
<h2>Python/C API</h2>
<p>该方法需要用特定的方式来编写C代码作为模块以提供Python调用,且C代码可以操作Python对象</p>
<p>需要python开发环境<code>python-dev</code></p>
<p>这个方式调用比较底层且难度个人感觉极大,写代码过程过于复杂且繁琐,构建过程也有许多意外QAQ</p>
<h3>编写方式(.C)</h3>
<ol>
<li>
<p>导入  <code>Python.h</code>  头文件和宏</p>
<pre><code class="language-python">#define PY_SSIZE_T_CLEAN#include <Python.h></code></pre>
<p>该头文件包含了所有需要的类型(Python对象类型的表示)和函数定义(对Python对象的操作)</p>
<p>头文件通常会与 Python 一起安装。在 Unix 上，它们位于以下目录：<code>prefix/include/pythonversion/</code> 和 <code>exec_prefix/include/pythonversion/</code>，其中 <code>prefix</code> 和 <code>exec_prefix</code> 是由向 Python 的 <strong>configure</strong> 脚本传入的对应形参所定义，而 <em>version</em> 则为 <code>&#039;%d.%d&#039; % sys.version_info[:2]</code>。在 Windows 上，头文件安装于 <code>prefix/include</code>，其中 <code>prefix</code> 是向安装程序指定的安装目录。</p>
</li>
<li>
<p>编写函数</p>
<p>所有的Python对象都被表示为一种叫做<code>PyObject</code>的结构体，并且<code>Python.h</code>头文件中提供了各种操作它的函数。</p>
<p><code>Py_None</code>是特殊Python对象<code>None</code>所对应的C名称.它是一个真正的 Python 对象而不是 <code>NULL</code> 指针.</p>
<pre><code class="language-c">#define PY_SSIZE_T_CLEAN#include <Python.h>static PyObject *SpamError;/* * 自定义函数,函数名为spam_system * 参数args为参数列表,使用PyArg_ParseTuple从中解析出用到的参数 **/static PyObject *spam_system(PyObject *self, PyObject *args){ const char *command;    int sts;    //PyArg_ParseTuple函数,第一个字段是传入参数args,第二个字段格式符号,"s"表示 //为一个string类型,如果是两个就是"s|s",如果是一个string,一个int,就是"s|i"    //第三个参数为提取出来的存放位置,即存放在command地址位置   if(!PyArg_ParseTuple(args, "s", &command))      return NULL;    sts = system(command);  if(sts < 0){        PyErr_SetString(SpamError, "System command failed");        return NULL;    }   /*   * 调用完之后要返回PyObject类型结果,如果无返回值,返回Py_None,一个None对象    * 类型返回值用Py_BuildValue进行转换成python类型  * Py_BuildValue("i", sts);  *  */  return PyLong_FromLong(sts);}/* *方法列表,是一个C结构数组,把需要扩展的函数映射到这个表里把 *表中第一个字段是python调用的方法名 第二个字段是导出函数,即真正调用的函数名 第三个字段指明参数传递类型,有两个值:METH_VARARGS,METH_KEYWORDS 分别表示元组传递和字典传递*/static PyMethodDef SpamMethods[] = {    {"system", spam_system, METH_VARARGS,   "Execute a shell command."},    {NULL, NULL, 0, NULL}};static struct PyModuleDef spammodule = { PyModuleDef_HEAD_INIT,  "spam", NULL,   -1, SpamMethods};//PyMODINIT_FUNC声明了函数作为PyObject * 返回类型/* PyMODINIT_FUNC *//* PyInit_spam(void){ *//*   PyObject *m; *//*   m = PyModule_Create(&spammodule); *//*  if(m = NULL) *//*       return NULL; *//*   SpamError = PyErr_NewException("spam.error", NULL, NULL); *//*  Py_XINCREF(SpamError); *//*     if(PyModule_AddObject(m, "error", SpamError) < 0){ *//*         Py_XDECREF(SpamError); *//*         Py_CLEAR(SpamError); *//*       Py_DECREF(m); *//*      return NULL; *//*   } *//*  return m; *//* } *///初始化函数PyMODINIT_FUNCPyInit_spam(void){  return PyModule_Create(&spammodule);}</code></pre>
</li>
<li>
<p>编译链接</p>
<p>使用distutils构建C和C++扩展</p>
<p>创建一个驱动脚本<code>setup.py</code></p>
<pre><code class="language-python">from distutils.core import setup, Extension#自己的模块demomodule1 = Extension('demo',                    sources = ['demo.c'])#name为使用时的模块名setup (name = 'PackageName',       version = '1.0',       description = 'This is a demo package',       ext_modules = [module1])</code></pre>
<pre><code>python setup.py buildpython setup.py install      #进行编译安装</code></pre>
</li>
<li>
<p>调用模块</p>
<p>使用import导入模块<code>PackageName</code>使用</p>
</li>
</ol>
<h3>参考文档</h3>
<p><a href="https://docs.python.org/zh-cn/3/c-api/index.html">Python/C API手册</a></p>
<p><a href="https://docs.python.org/zh-cn/3/extending/index.html#extending-index">扩展和潜入Python解释器</a></p>
<p><a href="https://docs.python.org/zh-cn/3/extending/building.html#building">构建C/C++扩展</a></p>
<h2>Cython</h2>
<p>Cython是基于Python/C API的但是比后者简单一万倍</p>
<p>需要安装<code>cython</code>库</p>
<p>cython的扩展名是<code>.pyx</code>,头文件是<code>.pxd</code></p>
<p>Cython的代码跟Python几乎一样，Cython的语法是Python的「超集」，即Python代码一定是Cython代码，而Cython代码不一定是Python代码。比起Python来说，Cython多了一些跟C语言相关的语法。</p>
<h3>基本语法</h3>
<p><code>def, cdef, cpdef</code></p>
<p>三者定义的区别:</p>
<pre><code>- def :  Python, Cython 都可以调用- cdef : 更快，只能 Cython 调用，可以使用指针- cpdef : Python, Cython 都可以调用，不能使用指针</code></pre>
<ol>
<li>
<p>定义局部变量</p>
<pre><code class="language-python">def fib(int n):    cdef int a,b,i</code></pre>
</li>
<li>
<p>定义函数返回值</p>
<pre><code class="language-cython">cdef float distance(float *x, float *y, int n):    cdef:        int i        float d = 0.0    for i in range(n):        d += (x[i] - y[i]) ** 2    return d</code></pre>
</li>
<li>
<p>定义类</p>
<pre><code class="language-cython">cdef class Particle(object):    cdef float psn[3], vel[3]    cdef int id</code></pre>
</li>
<li>
<p>导入头文件</p>
<p>可以导入<code>c++</code>标准库的文件</p>
<p>不过 <code>Cython</code> 不会自动扫描导入的头文件，所以要使用的函数必须再声明一遍(标准库函数不需要)</p>
<pre><code class="language-cython">cimport math</code></pre>
<p>/home/taishengye/.local/bi</p>
<h2>编译运行</h2>
<ol>
<li>
<p>创建<code>setup.py</code></p>
<pre><code class="language-cython">from distutils.core import setupfrom Cython.Build import cythonizesetup(name='appname',      ext_modules=cythonize("demo.pyx"))</code></pre>
<p>编译项目</p>
<pre><code>python setup.py build_ext --inplace</code></pre>
<p>会生成一个<code>.so</code>文件和一个<code>build</code>文件,此时就能import了</p>
</li>
</ol>
</li>
</ol>
<h2>参考文档</h2>
<p><a href="https://cython.readthedocs.io/en/latest/">Cython官方文档(纯英文)</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4687</wp:post_id>
		<wp:post_date><![CDATA[2021-06-25 14:58:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-25 06:58:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[python-%e8%b0%83%e7%94%a8-c-%e5%ba%93]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="python"><![CDATA[Python]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[python,c,clike]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Linux tty + subprocess库</title>
		<link>https://tisenye.com/4691</link>
		<pubDate>Mon, 28 Jun 2021 09:24:26 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4691</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>项目中遇到一个需求:在后台服务监控系统进程时,在对杀死进程后输出提示语句</p>
</blockquote>
<h3>如何输出提示语句</h3>
<p>由于tty的不同所以首先要确定是那个tty,在预先知道进程pid的情况下原本想通过proc文件下的stat来查看,但发现有点不对劲,专用较为麻烦的ps加过滤来查看(由StackExchange老哥提供)
<code>ps ax | grep $$ | grep -v grep | awk &#039;{ print $2 }&#039;</code>
该命令中的$$为所得的pid号
如何输出语句呢?在Linux下可以通过echo语句来实现,但是直接echo在后台程序运行且改变了输出设备的情况下是没法显示的,此时前面用到的tty边成为了关键.可以使用echo语句重定向到指定tty进行语句的输出
<code>echo &quot;your message&quot; &gt; /dev/tty</code></p>
<h3>如何使用python来进行操作</h3>
<p>查阅相关资料,发现可以使用python的subprocess库来进行命令的执行.subprocess的Popen函数具有灵活且丰富的功能,产生一个子进程来执行相应的命令行命令.
<a href="https://docs.python.org/3/library/subprocess.html">subprocess文档</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4691</wp:post_id>
		<wp:post_date><![CDATA[2021-06-28 17:24:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-28 09:24:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[python-subprocess%e5%ba%93]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>ZWK线段树</title>
		<link>https://tisenye.com/4696</link>
		<pubDate>Tue, 29 Jun 2021 08:17:45 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4696</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>常数小
非递归
码量少</p>
</blockquote>
<p>　　ZWK线段树的建树过程区别于一般线段树的自顶向下,而是反向建树,由底向上.且其存储方式为数组,空间大小为<strong>2*n</strong>,相比传统线段树有节省空间的优势.
　　建树逻辑为满二叉树,左子几点为<strong>2*i</strong>,右子节点为<strong>2*i+1</strong>,且叶子节点所在位置为<strong>n~(2*n-1)</strong>这个区间.
　　区间求和过程与传统线段树稍显不同，由于是从叶子节点往上，因此其求和过程十分巧妙．因为是满二叉树的原因，假设区间[3,11)求和时(下图加粗部分)
<img src="https://tisenye.com/wp-content/uploads/2021/06/image-1624955001341.png" alt="file" />
　　此时初始<strong>l=3</strong>,<strong>r=11</strong>(实际求和到10停止),对于l,r进行判断,如果其为<strong>奇数</strong>那么表示它所在的区间是无法继续向上合并的(只有一个部分),所以对其进行单独求和且移动l,r相对1个单位.否则继续寻找他们的父节点<strong>l&gt;&gt;2</strong>,<strong>r&gt;&gt;2</strong>(将在区间内的同一个父节点的两个左右子节点进行合并)重复,直到l&gt;=r为止.
模板代码如下: </p>
<pre><code class="language-cpp">const int N = 1e5;  // limit for array size
int n;  // array size
int t[2 * N];

void build() {  // build the tree
  for (int i = n - 1; i &gt; 0; --i) t[i] = t[i&lt;&lt;1] + t[i&lt;&lt;1|1];
}

void modify(int p, int value) {  // set value at position p
  for (t[p += n] = value; p &gt; 1; p &gt;&gt;= 1) t[p&gt;&gt;1] = t[p] + t[p^1];
}

int query(int l, int r) {  // sum on interval [l, r)
  int res = 0;
  for (l += n, r += n; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1) {
    if (l&amp;1) res += t[l++];
    if (r&amp;1) res += t[--r];
  }
  return res;
}

int main() {
  scanf(&quot;%d&quot;, &amp;n);
  for (int i = 0; i &lt; n; ++i) scanf(&quot;%d&quot;, t + n + i);
  build();
  modify(0, 1);
  printf(&quot;%d\n&quot;, query(3, 11));
  return 0;
}</code></pre>
<pre><code class="language-cpp">//luogu P1083
#include&lt;bits/stdc++.h&gt;
using namespace std;
#define rep(i,n) for(int i = 0; i &lt;n ;i++)
#define rep2(i, st, ed) for(int i = st; i &lt;= ed; i++)
#define ll long long
#define eps 1e-7
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
const ll N = 1e6 +200;
const ll mod = 1e9 + 7;
const double pi = acos(-1.0);

int n;
ll t[2*N];
ll d[N];
ll h;

void apply(int p, ll value){
    t[p] += value;
    if(p &lt; n) d[p] += value;
}

void build(int p){
    while(p &gt; 1){
        p &gt;&gt;= 1;
        t[p] = min(t[p&lt;&lt;1], t[p&lt;&lt;1|1]) + d[p];
    }
}

void push(int p){
    for(int s = h; s &gt; 0; --s){
        int i = p &gt;&gt; s;
        if(d[i] != 0){
            apply(i&lt;&lt;1, d[i]);
            apply(i&lt;&lt;1|1, d[i]);
            d[i] = 0;
        }
    }
}

void modify(int l, int r, ll value){    //[l,r)
    l += n, r += n;
    int l0 = l, r0 = r;
    for(; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1){
        if(l&amp;1) apply(l++, value);
        if(r&amp;1) apply(--r, value);
    }
    build(l0);
    build(r0-1);
}

ll query(int l, int r){     //[l,r)
    l += n, r += n;
    push(l);
    push(r - 1);
    ll res = 2e9;
    for(; l &lt; r; l &gt;&gt;= 1, r &gt;&gt;= 1){
        if(l&amp;1) res = min(res, t[l++]);
        if(r&amp;1) res = min(t[--r], res);
    }
    return res;

}

int main(){
    // freopen(&quot;1.in&quot;, &quot;r&quot;, stdin);
    // freopen(&quot;1.out&quot;, &quot;w&quot;, stdout);
    //std::ios::sync_with_stdio(false);  
    // cin.tie(0);
    int q;
    scanf(&quot;%d%d&quot;, &amp;n, &amp;q);
    h = sizeof(int) * 8 - __builtin_clz(n);
    for(int i = 0; i &lt; N; i++){
        t[i] = 2e9; 
    }
    for(int i = 0; i &lt; n; i++){
        scanf(&quot;%lld&quot;, &amp;t[n+i]);
    }
    for(int i = n ;i &lt; n + n; i++){
        build(i);
    }
    int flag = -1;
    for(int i = 1; i &lt;= q; i++){
        ll day;
        int l, r;
        scanf(&quot;%lld%d%d&quot;, &amp;day, &amp;l, &amp;r);
        if(flag  != -1) continue;
        day = 0 - day;
        modify(l-1, r, day);
        // cout&lt;&lt;query(l,r)&lt;&lt;&#039;\n&#039;;
        if(query(l-1 ,r) &lt; 0){
            flag = i;
        }
    }
    if(flag == -1){
        printf(&quot;0\n&quot;);
    }else{
        printf(&quot;-1\n%d\n&quot;, flag);
    }
    return 0;
}</code></pre>
<p><a href="http://codeforces.com/blog/entry/18051?locale=en">参考文档</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4696</wp:post_id>
		<wp:post_date><![CDATA[2021-06-29 16:17:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-06-29 08:17:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[zwuk%e7%ba%bf%e6%ae%b5%e6%a0%91]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84"><![CDATA[数据结构]]></category>
		<category domain="category" nicename="%e7%ba%bf%e6%ae%b5%e6%a0%91"><![CDATA[线段树]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp,c]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>c++指针全面(hu luan)分析</title>
		<link>https://tisenye.com/4726</link>
		<pubDate>Fri, 24 Sep 2021 09:19:46 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4726</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>指针</h3>
<ol>
<li>
<p>指针是一个变量,其存储的值是另一个变量的地址.</p>
<p>声明方式:   </p>
<p>​        <code><code>double \*p = nullptr;		//声明一个double类型的空指针	</code></code></p>
<p>指针赋空在c++中采用赋值为 nullptr 的形式, 在c中为 null .</p>
<p>采用 &amp; 符号获取变量地址,来给指针赋值</p>
<p>​        <code><code>double pi = 3.14;</code></code></p>
<p>​        <code><code>double *p = \&pi;</code></code></p>
<p>通过 * 来对所指对象进行操作</p>
<p>​        <code><code>*p = 3.1415926;		//修改pi的值为3.1415926</code></code></p>
</li>
<li>
<p>非常量指针可以通过 ++ , -- 运算符进行算术运算</p>
<p>​        <code><code>p++, p--;</code></code></p>
</li>
</ol>
<h3>指针和const</h3>
<p>const 修饰的变量为常量,但与指针结合后其位置存在两种可能.</p>
<ol>
<li>
<p>指向常量的指针:</p>
<p>const 修饰符在 * 前面</p>
<p>​        <code><code>const double pi = 3.14;</code></code></p>
<p>​        <code><code>const double \*p = \&pi;		//p指针指向类型为const double的变量pi </code></code></p>
<p>指针存储的对象地址只能是一个常量类型,不能通过指针来改变所指对象的值</p>
<p>​        <code><code>*p = 30; 		//error, 不能给常量pi赋值</code></code></p>
<p>指向常量的指针不能通过指针赋值的形式来给所指对象赋值</p>
</li>
<li>
<p>常量指针(const指针):</p>
<p>const 修饰符在 * 后面</p>
<p>​        <code>double pi = 3.14, a = 1.234;</code></p>
<p>​        <code>double \* const p = pi;		//常量指针p指向类型为double的变量pi</code></p>
<p>​        <code>p = &amp;a;		//error,此处p是常量,不能给常量赋值</code></p>
<p>常量指针只能指向一个对象,不能二次赋值改变指向的对象,但可通过指针来修改所指对象的值.</p>
<p>​        <code>*p = 3.1415926;		//此处修改pi的值为3.1415926</code></p>
</li>
<li>
<p>指向常量的常量指针:</p>
<p>const 修饰符分别存在 * 前面和后面</p>
<p>​        <code><code>const double pi = 3.14;</code></code></p>
<p>​        <code><code>const double \* const p = \&pi; 		//p是常量,且只能指向常量对象</code></code></p>
<p>指针是常量,且只能指向常量对象.指针不可二次赋值修改指向的对象.</p>
</li>
</ol>
<h3>指针,const和typedef</h3>
<p>typedef 可以定义类型别名</p>
<pre><code class="language-c++">typedef double dpoint;      //定义p为double *别名

typedef const double\* xpoint       //定义p为const double \*别名 

const double pi = 3.14;

double a = 1.234, b = 2.33;

const dpoint p = \π     //error, 无法指向const double类型

const dpoint p = &amp;a;        //其类型等同于dpoint const p, 都声明一个常量指针   

p = &amp;b;     //error, p为常量指针,无法二次赋值

xpoint  xp = \π

xp = &amp;a;        //error, 支持指向const double类型</code></pre>
<p>在const修饰指针别名时,const修饰的实际上是声明中的标识符,声明的是常量指针.</p>
<p>要想定义指向常量的指针,只能修改typedef中的定义在类型前加const.</p>
<h3>指针套娃</h3>
<p>指针可以指向指针,指针可以指向指向指针的指针......</p>
<pre><code class="language-c++">int a = 10;
int *p = &amp;a;
int **pp = &amp;p;
int ***ppp = &amp;pp;

//a = *p =  **pp =  ***ppp = 10;</code></pre>
<h3>指针和数组</h3>
<ol>
<li>
<p>指针数组:</p>
<p>数组中的元素为指针</p>
<p><code>int* a[4];		//数组a中的元素为int型指针</code></p>
</li>
<li>
<p>数组指针</p>
<p>指针指向的对象为数组</p>
<pre><code class="language-c++">int (*a)[4];     
int b[] = {33,2,3,4};
a = &amp;b;
for(int i = 0; i &lt; 4; i++){
cout&lt;&lt;a[0][i]&lt;&lt;endl;            //33,2,3,4
}</code></pre>
</li>
</ol>
<h3>指针和函数</h3>
<ol>
<li>
<p>指向函数的指针(函数指针):</p>
<p>指向对象为函数地址,其本身是指针.</p>
<p>函数指针在其声明时需明确返回值和参数列表,只能指向同样返回值和参数列表的函数地址(即声明一致).</p>
<pre><code class="language-c++">int max(int a, int b){return a > b ? a : b; }
int (*f)(int a, int b);          //声明函数指针
f = max;         //指向max函数,函数名为函数地址

int c = (*f)(2, 3);          //调用函数</code></pre>
</li>
<li>
<p>返回值为指针的函数(指针函数):</p>
<p>其本质为函数,返回值为某一类型的指针.</p>
<pre><code class="language-c++">double * func(){
 double pi = 3.14;
 return &pi;
}</code></pre>
</li>
<li>
<p>函数参数为指针</p>
<p>将地址传递给函数, 函数对该变量的操作将会直接影响变量的真实值.</p>
<pre><code class="language-c++">int dis(int *a, int b){ return *a -= b;}
int a = 10, b = 3;
dis(&a, b);          //a = 7
</code></pre>
</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4726</wp:post_id>
		<wp:post_date><![CDATA[2021-09-24 17:19:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-09-24 09:19:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[c%e6%8c%87%e9%92%88%e5%85%a8%e9%9d%a2hu-luan%e5%88%86%e6%9e%90]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-c"><![CDATA[C/C++]]></category>
		<category domain="category" nicename="language"><![CDATA[Language]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>沁园春</title>
		<link>https://tisenye.com/4747</link>
		<pubDate>Fri, 15 Oct 2021 07:54:12 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4747</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:verse {"textAlign":"center"} -->
<pre class="wp-block-verse has-text-align-center"><strong>沁园春·长沙 </strong>
毛泽东 
独立寒秋，湘江北去，橘子洲头。
 看万山红遍，层林尽染； 
漫江碧透，百舸争流。 
鹰击长空，鱼翔浅底，万类霜天竞自由。 
怅寥廓，问苍茫天地，谁主沉浮？

携来百侣曾游，忆往昔峥嵘岁月稠。 
恰同学少年，风华正茂； 
书生意气，挥斥方遒。 
指点江山，激扬文字，粪土当年万户侯。 
曾记否，到中流击水，浪遏飞舟！</pre>
<!-- /wp:verse -->

<!-- wp:verse {"textAlign":"center"} -->
<pre class="wp-block-verse has-text-align-center"><strong>沁园春·雪 </strong>
 毛泽东
北国风光，千里冰封，万里雪飘。
望长城内外，惟馀莽莽；
大河上下，顿失滔滔。
山舞银蛇，原驰蜡象，欲与天公试比高。
须晴日，看红妆素裹，分外妖娆。

江山如此多娇，引无数英雄竞折腰。
惜秦皇汉武，略输文采；
唐宗宋祖，稍逊风骚。
一代天骄，成吉思汗，只识弯弓射大雕。
俱往矣，数风流人物，还看今朝。</pre>
<!-- /wp:verse -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4747</wp:post_id>
		<wp:post_date><![CDATA[2021-10-15 15:54:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-15 07:54:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e6%b2%81%e5%9b%ad%e6%98%a5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="%e6%af%9b%e6%b3%bd%e4%b8%9c"><![CDATA[毛泽东]]></category>
		<category domain="category" nicename="%e8%af%97%e6%ad%8c"><![CDATA[诗歌]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>LSM 模块动态加载</title>
		<link>https://tisenye.com/4753</link>
		<pubDate>Tue, 19 Oct 2021 07:50:44 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4753</guid>
		<description></description>
		<content:encoded><![CDATA[<p>LSM模块的加载在不同内核版本的Linux中方式有所不同</p>
<ul>
<li>在4.2之前的版本中,hook方式是通过一个全局的security_operations来进行函数点的注册具体hook方式可以看该<a href="https://www.cnblogs.com/LittleHann/p/4134939.html">文章1</a></li>
<li>在4.2后的hook方式巨大不同,采用类似链表的形式,可以一次性挂载多个hook点,介绍可以看该<a href="https://blog.csdn.net/weixin_45574485/article/details/108132539">文章2</a></li>
</ul>
<p>由于在多版本适配中发现4.2后添加hook的方式具有极大改变,且只能通过编译内核的方式进行hook,但业务需求必须要在客户机上动态载入因此在这方面寻找了很多资料(网上基本没有多少东西),请教了大佬,终于成功.不得不说学习内核真的是很苦恼的事情,资源少版本多,不同版本简直天差地别,能请教的人也不多😔</p>
<h2>4.2版本后hook</h2>
<h3>基本框架</h3>
<p>从文章2可以大致了解基本的LSM的hook方式,但是实际操作过程中会发现很多函数没法用(内核符号未导出),例如:security_add_hook,security_hook_heads等.
解决上述问题的办法有两种</p>
<ol>
<li>使用内核地址来进行函数和结构体的调用
<code>sudo cat /proc/kallsyms | grep security_hook_heads</code></li>
<li>复写函数,例如security_add_hooks,把源码的实现手动复写一遍</li>
</ol>
<p>在这个过程中如果编译遇到<strong>unkown symbol</strong>即需要通过内核符号来导出.我只导出了必要的几个(security_hook_heads,lsm_names,init_mm).</p>
<h3>只读问题</h3>
<p>在导出符号后,编译通过加载,发现并不能直接加载成功,查找源码可以看到很多符号是只读的,没法直接调用.在这个问题上我思考了好久,查了很多资料都没啥收获,经同事指点了解到修改页表的方式来修改只读问题.
重点介绍几个实用函数</p>
<ol>
<li><code>int follow_pte_pmd(struct mm_struct *mm, unsigned long address,unsigned long *start, unsigned long *end,pte_t **ptepp, pmd_t **pmdpp, spinlock_t **ptlp)</code>
这个函数跟踪pte和pmd,通过传入地址可以获取相应的pmd(获取pte为NULL,但是pmd正常还没深入研究该问题)该函数实际需要参数为mm和address其他都是自定义的空参数</li>
<li><code>pte_t pmd_mkwrite(pte_t pmd)</code>
将页表改为可写.</li>
<li><code>set_pmd_at(mm, addr, pmdp, pmd)</code>
设置pmdp为pmd.</li>
</ol>
<h3>实例代码</h3>
<p>插入模块需传入相对应的内核符号地址,动态加载的重点就是如何让只读的hook点变为可写,然后注入自己的函数.</p>
<p>内核学习道阻且艰啊</p>
<pre><code class="language-cpp">#include &lt;linux/module.h&gt;
#include &lt;linux/kernel.h&gt;
#include &lt;linux/init.h&gt;
#include &lt;linux/lsm_hooks.h&gt;
#include &lt;linux/security.h&gt;
#include &lt;linux/binfmts.h&gt;
#include &lt;linux/fs.h&gt;
#include &lt;linux/moduleparam.h&gt;
#include &lt;linux/sched.h&gt;
#include &lt;linux/kthread.h&gt;
#include &lt;linux/err.h&gt;
#include &lt;linux/elf.h&gt;
#include &lt;linux/string.h&gt;

/* extern void security_add_hooks(struct security_hook_list *hooks, int count, char *lsm); */
extern int bd_netlink_init(void);
extern void bd_netlink_exit(void);
extern int send_user_msg(char *pbuf, uint16_t len);
extern int denied_all_update;
static unsigned long security_hook_heads_addr = 0;
static unsigned long lsm_names_addr = 0;
static unsigned long init_mm_addr = 0;
/* static unsigned long security_add_hooks_addr = 0; */
module_param(security_hook_heads_addr, ulong, 0644);
module_param(lsm_names_addr, ulong, 0644);
module_param(init_mm_addr, ulong, 0644);
/* module_param(security_add_hooks_addr, ulong, 0644); */
void (*pfun)(struct security_hook_list *hooks, int count, char *lsm);
/* extern struct security_hook_heads security_hook_heads; */
struct security_hook_heads *my_hook_head; 
/* #define MY_HOOK_INIT(HEAD, HOOK){ \ */
/*  .head = &amp;my_hook_head.HEAD, .hook = {.HEAD = HOOK}} */

void make_memory_rw(unsigned long address){
    pte_t *ptep = NULL;
    pmd_t *pmdp= NULL, npmd;
    spinlock_t *ptl;
    unsigned long start, end;
    int flag = 0;
    flag = follow_pte_pmd(init_mm_addr, address, &amp;start, &amp;end, &amp;ptep, &amp;pmdp, &amp;ptl);
    printk(&quot;******%lx*******%lx*****%d***%lx\n&quot;, init_mm_addr, pmdp, flag, ptep);
    npmd = pmd_mkwrite(*pmdp);
    set_pmd_at(init_mm_addr, address, pmdp, npmd);
    printk(&quot;***********%d*************\n&quot;, pmd_write(npmd));
    if(pmdp){
        spin_unlock(ptl);
    }else{
        pte_unmap_unlock(ptep, ptl);
    }

}

pid_t g_user_pid = 0;

static int check_user_pid(void)
{
    if (current-&gt;tgid == g_user_pid)
        return 1;
    else
        return 0;
}

static int my_file_open(struct file *file, const struct cred *cred)
{
    printk(&quot;call %s\n&quot;, __func__)
}
static bool my_match_last_lsm(const char *list, const char *lsm){
    const char *last;
    if(WARN_ON(!list || !lsm))
        return false;
    last = strrchr(list, &#039;,&#039;);
    if(last)
        last++;
    else
        last = list;
    return !strcmp(last, lsm);
}

struct security_hook_list hooks[2];

void my_init_security_hook_list(void){
    union security_list_options my_hook;
    hooks[0].head = &amp;my_hook_head-&gt;file_open;
    my_hook.file_open = my_file_open;
    hooks[0].hook = my_hook;
}

static int my_lsm_append(char *new, char **result){
    char *cp;
    if(*result == NULL){
        *result = kstrdup(new, GFP_KERNEL);
    }else{
        if(my_match_last_lsm(*result, new))
            return 0;
        cp = kasprintf(GFP_KERNEL, &quot;%s,%s&quot;, *result, new);
        if(cp == NULL)
            return -ENOMEM;
        kfree(*result);
        *result = cp;
    }
    return 0;
}
static void my_add_hooks(struct security_hook_list *hooks, int count, char *lsm){
    int i;
    for(i = 0; i &lt; count; i++){
        hooks[i].lsm = lsm;
        list_add_tail_rcu(&amp;hooks[i].list, hooks[i].head);
    }
    /* if(my_lsm_append(lsm, (char **)lsm_names_addr) &lt; 0){ */
    /*  panic(&quot;%s - Cannot get early memory.\n&quot;, __func__); */
    /* } */
}

static int __init bd_init(void)
{

    /* pfun security_add_hooks = 0xffffffff9daee13c; */
    /* printk(&quot;************bd security start**********\n&quot;); */
    /* printk(&quot;************0x%lx**************\n&quot;, init_mm_addr); */
    /* printk(&quot;0x%lx 0x%lx\n&quot;, security_hook_heads_addr, lsm_names_addr); */
    make_memory_rw(security_hook_heads_addr);
    make_memory_rw(lsm_names_addr);
    /* printk(&quot;**************memory is rw*****************\n&quot;); */
    my_hook_head = (struct security_hook_heads*)security_hook_heads_addr;
    my_init_security_hook_list();
    /* pfun=(void(*)(struct security_hook_list *hooks, int count, char *lsm))security_add_hooks_addr; */
    /* pfun(hooks, 2, &quot;bdlsm&quot;); */
    my_add_hooks(hooks, 1,&quot;bdlsm&quot;);   
    return 0;
}

static void __exit bd_exit(void)
{
    printk(&quot;***************bd security exit*************\n&quot;);
}

MODULE_LICENSE(&quot;GPL&quot;);
module_init(bd_init);
module_exit(bd_exit);
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4753</wp:post_id>
		<wp:post_date><![CDATA[2021-10-19 15:50:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-10-19 07:50:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[lsm-%e6%a8%a1%e5%9d%97%e5%8a%a8%e6%80%81%e5%8a%a0%e8%bd%bd]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="lsm"><![CDATA[LSM]]></category>
		<category domain="post_tag" nicename="%e5%86%85%e6%a0%b8"><![CDATA[内核]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[cpp,c]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>红烧肉</title>
		<link>https://tisenye.com/4765</link>
		<pubDate>Mon, 01 Nov 2021 05:37:47 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4765</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>食材</h2>
<ul>
<li>精致五花肉</li>
<li>葱,姜</li>
<li>绵白糖</li>
<li>料酒,生抽,老抽</li>
<li>花雕酒</li>
</ul>
<h2>菜谱</h2>
<ol>
<li>热锅烫五花肉表皮(去毛,收紧表皮)</li>
<li>带皮五花肉斩成麻将块大小</li>
<li>用凉水焯肉,放入2片姜,一段葱,适量料酒.焯好后洗一洗血沫.</li>
<li>下肉,放入2片八角,1片香叶,一根桂皮,加葱姜.将肉炒香,煸炒至肉皮边缘略有焦色。起到定型、增香的作用。</li>
<li>加入糖色,生抽,老抽,冰糖,黄酒</li>
<li>加热水(这一步中的热水也可以是酒,茶等,但一定要是热的)盖过肉,期间可根据情况适当加老抽,胡椒粉(去腥)</li>
<li>大火，沸腾时迅速捞出血沫，然后转小火，盖上盖（一定！），且中途尽量少揭盖。炖一上午。没时间也至少要炖一个小时</li>
<li>加盐，注意别加多了，收汁之后会变咸。收汁时放入一勺蜂蜜，可以让肉色更加透亮好看。收汁时，要用铲子翻炒，让肉块均匀裹上，动作要迅速，因为有糖的缘故，不然会糊的。</li>
</ol>
<img src="https://tisenye.com/wp-content/uploads/2021/11/IMG_20211101_140322-300x189.jpg" alt="" width="300" height="189" class="size-medium wp-image-4777" /> 
<h2>炒糖色</h2>
<p>炒糖色的三种方法</p>
<ol>
<li>用水炒，这种方法耗时较长，简单上手.水和糖的比例为1：1。炒锅内清水烧沸，再加入同等重量的白糖或者冰糖，先用大火快速熬煮，直到看见略变颜色时，转为小火，慢慢熬制糖浆呈琥珀色</li>
<li>用油炒，此方法耗时最短，相对来说比较危险，并不适合新手操作！油和糖的比例为3：10。详细做法是，炒锅烧热加入多量的食用油润一下锅，再将油倒出，加入适量的凉油，按比例下入冰糖或者白糖，全程小火慢慢熬煮，直至成琥珀色.</li>
<li>水油混合炒，这种方法耗时刚好，不管是新手还是老手，都适用此方法。水和油和糖的比例为，1：4：5。炒锅烧热放入油，下入白糖或者冰糖，熬成暗红色起大泡后,加水慢慢炒至变色.</li>
</ol>
<p>糖色在炒的过程中先是由稀变稠，颜色由白色，逐渐变成浅黄色，再变成棕色，最后变成深棕色，就可以加水或者下原料.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4765</wp:post_id>
		<wp:post_date><![CDATA[2021-11-01 13:37:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-01 05:37:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%ad%a6%e5%8e%a8%e8%89%ba%e7%ba%a2%e7%83%a7%e8%82%89]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e7%83%b9%e9%a5%aa"><![CDATA[烹饪]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Python Linux 文件监控 (Pyinotify)</title>
		<link>https://tisenye.com/4782</link>
		<pubDate>Tue, 02 Nov 2021 07:51:21 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4782</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>pyinotify 是 inotify 的python封装.
inotify 是一种文件系统的变化通知机制，如文件增加、删除等事件可以立刻让用户态得知，该机制是著名的桌面搜索引擎项目 beagle 引入的，并在 Gamin 等项目中被应用。</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align: left;">事件标志</th>
<th style="text-align: left;">事件含义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align: left;">IN_ACCESS</td>
<td style="text-align: left;">被监控项目或者被监控目录中的文件被访问</td>
</tr>
<tr>
<td style="text-align: left;">IN_MODIFY</td>
<td style="text-align: left;">被监控项目或者被监控目录中的文件被修改</td>
</tr>
<tr>
<td style="text-align: left;">IN_ATTRIB</td>
<td style="text-align: left;">被监控项目或者被监控目录中的文件的元数据被修改</td>
</tr>
<tr>
<td style="text-align: left;">IN_CLOSE_WRITE</td>
<td style="text-align: left;">一个打开且等待写入的文件或目录被关闭</td>
</tr>
<tr>
<td style="text-align: left;">IN_CLOSE_NOWRITE</td>
<td style="text-align: left;">一个以只读方式打开的文件或者目录被关闭</td>
</tr>
<tr>
<td style="text-align: left;">IN_OPEN</td>
<td style="text-align: left;">文件或者目录被打开</td>
</tr>
<tr>
<td style="text-align: left;">IN_MOVED_FROM</td>
<td style="text-align: left;">被监控项目或者目录中的文件被移除监控区域</td>
</tr>
<tr>
<td style="text-align: left;">IN_MOVED_TO</td>
<td style="text-align: left;">被监控项目或者目录中的文件被移除监控区域</td>
</tr>
<tr>
<td style="text-align: left;">IN_CREATE</td>
<td style="text-align: left;">在锁监控的目录中创建子目录或文件</td>
</tr>
<tr>
<td style="text-align: left;">IN_DELETE</td>
<td style="text-align: left;">在所监控的目录中删除目录或文件</td>
</tr>
<tr>
<td style="text-align: left;">IN_CLOSE</td>
<td style="text-align: left;">文件被关闭,等同于IN_CLOSE_WRITE</td>
</tr>
<tr>
<td style="text-align: left;">IN_MOVE</td>
<td style="text-align: left;">文件被移动,等同于IN_CLOSE_NOWRITE</td>
</tr>
</tbody>
</table>
<p><strong>同时监听多个事件时用 | 来合并事件</strong></p>
<pre><code class="language-python">import os
import pyinotify
import sys
from elf import verify_elf   #elf验证文件模块

wm = pyinotify.WatchManager()   #注册WatchManager对象

#mask为监听事件标志，此处监控删除、创建、修改三个时间
mask = pyinotify.IN_DELETE | pyinotify.IN_CREATE | pyinotify.IN_MODIFY

class EventHandler(pyinotify.ProcessEvent):     #处理类，需要继承自ProcessEvent
    def process_IN_CREATE(self, event):         #重写相应的process函数
        file = open(&quot;/home/watch.log&quot;, &quot;a&quot;)     #时间发生时写入watch.log
        if(verify_elf(event.pathname)):
            file.write(&quot;----------It&#039;s ELF file !!------------\n&quot;)
        file.write(&quot;Creating:&quot; + event.pathname+&quot;\n&quot;)
        file.close()

    def process_IN_DELETE(self, event):
        file = open(&quot;/home/watch.log&quot;, &quot;a&quot;)
        if(verify_elf(event.pathname)):
            file.write(&quot;----------It&#039;s ELF file !!------------\n&quot;)
        file.write(&quot;Removing:&quot; + event.pathname+&quot;\n&quot;)
        file.close()

    def process_IN_MODIFY(self, event):
        file = open(&quot;/home/watch.log&quot;, &quot;a&quot;)
        if(verify_elf(event.pathname)):
            file.write(&quot;----------It&#039;s ELF file !!------------\n&quot;)
        file.write(&quot;Changed: &quot; + event.pathname+&quot;\n&quot;)
        file.close()

handler = EventHandler()
notifier = pyinotify.Notifier(wm, handler)      #实例化
wm.add_watch(&#039;/usr/lib64&#039;, mask, rec=True)      #添加监控目录
wm.add_watch(&#039;/usr/share&#039;, mask, rec=True)
wm.add_watch(&#039;/usr/libexec&#039;, mask, rec=True)
wdd = wm.add_watch(&#039;/usr/bin&#039;, mask, rec=True)

notifier.loop()     #运行
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4782</wp:post_id>
		<wp:post_date><![CDATA[2021-11-02 15:51:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-02 07:51:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[python-linux-%e6%96%87%e4%bb%b6%e7%9b%91%e6%8e%a7-pyinotify]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[python]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Linux内核模块签名</title>
		<link>https://tisenye.com/4791</link>
		<pubDate>Fri, 12 Nov 2021 02:23:31 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4791</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>启用UEFI的系统下,直接插入模块会提示 operation not permitted.此时必须将模块签名才可正确插入</p>
</blockquote>
<ol>
<li>
<p>使用 openssl 生成密钥对进行签名：</p>
<pre><code>~$ openssl req -new -x509 -newkey rsa:2048 -keyout MOK.priv -outform DER -out MOK.der -nodes -days 36500 -subj &quot;/CN=VMware/&quot;</code></pre>
<p>（将 MOK 替换为所需的密钥文件名。）</p>
</li>
<li>
<p>通过运行以下命令，使用生成的密钥对模块进行签名：</p>
<pre><code>~$ sudo /usr/src/linux-headers- <code>uname -r</code>/scripts/sign-file sha256 ./MOK.priv ./MOK.der $(modinfo -n vmmon)</code></pre>
<p>使用下列命名查看模块签名状态</p>
<p><code>hexdump -C 8821ce.o | tail</code></p>
</li>
<li>
<p>通过运行以下命令将公钥导入系统的 MOK 列表：</p>
<p><code>~$ sudo mokutil --import MOK.der</code></p>
</li>
<li>
<p>确认此 MOK 注册请求的密码。</p>
</li>
<li>
<p>重新启动机器。按照说明从 UEFI 控制台完成注册</p>
</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4791</wp:post_id>
		<wp:post_date><![CDATA[2021-11-12 10:23:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-11-12 02:23:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[linux%e5%86%85%e6%a0%b8%e6%a8%a1%e5%9d%97%e7%ad%be%e5%90%8d]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="%e5%86%85%e6%a0%b8%e7%ad%be%e5%90%8d"><![CDATA[内核签名]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Android权限 ——— DeviceAdmin</title>
		<link>https://tisenye.com/4806</link>
		<pubDate>Mon, 13 Dec 2021 05:48:14 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4806</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>在服务保活的任务下,需要控制应用不被卸载(人称流氓软件嗷),由此引发的对安卓权限的认识</p>
</blockquote>
<h1>DeviceAdmin</h1>
<p>设备管理员权限,能够使APP对系统一些设置进行更改(权限足够的情况下),详细功能查看<a href="https://developer.android.com/guide/topics/admin/device-admin?hl=zh-cn">官方文档</a></p>
<h2>申请DeviceAdmin权限</h2>
<ol>
<li>在res文件夹下创建XML文件夹,然后创建一个device.xml文件(名字可以随意取),内容如下
<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
&lt;device-admin xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; &gt;
&lt;uses-policies&gt;
    &lt;!-- 设置密码规则 --&gt;
    &lt;disable-camera /&gt;
    &lt;limit-password /&gt;
    &lt;watch-login /&gt;
    &lt;reset-password /&gt;
    &lt;force-lock /&gt;
    &lt;wipe-data /&gt;
&lt;/uses-policies&gt;
&lt;/device-admin&gt;</code></pre></li>
<li>
<p>创建一个继承DeviceAdminReceiver类的接收器,需重写方法,内容如下</p>
<pre><code class="language-java">public class MyDeviceAdminReceiver extends DeviceAdminReceiver {
private static final String TAG = &quot;DeviceReveiver&quot;;
public void onProfileProvisioningComplete(Context context, Intent intent) {
    super.onProfileProvisioningComplete(context, intent);
}

@Override
public void onEnabled(Context context, Intent intent) {
    super.onEnabled(context, intent);
}

@Override
public CharSequence onDisableRequested(Context context, Intent intent) {
    return super.onDisableRequested(context, intent);
}

@Override
public void onDisabled(Context context, Intent intent) {
    super.onDisabled(context, intent);
}

@Override
public void onPasswordChanged(Context context, Intent intent) {
    super.onPasswordChanged(context, intent);
    Log.d(TAG,&quot;onPasswordChanged&quot;);
}

@Override
public void onPasswordFailed(Context context, Intent intent) {
    super.onPasswordFailed(context, intent);
    Log.d(TAG, &quot;onPasswordFailed&quot;);
}

@Override
public void onPasswordSucceeded(Context context, Intent intent) {
    super.onPasswordSucceeded(context, intent);
    Log.d(TAG, &quot;onPasswordSucceeded&quot;);
}

@Override
public void onPasswordExpiring(Context context, Intent intent) {
    super.onPasswordExpiring(context, intent);
    Log.d(TAG,&quot;onPasswordExpiring&quot;);
}

/**
 * 获取ComponentName，DevicePolicyManager的大多数方法都会用到
 */
public static ComponentName getComponentName(Context context) {
    return new ComponentName(context.getApplicationContext(), MyDeviceAdminReceiver.class);
}
}</code></pre>
</li>
<li>在AndroidManifest.xml文件中application标签下添加接收器,内容如下
<pre><code class="language-xml">&lt;receiver android:name=&quot;.MyDeviceAdminReceiver&quot;
        android:description=&quot;@string/device_admin_description&quot;
        android:permission=&quot;android.permission.BIND_DEVICE_ADMIN&quot;
        android:exported=&quot;true&quot;&gt;
        &lt;meta-data
            android:name=&quot;android.app.device_admin&quot;
            android:resource=&quot;@xml/device&quot; /&gt;
        &lt;intent-filter&gt;
            &lt;action android:name=&quot;android.app.action.DEVICE_ADMIN_ENABLED&quot; /&gt;
            &lt;action android:name=&quot;android.app.action.DEVICE_ADMIN_DISABLE_REQUESTED&quot; /&gt;
            &lt;action android:name=&quot;android.app.action.DEVICE_ADMIN_DISABLED&quot; /&gt;
        &lt;/intent-filter&gt;
&lt;/receiver&gt;</code></pre></li>
<li>请求设备管理权限方法
<pre><code class="language-java">DevicePolicyManager dpm;
ComponentName mComponentName;
//请求设备管理权限
private void requestDeviceManager(){
    //实例化dpm，dpm将是随后使用各种系统设置方法的调用者
    dpm = (DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE);
    //传入继承自DeviceAdminReceiver的类信息
    mComponentName = new ComponentName(this,
            MyDeviceAdminReceiver.class);
    //没有Admin权限，则申请
    if(!dpm.isAdminActive(mComponentName)){
        //跳转获取授权界面
        Intent intent = new Intent(DevicePolicyManager.ACTION_ADD_DEVICE_ADMIN);
        intent.putExtra(DevicePolicyManager.EXTRA_DEVICE_ADMIN,
                mComponentName);
        intent.putExtra(DevicePolicyManager.EXTRA_ADD_EXPLANATION,
                getString(R.string.device_admin_description));
        startActivity(intent);
        Log.d(TAG, &quot;getadmin!&quot;);
    }
    Log.d(TAG, &quot;ending!&quot;);
}</code></pre></li>
<li>愉快的调用我们需要的方法了,有哪些方法可以戳这里<a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager">官方文档</a>.但是如果调用一些权限比较高的方法例如addUserRestriction,此时会返回一个Error:SecurityException,这是由于Admin不是DeviceOwner的原因(if admin is not a device or profile owner.),必须是设备拥有者才能调用.查看<a href="https://tisenye.com/4819">设置设备拥有者</a></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4806</wp:post_id>
		<wp:post_date><![CDATA[2021-12-13 13:48:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-13 05:48:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[android%e6%9d%83%e9%99%90-devicemanager-deviceowner]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="%e6%9d%83%e9%99%90"><![CDATA[权限]]></category>
		<category domain="post_tag" nicename="%e8%ae%be%e5%a4%87%e7%ae%a1%e7%90%86"><![CDATA[设备管理]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[xml,java,clike]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Android权限 ——— DeviceOwner</title>
		<link>https://tisenye.com/4819</link>
		<pubDate>Mon, 13 Dec 2021 06:43:13 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4819</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>在DeviceAdmin权限下有限方法无法调用,此时需要DeviceOwner权限来开启</p>
</blockquote>
<h1>DeviceOwner</h1>
<p>设备拥有者
在安卓权限管理者中
<code>DeviceOnwer &gt; ProfileOwner &gt; DeviceAdmin</code>
Android系统只能设置一个DeviceOwner程序，并且该程序在设置为DeviceOwner后不能取消，应用不能卸载，唯一可以取消的途径是恢复出厂设置或者应用自身取消。DeviceOwner应用和ProfileOwner也会产生冲突，系统只能有一个DeviceOwner应用或者ProfileOwner应用</p>
<h2>设置DeviceOwner</h2>
<p>设置DeviceOwner的前提是DeviceAdmin,可以查看<a href="https://tisenye.com/4806">设置DeviceAdmin</a>
设置DeviceOwner有好几种方式,<a href="https://blog.csdn.net/visionliao/article/details/84768035">一键设置DeviceOwner</a>介绍的十分详细
抛开硬件方面和修改系统源码进行编译的方法来看,在开启开发者模式下,使用adb shell命令来设置是实用的
<code>dpm set-device-owner com.example.activity/com.example.activity.MyDeviceAdminReceiver</code>
此方法的前提条件是没有用户账户存在</p>
<h2>取消DeviceOwner</h2>
<p>调用方法<code>clearDeviceOwnerApp(packageName)</code>即可</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4819</wp:post_id>
		<wp:post_date><![CDATA[2021-12-13 14:43:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-13 06:43:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[android%e6%9d%83%e9%99%90-deviceowner]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="%e6%9d%83%e9%99%90"><![CDATA[权限]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>煲仔饭</title>
		<link>https://tisenye.com/4830</link>
		<pubDate>Mon, 13 Dec 2021 08:16:52 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4830</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>食材</h1>
<ul>
<li>丝苗米</li>
<li>腊肠</li>
<li>小青菜</li>
<li>猪油</li>
<li>蒸鱼豉油(或生抽)，酒(宜高度酒) ，美极鲜，鸡精，鱼露(有条件的话)，白糖</li>
<li>八角，陈皮，葱，姜，蒜</li>
</ul>
<h1>菜谱</h1>
<h2>酱汁</h2>
<blockquote>
<p>酱汁是煲仔饭的灵魂</p>
</blockquote>
<ul>
<li>在碗中放入蒸鱼豉油30g，酒一勺，白糖一勺，可选（美极鲜几滴，鸡精少量，鱼露几滴）</li>
<li>开小火倒油约30g，放入八角一片，陈皮一片，葱一小段，姜一片，蒜一瓣，炒香。</li>
<li>捞出小料，倒入酱汁，转大火烧开蒸发酒精，接着转小伙30秒。此时保留了酒香且去除了酒精的刺激。</li>
</ul>
<h2>米饭</h2>
<ul>
<li>将丝苗米洗净，浸泡1小时以上</li>
<li>在锅底涂上一层薄油，放入米，加适量水，再加一点油在上面。</li>
<li>开煮，如果是砂锅转大伙烧开，再小火煮2~3分钟</li>
<li>在锅中还有一些可见的水时，加腊肠</li>
<li>饭煮好后淋酱汁，可以打一个蛋，放入焯过水的小青菜，再焖3~5分钟</li>
<li>起锅，撒一点小葱花</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4830</wp:post_id>
		<wp:post_date><![CDATA[2021-12-13 16:16:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-13 08:16:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e7%85%b2%e4%bb%94%e9%a5%ad]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="%e7%83%b9%e9%a5%aa"><![CDATA[烹饪]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Android ——— 获取应用权限列表</title>
		<link>https://tisenye.com/4840</link>
		<pubDate>Wed, 15 Dec 2021 06:29:33 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4840</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>对已安装应用进行权限扫描</p>
</blockquote>
<h2>申请QUERY_ALL_PACKAGES权限</h2>
<p>老版安卓(6.1以前)可以直接扫描所有应用，之后的版本都需要声明相应权限，在Manifest文件中添加：</p>
<pre><code class="language-xml">&lt;uses-permission android:name=&quot;android.permission.QUERY_ALL_PACKAGES&quot;
        tools:ignore=&quot;QueryAllPackagesPermission&quot; /&gt;</code></pre>
<h2>权限扫描</h2>
<pre><code class="language-java">String[] permissions = new String[]{
            Manifest.permission.WRITE_EXTERNAL_STORAGE,
            Manifest.permission.READ_EXTERNAL_STORAGE,
            Manifest.permission.READ_PHONE_NUMBERS,
            Manifest.permission.CAMERA,
            Manifest.permission.BLUETOOTH,
            Manifest.permission.ACCESS_BACKGROUND_LOCATION,
            Manifest.permission.ACCESS_COARSE_LOCATION,
            Manifest.permission.ACCESS_FINE_LOCATION,
            Manifest.permission.ACCESS_WIFI_STATE,
            Manifest.permission.ANSWER_PHONE_CALLS,

};//权限数组
public void getApplicationList(){
        //在mTextView输出结果
        mTextView = (TextView) findViewById(R.id.textView1);
        mTextView.setMovementMethod(ScrollingMovementMethod.getInstance());

        //实例化包管理对象
        PackageManager packageManager = getPackageManager();

        //获取所有应用列表
        List&lt;PackageInfo&gt; list = packageManager.getInstalledPackages(PackageManager.GET_PERMISSIONS);
        StringBuilder stringBuilder = new StringBuilder();
        for (PackageInfo packageInfo : list) {
            ApplicationInfo applicationInfo = packageInfo.applicationInfo;

            //过滤系统应用可以不加
            if(applicationInfo.uid &lt;= 10000) continue;
            stringBuilder.append(&quot;package name:&quot;
                    + packageInfo.packageName
                    + &quot;\n&quot;);
            stringBuilder.append(&quot;应用名称:&quot;
                    + applicationInfo
                    .loadLabel(packageManager)
                    + &quot;\n&quot;);

            //检查相应权限是否存在，permissions是自定义权限数组
            for(String permission : permissions){
                boolean flag = (packageManager.PERMISSION_GRANTED == packageManager.checkPermission(permission, packageInfo.packageName));
                if(flag){
                    stringBuilder.append(&quot;拥有权限： &quot; + permission + &quot;\n&quot;);
                }
            }
            stringBuilder.append(&quot;\n&quot;);
            mTextView.setText(stringBuilder.toString());
        }
    }</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4840</wp:post_id>
		<wp:post_date><![CDATA[2021-12-15 14:29:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2021-12-15 06:29:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[android-%e8%8e%b7%e5%8f%96%e5%ba%94%e7%94%a8%e6%9d%83%e9%99%90%e5%88%97%e8%a1%a8]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="post_tag" nicename="%e6%9d%83%e9%99%90"><![CDATA[权限]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[xml,java,clike]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Linux内核模块Makefile</title>
		<link>https://tisenye.com/4887</link>
		<pubDate>Thu, 06 Jan 2022 05:55:07 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4887</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>单文件</h2>
<pre><code class="language-bash">obj-m := test1.o
test1-objs := test.o

KERNEL_DIR ?= /lib/modules/`uname -r`/build
PWD := `pwd`

all:
    make -C $(KERNEL_DIR) SUBDIRS=$(PWD) modules 

clean:
    rm -rf *.o *.ko *.ko.* *.mod.*</code></pre>
<h2>多文件</h2>
<pre><code class="language-bash"># Makefile

obj-m := abc.o
abc-objs := test.o add.o

KERNEL_DIR ?= /lib/modules/`uname -r`/build
PWD := `pwd`

all:
    make -C $(KERNEL_DIR) SUBDIRS=$(PWD) modules 

clean:
    rm -rf *.o *.ko *.ko.* *.mod.*</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4887</wp:post_id>
		<wp:post_date><![CDATA[2022-01-06 13:55:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-01-06 05:55:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[linux%e5%86%85%e6%a0%b8%e6%a8%a1%e5%9d%97makefile]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="makefile%ef%bc%8c%e5%86%85%e6%a0%b8%e6%a8%a1%e5%9d%97"><![CDATA[Makefile，内核模块]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[bash]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Linux内核之模块机制分析</title>
		<link>https://tisenye.com/4898</link>
		<pubDate>Mon, 14 Feb 2022 08:54:04 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4898</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>使用的内核版本为5.1.1</p>
</blockquote>
<p>模块作为ELF对象文件存放在文件系统中,可以通过执行insmod命令动态加载到内核中,也可以静态编译进内核.</p>
<p>对于每个模块,系统都分配一个包含以下数据的内存区:</p>
<ul>
<li>一个module对象(描述一个模块)</li>
<li>表示模块名的一个以null结束的字符串(所有的模块都必须有唯一的名字)</li>
<li>实现模块功能的代码</li>
</ul>
<p>先上一个传统的hello world</p>
<pre><code class="language-c">#include &lt;linux/init.h&gt;
#include &lt;linux/module.h&gt;

static int __init hellow_init(void){
    printk(&quot;hello world\n&quot;);
}

static void __exit hello_exit(void){
    printk(&quot;Goodby\n&quot;);
}

module_init(hellow_init);
module_exit(hellow_exit);</code></pre>
<h2>1.&lt;linux/module.h&gt;</h2>
<p>struct module用来存储模块的相关信息</p>
<p>module对象被存放在一个双向循环链表.链表头部存放在modules变量中</p>
<pre><code class="language-c">//由于内容过长,只列出部分内容(其实是好多不明白有啥作用(*/ω＼*))
strcut module{
    //存放状态module状态信息
    enum module_state state;

    //模块链表指针
    struct list_head list;

    //模块名
    char name[MODULE_NAME_LEN];

    //kobject数据结构
    struct module_kobject mkobj

    //指向导出符号数组的指针
    const struct kernel_symbol *syms;

    //导出符号数
    unsigned int num_syms;

    //指向导出符号CRC值数组的指针
    const s32 *crcs

    //GPL格式导出符号数
    unsigned int num_gpl_syms;

    //指向GPL格式导出符号数组的指针
    const struct kernel_symbol *gpl_syms;

    //指向GPL格式导出符号CRC值数组的指针
    const s32 *gpl_crcs

    //模块异常表项数
    unsigned int num_exentries;

    //指向模块异常表的指针
    struct exception_table_entry *extable;

    //初始化函数
    int (*init)(void);

    //链接模块时的指令参数
    char *args;
    ......

}</code></pre>
<p>module_state 用来表示模块的状态信息</p>
<pre><code class="language-c">enum module_state{
    MODULE_STATE_LIVE,      //正常活动
    MODULE_STATE_COMING,    //就绪,可以允许module_init方法,如果成功运行状态将转为LIVE
    MODULE_STATE_GOING,         //退出,退出模块时,在执行module_exit方法之前,将会被设置为GOING
    MODULE_STATE_UNFORMED,  //未就绪,仍在装载
};</code></pre>
<h2>2. __init , __exit</h2>
<pre><code class="language-c">static int __init hellow_init(void){
    printk(&quot;hello world\n&quot;);
}

static void __exit hello_exit(void){
    printk(&quot;Goodby\n&quot;);
}</code></pre>
<p>在内核模块中大部分函数都使用static来修饰,用以限制函数的作用域.</p>
<p>如果函数需要被其他模块调用,不能加static修饰,且需要使用EXPORT_SYMBOL();来导出符号到内核符号表中</p>
<pre><code class="language-c">int add(int a, intb){
    return a + b;
}
EXPORT_SYMBOL(add);</code></pre>
<p>那__init和__exit在这里的作用是什么呢? </p>
<pre><code class="language-c">//&lt;linux/init.h&gt;
#define __init          __section(.init.text) __cold __latent_entropy __noinitretpoline
#define __initdata  __section(.init.data)
#define __initconst __section(.init.rodata)
#define __exit          __section(.exit.text) __exitused __cold notrace
#define __exitdata  __section(.exit.data)
#define __exit_call __used __section(.exitcall.exit)

//compiler_attribute.h
#define __section(S)        __attribute__((__section__(#S)))</code></pre>
<p>attribute section宏涉及到链接脚本(在把.o文件编译为ELF文件时所要遵循的规则).</p>
<p>概括性来说(也属于是知识盲区了):把需要的函数或者数据放入指定名称的段中.</p>
<p>用以规划内存划分将相关联的代码放在一起,以提高性能.</p>
<p>所以当我们调用__init和__exit时,代码将存放在.init.text和.exit.text段中,这个段中的内存在使用完后会被释放掉供其他使用</p>
<h2>3. module_init()</h2>
<p>module_init有两种情况,通过<code>#ifndef MODULE</code>来区分</p>
<p>一. 没有定义MODULE的情况</p>
<pre><code class="language-c">//&lt;linux/module.h&gt;

#define module_init(x)  __initcall(x);

//&lt;linu/init.h&gt;
#define __initcall(fn)  device_initcall(fn)
#define device_initcall(fn) __define_initcall(fn, 6)
#define __define_initcall(fn, id) __define_initcall(fn, id, .initcall#id)

#ifdef CONFIG_HAVE_ARCH_PREL32_RELOCATIONS
#define __define_initcall(fn, id, __sec)    \
        __ADDRESSABLE(fn)                                           \
        asm(&quot;.section      \&quot;&quot; #__sec &quot;.init\&quot;, \&quot;a\&quot; \n&quot;)\
        &quot;__initcall_&quot; #fn #id &quot;:                         \n&quot;    \
                &quot;.long &quot; #fn &quot; - .                       \n&quot;\
        &quot;.previos                                          \n&quot;);
#else
#define __define_initcall(fn, id, __sec)    \
    static initcall_t __initcall_##fn##id __used    \
            __attribute__((__section__(#__sec &quot;.init&quot;))) = fn;
#endif</code></pre>
<p>重点分析__define_initcall函数,以我们的hello模块为例,初始化函数为hellow_init</p>
<pre><code class="language-c">// __define_initcall(hellow_init, 6, .initcall6)
//asm为扩展汇编语法
.section  &quot;.initcall6.init&quot;,&quot;a&quot;
__initcall_hello_init6:
.long hello_init - .
.previos</code></pre>
<ul>
<li>.section  : 创建新开的代码段,名称为 .initcall.init</li>
<li>__initcall_hello_init6  : 定义变量,变量名为__initcall_hell_init6</li>
<li>.long hello_init - .   : .long分配4个地址空间,内容为(hello_init - .)的偏移值,此处的(.)点为__initcall.init地址</li>
<li>.previous  : 恢复当前段为之前的状态 </li>
</ul>
<pre><code class="language-c">//&lt;linux/init.h&gt;
#define pure_initcall(fn)                   __define_initcall(fn, 0)

#define core_initcall(fn)                   __define_initcall(fn, 1)
#define core_initcall_sync(fn)      __define_initcall(fn, 1s)
#define postcore_initcall(fn)           __define_initcall(fn, 2)
#define postcore_initcall_sync(fn) __define_initcall(fn, 2s)
#define arch_initcall(fn)                   __define_initcall(fn, 3)
#define arch_initcall_sync(fn)      __define_initcall(fn, 3s)
#define subsys_initcall(fn)             __define_initcall(fn, 4)
#define subsys_initcall_sync(fn)    __define_initcall(fn, 4s)
#define fs_initcall(fn)                     __define_initcall(fn, 5)
#define fs_initcall_sync(fn)            __define_initcall(fn, 5s)
#define rootfs_initcall(fn)             __define_initcall(fn, rootfs)
#define device_initcall(fn)             __define_initcall(fn, 6)
#define device_initcall_sync(fn)    __define_initcall(fn, 6s)
#define late_initcall(fn)                   __define_initcall(fn, 7)
#define late_initcall_sync(fn)      __define_initcall(fn, 7s)</code></pre>
<p>二. 定义了MODULE的情况</p>
<pre><code class="language-c">#define early_initcall(fn)                  module_init(fn)
#define core_initcall(fn)                       module_init(fn)
#define core_initcall_sync(fn)          module_init(fn)
#define postcore_initcall(fn)               module_init(fn)
#define postcore_initcall_sync(fn)  module_init(fn)
#define arch_initcall(fn)                       module_init(fn)
#define subsys_initcall(fn)                 module_init(fn)
#define subsys_initcall_sync(fn)        module_init(fn)
#define fs_initcall(fn)                         module_init(fn)
#define fs_initcall_sync(fn)                module_init(fn)
#define rootfs_initcall(fn)                 module_init(fn)
#define device_initcall(fn)                 module_init(fn)
#define device_initcall_sync(fn)        module_init(fn)
#define late_initcall(fn)                       module_init(fn)
#define late_initcall_sync(fn)          module_init(fn)

#define console_initcall(fn)                module_init(fn)

#define module_init(initfn)         \
        static inline initcall_t __maybe_unused __inittest(void)    \
        {return initfn; }           \
        int init_module(void) __copy(initfn) __attribute__((alias(#initfn)));

#define module_exit(exitfn)         \
        static inline exitcall_t __maybe_unused __exittest(void)    \
    {return exitfn;}            \
        void cleanup_module(void) __copy(exit) __atribute__((alias(#exitfn)));
</code></pre>
<p>此时真正的函数入口为init_module,也就是说hellow_init函数通过module_init调用最后的实际执行的函数的名称还是init_module.</p>
<p>内核中，不同的init函数被放在不同的子区域中(.initcallX)，1~7顺序的进行调用,这样保证了调用的优先级.</p>
<pre><code class="language-c">extern initcall_entry_t __initcall_start[];
extern initcall_entry_t __initcall0_start[];
extern initcall_entry_t __initcall1_start[];
extern initcall_entry_t __initcall2_start[];
extern initcall_entry_t __initcall3_start[];
extern initcall_entry_t __initcall4_start[];
extern initcall_entry_t __initcall5_start[];
extern initcall_entry_t __initcall6_start[];
extern initcall_entry_t __initcall7_start[];
extern initcall_entry_t __initcall_end[];

static initcall_entry_t *initcall_levels[] __initdata = {
        __initcall0_start,
    __initcall1_start,
    __initcall2_start,
    __initcall3_start,
    __initcall4_start,
    __initcall5_start,
    __initcall6_start,
    __initcall7_start,
    __initcall_end,
};</code></pre>
<p>这里的initcall_levels存储的是总的initcall函数地址</p>
<h2>4.do_initcall_level()</h2>
<p>Linux中的启动顺序</p>
<pre><code class="language-c">start_kernel() ---&gt;  arch_call_rest_init()  ---&gt;  rest_init()
---&gt;  kernel_init()  ---&gt;  kernel_init_freeable()  ---&gt;
do_basic_setup()  ---&gt;  do_initcalls()  ---&gt;  do_initcall_level()
---&gt;  do_one_initcall()</code></pre>
<pre><code class="language-c">//init/main.c
static void __init do_initcalls(void)
{
    int level;
    for(level = 0; level &lt; ARRAY_SIZE(initcall_levels) - 1; level++)
        do_initcall_level(level);
}

static void __init do_initcall_level(int level)
{
    initcall_entry_t *fn;

    strcpy(initcall_command_line, saved_command_line);
    parse_args(initcall_level_names[level],
              initcall_command_line, __start__param,
              __stop__param - __start__param,
              level, level,
              NULL, &amp;repaire_env_string);

    trace_initcall_level(initcall_level_names[level]);

    //逐个初始化
    for(fn = initcall_levels[level]; fn &lt; initcall_levels[level+1]; fn++)
            do_one_initcall(initcall_from_entry(fn));
}

//寻找函数地址
static inline initcall_t initcall_from_entry(initcall_entry_t *entry)
{
    return offset_to_ptr(entry);
}

//根据偏移返回地址
static inline void *offset_to_ptr(const int *off)
{
    return (void *)((unsigned long)off + *off);
}</code></pre>
<p>内存清理回收</p>
<pre><code class="language-c">start_kernel() ---&gt;  arch_call_rest_init()  ---&gt;  rest_init()
---&gt;  kernel_init() ---&gt; ftrace_free_init_mem() ---&gt;  free_initmem()</code></pre>
<pre><code class="language-c">//kernel/trace/ftrace.c
void __init ftrace_free_init_mem(void)
{
    //__init_begin就是之前用__init标记的那些代码段的起始位置
        void *start = (void *)(&amp;__init_begin);
        void *end = (void *)(&amp;__init_end);

    //这个函数负责具体清理工作,由于太长就不列出来了
        ftrace_free_mem(NULL, start, end);
}

void free_initmem(void)
{
    free_initmem_default(-1);
}

static inline unsigned long free_initmem_default(int poison)
{
    extern char __init_begin[], __init_end[];
    return free_reserved_area(&amp;__init_begin, &amp;__init_end, poison,
                             &quot;unused kernel&quot;);
}</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4898</wp:post_id>
		<wp:post_date><![CDATA[2022-02-14 16:54:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-14 08:54:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[linux%e5%86%85%e6%a0%b8%e4%b9%8b%e6%a8%a1%e5%9d%97%e6%9c%ba%e5%88%b6%e5%88%86%e6%9e%90]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[c,clike]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Makefile</title>
		<link>https://tisenye.com/4904</link>
		<pubDate>Tue, 22 Feb 2022 03:14:45 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4904</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading {"level":1} -->
<h1>Makefile</h1>
<!-- /wp:heading -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>学习Makefile的知识点</p></blockquote>
<!-- /wp:quote -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>参考源:<a href="https://blog.csdn.net/haoel/article/details/2886">陈皓大佬博客</a></p></blockquote>
<!-- /wp:quote -->

<!-- wp:heading -->
<h2>一.程序的编译和链接</h2>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>编译(compile) : 将源文件编译成中间目标文件(Object File)的动作叫做编译,在Windows下是 .obj文件,UNIX下是 .o文件.编译时,编译器需要语法的正确,函数与变量的声明的正确(指定需要的头文件位置),一般来说每个源文件都应该对应于一个中间目标文件.</li><li>链接(link) : 把所有需要的Object File合成执行文件.链接主要链接函数和全局变量,可以使用中间目标文件来链接应用程序,因此这个阶段并不需要源文件的参与,只管理中间目标文件.在大多时候编译生成的中间目标文件太多,在链接时需要明显地指出中间目标文件名,这对于编译很不方便,因此会进行中间目标文件打包,在Windows下这种包叫做“库文件”(Library File),也就是 .lib文件,在UNIX下,是Archive File,也就是 .a文件.</li><li>总结整体流程:源文件首先生成中间目标文件,再由中间目标文件生产执行文件.在编译时,编译器只检测语法,函数和变量是否被声明.在链接程序时,链接器会在所有中间目标文件中找寻函数的实现,找不到会产生链接错误码.</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>二.概览</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Example</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;edit : main.o kbd.o command.o display.o \<br>&nbsp; &nbsp; &nbsp; &nbsp;  insert.o search.o files.o utils.o \<br>&nbsp; &nbsp; &nbsp;cc -o edit main.o kbd.o command.o display.o \<br>&nbsp; &nbsp; &nbsp; &nbsp;  insert.o search.o files.o utils.o<br>&nbsp;​<br>&nbsp;main.o : main.c defs.h<br>&nbsp; &nbsp; &nbsp;cc -c main.c<br>&nbsp;kbd.o : kbd.c defs.h command.h<br>&nbsp; &nbsp; &nbsp;cc -c kbd.c<br>&nbsp;command.o : command.c defs.h command.h<br>&nbsp; &nbsp; &nbsp;cc -c command.c<br>&nbsp;display.o : display.c defs.h buffer.h<br>&nbsp; &nbsp; &nbsp;cc -c display.c<br>&nbsp;insert.o : insert.c defs.h buffer.h<br>&nbsp; &nbsp; &nbsp;cc -c insert.c<br>&nbsp;search.o : search.c defs.h buffer.h<br>&nbsp; &nbsp; &nbsp;cc -c search.c<br>&nbsp;files.o : files.c defs.h buffer.h command.h<br>&nbsp; &nbsp; &nbsp;cc -c files.c<br>&nbsp;utils.o : utils.c defs.h<br>&nbsp; &nbsp; &nbsp;cc -c utils.c<br>&nbsp;clean :<br>&nbsp; &nbsp; &nbsp;rm edit main.o kbd.o command.o display.o \<br>&nbsp; &nbsp; &nbsp; &nbsp;  insert.o search.o files.o utils.o</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {"level":3} -->
<h3>makefile的基本规则</h3>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;target ... : prerequisite ...<br>&nbsp;    command<br>&nbsp;    ...<br>&nbsp;​<br>&nbsp;targets : prerequisites ; command<br>&nbsp; &nbsp;  command<br>&nbsp; &nbsp;  ...</pre>
<!-- /wp:preformatted -->

<!-- wp:list -->
<ul><li>target : 可以是一个中间目标文件(object file),也可以是一个执行文件,还可以是一个标签</li><li>prerequisite : 生成target所依赖的文件</li><li>command : 要执行的命令(任意的shell命令),如果不与“target:prerequisite”同一行那么必须用tab开头.如果同一行,用分号“;”分隔</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>在makefile文件中,如果prerequisite中有一个或以上的文件比target文件要新(保存时间,有更改)的话,会重新执行一遍command,以此来达到重复编译时加快编译速度.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>clean在这里是标签(伪目标),不会产生“clean”文件,因为在其冒号后面没有依赖文件.因此不会寻找依赖性,且直接执行command命令</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>rm edit main.o kbd.o command.o display.o insert.o search.o files.o utils.o</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>makefile中的<code>\</code>是换行符,<code>#</code>是注释,如果要使用<code>#</code>字符可以进行转义<code>\#</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>当输入make后,文件执行流程:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>make会在当前目录下顺序寻找“GNUmakefile”“makefile”“Makefile”文件(如果要指定特定文件可以使用make的<code>-f</code>参数)</li><li>如果找到了,会将第一个target作为默认目标</li><li>在example中先去找“edit”文件,如果不存在该文件或是edit需要的依赖文件<code>main.o kbd.o command.o display.o insert.o search.o files.o utils.o \</code>修改时间比“edit”文件新,那么会执行edit行的command命令<code>cc -o edit main.o kbd.o command.o display.o insert.o search.o files.o utils.o</code></li><li>如果edit依赖的<code>.o</code>文件也不存在,那么make会继续如步骤3递归寻找依赖执行,</li></ol>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>使用变量</h3>
<!-- /wp:heading -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;objects = main.o kbd.o command.o display.o \<br>&nbsp; &nbsp;  insert.o search.o files.o utils.o<br>&nbsp;​<br>&nbsp;edit : $(objects)<br>&nbsp; &nbsp; &nbsp;cc -o edit $(objects)<br>&nbsp;main.o : main.c defs.h<br>&nbsp; &nbsp; &nbsp;cc -c main.c<br>&nbsp;kbd.o : kbd.c defs.h command.h<br>&nbsp; &nbsp; &nbsp;cc -c kbd.c<br>&nbsp;command.o : command.c defs.h command.h<br>&nbsp; &nbsp; &nbsp;cc -c command.c<br>&nbsp;display.o : display.c defs.h buffer.h<br>&nbsp; &nbsp; &nbsp;cc -c display.c<br>&nbsp;insert.o : insert.c defs.h buffer.h<br>&nbsp; &nbsp; &nbsp;cc -c insert.c<br>&nbsp;search.o : search.c defs.h buffer.h<br>&nbsp; &nbsp; &nbsp;cc -c search.c<br>&nbsp;files.o : files.c defs.h buffer.h command.h<br>&nbsp; &nbsp; &nbsp;cc -c files.c<br>&nbsp;utils.o : utils.c defs.h<br>&nbsp; &nbsp; &nbsp;cc -c utils.c<br>&nbsp;clean :<br>&nbsp; &nbsp; &nbsp;rm edit $(objects)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>和shell脚本类似用等号定义变量,<code>$</code>调用</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>makefile中的变量类似c中的宏,仅作为替换</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>自动推导</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>只要make看到一个<code>.o</code> 文件，它就会自动的把 <code>.c</code> 文件加在依赖关系中，如果make找到一个 <code>whatever.o</code> ，那么 <code>whatever.c</code> 就会是<code>whatever.o</code> 的依赖文件。并且 <code>cc -c whatever.c</code>也会被推导出来</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;objects = main.o kbd.o command.o display.o \<br>&nbsp; &nbsp;  insert.o search.o files.o utils.o<br>&nbsp;​<br>&nbsp;edit : $(objects)<br>&nbsp; &nbsp; &nbsp;cc -o edit $(objects)<br>&nbsp;​<br>&nbsp;main.o : defs.h<br>&nbsp;kbd.o : defs.h command.h<br>&nbsp;command.o : defs.h command.h<br>&nbsp;display.o : defs.h buffer.h<br>&nbsp;insert.o : defs.h buffer.h<br>&nbsp;search.o : defs.h buffer.h<br>&nbsp;files.o : defs.h buffer.h command.h<br>&nbsp;utils.o : defs.h<br>&nbsp;​<br>&nbsp;.PHONY : clean<br>&nbsp;clean :<br>&nbsp; &nbsp; &nbsp;rm edit $(objects)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>以上 .o文件都依赖defs.h头文件,在makefile中可以直接用变量objects来表达普遍的依赖关系</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;objects = main.o kbd.o command.o display.o \<br>&nbsp; &nbsp;  insert.o search.o files.o utils.o<br>&nbsp;​<br>&nbsp;edit : $(objects)<br>&nbsp; &nbsp; &nbsp;cc -o edit $(objects)<br>&nbsp;​<br>&nbsp;$(objects) : defs.h<br>&nbsp;kbd.o command.o files.o : command.h<br>&nbsp;display.o insert.o search.o files.o : buffer.h<br>&nbsp;​<br>&nbsp;.PHONY : clean<br>&nbsp;clean :<br>&nbsp; &nbsp; &nbsp;rm edit $(objects)</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {"level":3} -->
<h3>伪目标</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>.PHONY 显示地指出 clean 是个伪目标。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>伪目标一般没有依赖的文件,但是也可以为为目标指定所依赖的文件.伪目标同样可以作为“默认目标”,只要将其放在第一个.默认目标的特性是,总是被执行的.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;all : prog1 prog2 prog3<br>&nbsp;.PHONY : all<br>&nbsp;​<br>&nbsp;prog1 : prog1.o utils.o<br>&nbsp; &nbsp; &nbsp;cc -o prog1 prog1.o utils.o<br>&nbsp;​<br>&nbsp;prog2 : prog2.o<br>&nbsp; &nbsp; &nbsp;cc -o prog2 prog2.o<br>&nbsp;​<br>&nbsp;prog3 : prog3.o sort.o utils.o<br>&nbsp; &nbsp; &nbsp;cc -o prog3 prog3.o sort.o utils.o</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>这里的makefile一口气生成了若干个可执行文件<code>prog1 prog2 prog3</code>但只需要一次make</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>引用其他Makefile</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>使用include关键字包含其他Makefile文件</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>include &lt;filename&gt;</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>被包含的文件的文件内容会直接放在当前文件的位置</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>filename可以使当前操作系统shell的文件模式(包含路径和通配符)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在include钱可以由空字符,但绝不能有tab键开始</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>make会先在当前目录下寻找,如果当前目录下内有makefile文件:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>如果make执行时，有 <code>-I</code> 或 <code>--include-dir</code> 参数，那么make就会在这个参数所指定的目录下去寻找。</li><li>如果目录 <code>&lt;prefix&gt;/include</code> （一般是： <code>/usr/local/bin</code> 或 <code>/usr/include</code> ）存在的话，make也会去找。</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>如果有文件没有找到的话，make会生成一条警告信息，但不会马上出现致命错误。它会继续载入其它的文件，一旦完成makefile的读取，make会再重试这些没有找到，或是不能读取的文件，如果还是不行，make才会出现一条致命信息。如果想让make不理那些无法读取的文件，而继续执行，可以在include前加一个减号“-”<code>-include &lt;filename&gt;</code></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>make工作方式</h3>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>读入所有Makefile</li><li>读入被include的其他Makefile</li><li>初始化文件中的变量</li><li>推导隐晦规则,并分析所有规则</li><li>为所有的目标文件创建依赖关系链</li><li>根据依赖关系,决定那些目标要重新生成</li><li>执行生成命令</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>二.代码风格</h2>
<!-- /wp:heading -->

<!-- wp:heading {"level":3} -->
<h3>文件搜索</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>当文件依赖在不同目录时,需要将路径告诉make</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>“vpath”关键字指定文件搜索目录</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>vpath &lt;pattern&gt; &lt;directories&gt;</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>为符合&lt;pattern&gt;样式的文件指定搜索目录为&lt;directories&gt;</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>vpath &lt;pattern&gt;</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>清除符合&lt;pattern&gt;的文件的搜索目录</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>vpath</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>清除所有被设置好了的搜索目录</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>vpath的&lt;pattern&gt;需要包含%字符,%匹配零个或若干个字符,如 %.h表示所有以 .h结尾的文件</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>vpath %.h ../headers</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在“../headers”目录下搜索所有 .h结尾的文件</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>通配符</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>make支持三个通配符:<code>* ? ~</code>和shell相同的功能</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;objects := $(wildcard *.c)<br>&nbsp;$(patsubst %.c,%.o,$(wildcard *.c))<br>&nbsp;clean:<br>&nbsp; &nbsp; &nbsp;rm -f *.o<br>&nbsp;​<br>&nbsp;print: *.c<br>&nbsp; &nbsp;  lpr -p $?<br>&nbsp; &nbsp; &nbsp;touch print</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {"level":3} -->
<h3>静态模式</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>静态模式可以更加容易地定义多目标规则</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;&lt;targets ...&gt; : &lt;target-pattern&gt; : &lt;prereq-patterns ...&gt;<br>&nbsp; &nbsp;  &lt;commands&gt;<br>&nbsp; &nbsp;  ...</pre>
<!-- /wp:preformatted -->

<!-- wp:list -->
<ul><li>targets : 定义一系列的目标文件,可以有通配符,是一个目标的集合</li><li>target-pattern : 指明了要执行的目标的样式,即目标集合的样式</li><li>prereq-patterns : 要执行的目标依赖的样式,对于target-pattern形成的集合在进行一次依赖目标的定义</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>说人话就是从一个文件集合里(targets集合)里选出符合样式的需要执行的目标文件(target-pattern),在定义需要执行的目标的依赖文件(prereq-patterns)</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;objects = foo.o bar.o<br>&nbsp;​<br>&nbsp;all: $(objects)<br>&nbsp;​<br>&nbsp;$(objects): %.o: %.c<br>&nbsp; &nbsp; &nbsp;$(CC) -c $(CFLAGS) $&lt; -o $@</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>在上述例子中,文件集合为 <code>$(objects)</code> 也就是(foo.o bar.o)两个文件, <code>%.o</code>获得(foo.o bar.o)文件为target(要执行的目标文件).<code>%.c</code>取得<code>%.o</code>的文件(foo.o bar.o)的文件去掉 <code>.o</code>后缀,改为 <code>.c</code>后缀,即(foo.c bar.c)文件.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>$&lt;</code> 表示第一个依赖文件,<code>$@</code> 表示目标文件</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>上述规则展开后等价于如下规则:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;foo.o : foo.c<br>&nbsp; &nbsp; &nbsp;$(CC) -c $(CFLAGS) foo.c -o foo.o<br>&nbsp;bar.o : bar.c<br>&nbsp; &nbsp; &nbsp;$(CC) -c $(CFLAGS) bar.c -o bar.o</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {"level":3} -->
<h3>自动生成头文件依赖</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在makefile中,依赖关系可能包含一系列头文件</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>main.o : main.c defs.h</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>为避免重复性工作且维护头文件依赖,可以使用c/c++编译的 -M(自动找寻源文件中包含的头文件)参数功能</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;gcc - M main.c的终端输出为:<br>&nbsp;​<br>&nbsp;main.o: main.c defs.h /usr/include/stdio.h /usr/include/features.h \<br>&nbsp; &nbsp;  /usr/include/sys/cdefs.h /usr/include/gnu/stubs.h \<br>&nbsp; &nbsp;  /usr/lib/gcc-lib/i486-suse-linux/2.95.3/include/stddef.h \<br>&nbsp; &nbsp;  /usr/include/bits/types.h /usr/include/bits/pthreadtypes.h \<br>&nbsp; &nbsp;  /usr/include/bits/sched.h /usr/include/libio.h \<br>&nbsp; &nbsp;  /usr/include/_G_config.h /usr/include/wchar.h \<br>&nbsp; &nbsp;  /usr/include/bits/wchar.h /usr/include/gconv.h \<br>&nbsp; &nbsp;  /usr/lib/gcc-lib/i486-suse-linux/2.95.3/include/stdarg.h \<br>&nbsp; &nbsp;  /usr/include/bits/stdio_lim.h</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>如果使用GNU的C/C++编译器，得用 <code>-MM</code> 参数，不然， <code>-M</code> 参数会把一些标准库的头文件也包含进来.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>GNU组织建议把编译器为每一个源文件的自动生成的依赖关系放到一个文件中，为每一个 <code>name.c</code> 的文件都生成一个 <code>name.d</code> 的Makefile文件， <code>.d</code> 文件中就存放对应 <code>.c</code> 文件的依赖关系。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>于是可以写出 <code>.c</code> 文件和 <code>.d</code> 文件的依赖关系，并让make自动更新或生成 <code>.d</code> 文件，并把其包含在主Makefile中，这样，就可以自动化地生成每个文件的依赖关系了。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>产生<code>.d</code>文件的模式规则:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;%.d: %.c<br>&nbsp; &nbsp; &nbsp;@set -e; rm -f $@; \<br>&nbsp; &nbsp; &nbsp;$(CC) -M $(CPPFLAGS) $&lt; &gt; $@.$$$$; \<br>&nbsp; &nbsp; &nbsp;sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' &lt; $@.$$$$ &gt; $@; \<br>&nbsp; &nbsp; &nbsp;rm -f $@.$$$$</pre>
<!-- /wp:preformatted -->

<!-- wp:list {"ordered":true} -->
<ol><li>所有的 <code>.d</code> 文件依赖于 <code>.c</code> 文件</li><li><code>rm -f $@</code> 的意思是删除所有的目标，也就是 <code>.d</code> 文件</li><li>第三行的意思是，为每个依赖文件 <code>$&lt;</code> ，也就是 <code>.c</code> 文件生成依赖文件， <code>$@</code> 表示模式 <code>%.d</code> 文件，如果有一个C文件是name.c，那么 <code>%</code> 就是 <code>name</code> ， <code>$$$$</code> 意为一个随机编号，第二行生成的文件有可能是“name.d.12345”</li><li>使用sed命令做了一个替换</li><li>删除临时文件。</li></ol>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>命令执行</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>要让上一条命令的结果应用在下一条命令时，应该使用分号分隔这两条命令。比如第一条命令是cd命令，希望第二条命令得在cd之后的基础上运行，那么不能把这两条命令写在两行上，而应该把这两条命令写在一行上，用分号分隔。</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;#错误用法<br>&nbsp;exec:<br>&nbsp; &nbsp; &nbsp;cd /home/hchen<br>&nbsp; &nbsp;  pwd<br>&nbsp; <br>&nbsp;#正确用法<br>&nbsp;exec:<br>&nbsp; &nbsp; &nbsp;cd /home/hchen; pwd</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {"level":3} -->
<h3>忽略报错</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>有些时候，命令的出错并不表示就是错误的。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>例如mkdir命令，一定需要建立一个目录，如果目录不存在，那么mkdir就成功执行,如果目录存在，那么就出错了。之所以使用mkdir的意思就是一定要有这样的一个目录，于是我们就不希望mkdir出错而终止规则的运行。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>为了做到这一点，忽略命令的出错，可以在Makefile的命令行前加一个减号 <code>-</code> （在Tab键之后），标记为不管命令出不出错都认为是成功的。如：</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;clean:<br>&nbsp; &nbsp;  -rm -f *.o</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>还有一个全局的办法是，给make加上 <code>-i</code> 或是 <code>--ignore-errors</code> 参数Makefile中所有命令都会忽略错误.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果make的参数是<code>-k</code>或是<code>--keep-going</code>这个参数的意思是，如果某规则中的命令出错了，那么就终止该规则的执行，但继续执行其它规则.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果一个规则是以 <code>.IGNORE</code> 作为目标的，那么这个规则中的所有命令将会忽略错误.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>嵌套执行make</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>大型工程中，通常会将不同模块或是不同功能的源文件放在不同的目录中，可以在每个目录中都写一个该目录的makefile，这有利于makefile变得更加地简介</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;subsystem:<br>&nbsp;  cd subdir &amp;&amp; $(MAKE)<br>&nbsp;  <br>&nbsp;#等价<br>&nbsp;subsystem:<br>&nbsp;  $(MAKE) -C subdir</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>存在一个子目录subdir,这个目录下有个makefile文件,在总控makefile中可以用上述语句来执行该subdir目录中的makefile.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>总控makefile的变量可以传递到下级makefile中(如果显示声明了的话),但是不会覆盖下层的makefile中所定义的变量,除非指定了<code>-e</code>参数.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>传递变量声明:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;export &lt;variable ...&gt;;<br>&nbsp;​<br>&nbsp;#example<br>&nbsp;export variable = value<br>&nbsp;​<br>&nbsp;variable = value<br>&nbsp;export variable<br>&nbsp;​<br>&nbsp;export variable := value<br>&nbsp;​<br>&nbsp;variable := value<br>&nbsp;export variable</pre>
<!-- /wp:preformatted -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;export variable += value<br>&nbsp;​<br>&nbsp;variable += value<br>&nbsp;export variable</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>不传递变量声明:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;unexport &lt;variable ...&gt;;</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>如果要传递所有的变量,只需要一个export就行了,后面什么也不用跟.</p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p>需要注意的是有两个变量,一个<code>SHELL</code>,一个是<code>MAKEFLAGS</code>,这个两个变量不管是否export,其总是要传递到下层makefile中.<code>MAKEFLAGS</code>包含了make的参数信息,如果总控makefile是有make参数信息或是在上层makefile中定义了这个变量,那么<code>MAKEFLAGS</code>变量将会是这些参数,并会传递到下层makefile中.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>有几个参数并不往下传递,它们是<code>-C -f -h -o -W</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果不想往下传递参数:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;subsystem:<br>&nbsp;  cd subdir &amp;&amp; $(MAKE) MAKEFLAGS=</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>三.变量</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>变量的命名可以包含字符,数字,下划线(可以数字开头),但不应该含有<code>: # =</code>或是空字符(空格和回车等).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>变量大小写敏感.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>变量在声明需要给予初值,在使用时在变量名前加上<code>$</code>符号,最好用小括号<code>()</code>或是大括号<code>{}</code>将变量包括起来.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果需要使用真实的<code>$</code>符号,则使用<code>$$</code>来表示.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>变量可以使用在“目标”,“依赖”,“命令”以及新的变量中.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>变量会在使用它的地方展开,类似c中的宏定义.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;foo = c<br>&nbsp;prog.o : prog.$(foo)<br>&nbsp; &nbsp; &nbsp;$(foo)$(foo) -$(foo) prog.$(foo)<br>&nbsp; &nbsp; &nbsp;<br>&nbsp; #展开后<br>&nbsp; prog.o : prog.c<br>&nbsp; &nbsp; &nbsp;cc -c prog.c</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>定义空格变量</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;nullstring :=<br>&nbsp;space := $(nullstring) # end of the line</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>nullstring是一个空变量,但是space是一个空格,因为在<code>=</code>操作符的右边<code>$(nullstring)</code>和注释符<code>#</code>间存在一个空格.此处的<code>#</code>操作符表明了变量定义的终止.</p>
<!-- /wp:paragraph -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p>注意在makefile文件中定义变量时尾部的空格,空格会严格地带入变量值</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;#会产生四个空格<br>&nbsp;dir := /foo/bar &nbsp; &nbsp;#<br>&nbsp;​<br>&nbsp;#后面虽然没有#但是也存在空格,也会产生空格<br>&nbsp;dir := /foo/bar &nbsp; &nbsp;<br>&nbsp;​<br>&nbsp;#不会产生空格<br>&nbsp;dir := /foo/bar#</pre>
<!-- /wp:preformatted -->

<!-- wp:separator -->
<hr class="wp-block-separator"/>
<!-- /wp:separator -->

<!-- wp:paragraph -->
<p><code>?=</code>操作符表示变量是否被定义过,如果被定义过那么将不会执行语句</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;FOO ?= bar</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>如果先前定义了<code>FOO</code>那么不会赋值为<code>bar</code>,否则赋值为<code>bar</code></p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>高级用法</h3>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>变量值的替换替换变量中的共有的部分,格式为<code>$(var:a=b)$</code>或是<code>${var:a=b}</code>,其含义为把变量<code>var</code>中所有以<code>a</code>字符串“结尾”的变量替换<code>a</code>字符串为<code>b</code>字符串.结尾的意思是“空格”或是“结束符”.&nbsp;foo := a.o b.o c.o<br>&nbsp;bar := $(foo:.o=.c)先定义了一个 <code>$(foo)</code> 变量，而第二行的意思是把 <code>$(foo)</code> 中所有以 <code>.o</code> 字串“结尾”全部替换成 <code>.c</code> ，所以 <code>$(bar)</code> 的值就是<code>a.c b.c c.c</code>.静态模式替换:&nbsp;foo := a.o b.o c.o<br>&nbsp;bar := $(foo:%.o=%.c)这依赖于被替换字串中的有相同的模式,模式中必须包含一个 <code>%</code> 字符,这个例子同样让 <code>$(bar)</code> 变量的值为<code>a.c b.c c.c</code>.</li><li>把变量的值再当成值&nbsp;x = y<br>&nbsp;y = z<br>&nbsp;a := $($(x))<code>$(x)</code>的值为<code>y</code>,<code>$(y)</code>的值为<code>z</code>,所以<code>a</code>的值就是<code>z</code>.在变量定义中使用变量:&nbsp;x = $(y)<br>&nbsp;y = z<br>&nbsp;z = Hello<br>&nbsp;a := $($(x))这里的 <code>$($(x))</code> 被替换成了 <code>$($(y))</code> ,因为 <code>$(y)</code> 值是<code>z</code>,所以,最终结果是: <code>a:=$(z)</code> ,也就是<code>Hello</code>.&nbsp;x = variable1<br>&nbsp;variable2 := Hello<br>&nbsp;y = $(subst 1,2,$(x))<br>&nbsp;z = y<br>&nbsp;a := $($($(z))) <code>$($($(z)))</code> 扩展为 <code>$($(y))</code> ,而其再次被扩展为 <code>$($(subst 1,2,$(x)))</code> . <code>$(x)</code> 的值是<code>variable1</code>,subst函数把<code>variable1</code>中的所有<code>`1</code>字串替换成<code>2</code>字串，于是，<code>variable1</code>变成 <code>variable2</code>,再取其值,所以 <code>$(a)</code> 的值就是 <code>$(variable2)</code> 的值——<code>Hello</code>.使用多个变量来组成一个变量的名字&nbsp;first_second = Hello<br>&nbsp;a = first<br>&nbsp;b = second<br>&nbsp;all = $($a_$b)这里的 <code>$a_$b</code> 组成了<code>first_second</code>,于是, <code>$(all)</code> 的值就是<code>Hello</code>.</li></ol>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>追加变量值</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>使用<code>+=</code>操作符给变量追加值</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;objects = main.o foo.o bar.o utils.o<br>&nbsp;objects += another.o</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p><code>$(objects)</code> 值变成:<code>main.o foo.o bar.o utils.o another.o</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果变量之前没有定义过,那么 <code>+=</code> 会自动变成 <code>=</code> .</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果前面有变量定义,那么 <code>+=</code> 会继承于前次操作的赋值符.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果前一次的是 <code>:=</code> ,那么 <code>+=</code> 会以 <code>:=</code> 作为其赋值符.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;variable := value<br>&nbsp;variable += more<br>&nbsp;#等价于<br>&nbsp;variable := value<br>&nbsp;variable := $(variable) more</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {"level":3} -->
<h3>override</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>有些变量的值是通过make的命令行参数设置的,在makefile中对这种变量的赋值会被忽略.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果需要设置这种参数的值,需要使用<code>override</code>指示符</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;override &lt;variable&gt;; = &lt;value&gt;;<br>&nbsp;​<br>&nbsp;override &lt;variable&gt;; := &lt;value&gt;;<br>&nbsp;​<br>&nbsp;override &lt;variable&gt;; += &lt;value&gt;;</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {"level":3} -->
<h3>多行变量</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>使用<code>define</code>关键字设置变量的值可以有换行.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>define指示符后面跟的是变量的名字，而重起一行定义变量的值，定义是以endef 关键字结束.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>变量的值可以包含函数、命令、文字，或是其它变量.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>因为命令需要以<code>Tab</code>键开头，所以如果你用define定义的命令变量中没有以 <code>Tab</code> 键开头，那么make就不会把其认为是命令.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>四.条件判断</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>使用条件判断,可以让make根据运行时的不同情况选择不同的执行分支.条件表达式可以是比较变量的值,或是比较变量和常量的值.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>语法:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;&lt;conditional-directive&gt;<br>&nbsp;&lt;text-if-true&gt;<br>&nbsp;endif<br>&nbsp;​<br>&nbsp;&lt;conditional-directive&gt;<br>&nbsp;&lt;text-if-true&gt;<br>&nbsp;else<br>&nbsp;&lt;text-if-false&gt;<br>&nbsp;endif</pre>
<!-- /wp:preformatted -->

<!-- wp:list -->
<ul><li>&lt;conditional-directive&gt; : 有四个值<ul><li>ifeq : 比较两个值是否相同,如果相同,则为<code>true</code>&nbsp;ifeq (&lt;arg1&gt;, &lt;arg2&gt;)<br>&nbsp;ifeq '&lt;arg1&gt;' '&lt;arg2&gt;'<br>&nbsp;ifeq "&lt;arg1&gt;" "&lt;arg2&gt;"<br>&nbsp;ifeq "&lt;arg1&gt;" '&lt;arg2&gt;'<br>&nbsp;ifeq '&lt;arg1&gt;' "&lt;arg2&gt;"</li><li>ifneq : 比较两个值是否不同,如果不同,则为<code>true</code>&nbsp;ifneq (&lt;arg1&gt;, &lt;arg2&gt;)<br>&nbsp;ifneq '&lt;arg1&gt;' '&lt;arg2&gt;'<br>&nbsp;ifneq "&lt;arg1&gt;" "&lt;arg2&gt;"<br>&nbsp;ifneq "&lt;arg1&gt;" '&lt;arg2&gt;'<br>&nbsp;ifneq '&lt;arg1&gt;' "&lt;arg2&gt;"</li><li>ifdef : 如果变量 <code>&lt;variable-name&gt;</code> 的值非空,那到表达式为真.否则,表达式为假.当然<code>&lt;variable-name&gt;</code> 同样可以是一个函数的返回值.注意, <code>ifdef</code> 只是测试一个变量是否有值.其并不会把变量扩展到当前位置.&nbsp;ifdef &lt;variable-name&gt;<br>&nbsp;​<br>&nbsp;bar =<br>&nbsp;foo = $(bar)<br>&nbsp;ifdef foo<br>&nbsp; &nbsp; frobozz = yes<br>&nbsp;else<br>&nbsp; &nbsp; frobozz = no<br>&nbsp;endif<br>&nbsp;#yes<br>&nbsp;​<br>&nbsp;bar =<br>&nbsp;foo = $(bar)<br>&nbsp;ifdef foo<br>&nbsp; &nbsp; frobozz = yes<br>&nbsp;else<br>&nbsp; &nbsp; frobozz = no<br>&nbsp;endif<br>&nbsp;#no</li><li>ifndef : 和ifdef相反&nbsp;ifndef &lt;variable-name&gt;</li></ul></li><li>在 <code>&lt;conditional-directive&gt;</code> 这一行上,多余的空格是被允许的,但是不能以 <code>Tab</code> 键作为开始(不然就被认为是命令).而注释符 <code>#</code> 同样也是安全的. <code>else</code> 和 <code>endif</code> 也一样,只要不是以 <code>Tab</code> 键开始就行了.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>例子:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;libs_for_gcc = -lgnu<br>&nbsp;normal_libs =<br>&nbsp;​<br>&nbsp;foo: $(objects)<br>&nbsp;ifeq ($(CC),gcc)<br>&nbsp; &nbsp; &nbsp;$(CC) -o foo $(objects) $(libs_for_gcc)<br>&nbsp;else<br>&nbsp; &nbsp; &nbsp;$(CC) -o foo $(objects) $(normal_libs)<br>&nbsp;endif</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>三个关键字: <code>ifeq</code>, <code>else</code> 和 <code>endif</code>. <code>ifeq</code> 的意思表示条件语句的开始,并指定一个条件表达式,表达式包含两个参数,以逗号分隔,表达式以圆括号括起. <code>else</code>表示条件表达式为假的情况.<code>endif</code>表示一个条件语句的结束,任何一个条件表达式都应该以 <code>endif</code> 结束.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>特别注意的是,make是在读取Makefile时就计算条件表达式的值,并根据条件表达式的值来选择语句,所以最好不要把自动化变量（如 <code>$@</code> 等）放入条件表达式中，因为自动化变量是在运行时才有的.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>而且为了避免混乱,make不允许把整个条件语句分成两部分放在不同的文件中.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>五.函数</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>在Makefile中可以使用函数来处理变量,从而让我们的命令或是规则更为的灵活和具有智能.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>函数调用后,函数的返回值可以当做变量来使用.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>函数调用很像变量的使用,也是以<code>$</code>来标识,其语法:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;$(&lt;function&gt; &lt;arguments&gt;)<br>&nbsp;​<br>&nbsp;${&lt;function&gt; &lt;arguments&gt;}</pre>
<!-- /wp:preformatted -->

<!-- wp:list -->
<ul><li>&lt;function&gt; : 函数名</li><li>&lt;arguments&gt; : 函数参数,参数间以逗号<code>,</code>分隔</li><li>函数名和参数间以空格风格</li><li>函数调用以<code>$</code>开头,用圆括号<code>()</code>或花括号<code>{}</code>把函数名和参数括起来.</li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>字符串处理函数</h3>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>subst&nbsp;$(subst &lt;from&gt;,&lt;to&gt;,&lt;text&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 字符串替换函数</li><li>功能 : 将<code>&lt;text&gt;</code>中的<code>&lt;form&gt;</code>字符串替换成<code>&lt;to&gt;</code></li><li>返回 : 函数返回被替换过后的字符串</li><li>示例:&nbsp;$(subst ee,EE,feet on the street)把 <code>feet on the street</code> 中的 <code>ee</code> 替换成 <code>EE</code> ,返回结果是 <code>fEEt on the strEEt</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":2} -->
<ol start="2"><li>patsubst&nbsp;$(patsubst &lt;pattern&gt;,&lt;replacement&gt;,&lt;text&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 模式字符串替换函数</li><li>功能 : 查找<code>&lt;text&gt;</code>中的单词(单词以“空格”,“Tab”, “回车”, “换行” 来分隔)是否符合模式<code>&lt;pattern&gt;</code>.如果匹配,则以<code>&lt;replacement&gt;</code>替换.<code>&lt;pattern&gt;</code> 可以包括通配符 <code>%</code> ,表示任意长度的字串.如果 <code>&lt;replacement&gt;</code> 中也包含 <code>%</code> ,那么,<code>&lt;replacement&gt;</code> 中的这个 <code>%</code> 将是 <code>&lt;pattern&gt;</code> 中的那个 <code>%</code> 所代表的字串.（可以用 <code>\</code> 来转义,以 <code>\%</code> 来表示真实含义的 <code>%</code> 字符）</li><li>示例 : &nbsp;$(patsubst %.c,%.o,x.c.c bar.c)把字串 <code>x.c.c bar.c</code> 符合模式 <code>%.c</code> 的单词替换成 <code>%.o</code> ,返回结果是 <code>x.c.o bar.o</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":3} -->
<ol start="3"><li>strip&nbsp;$(strip &lt;string&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 去空格函数</li><li>功能 : 去掉<code>&lt;string&gt;</code>字符串中开头和结尾的空字符</li><li>返回 : 去掉空格后的字符串</li><li>示例:&nbsp;$(strip a b c )把字符串 <code>a b c `` 去到开头和结尾的空格，结果是 ``a b c</code> 。</li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":4} -->
<ol start="4"><li>findstring&nbsp;$(findstring &lt;find&gt;,&lt;in&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 查找字符串函数</li><li>功能 : 在字符串<code>&lt;int&gt;</code>中查找<code>&lt;find&gt;</code>字符串</li><li>返回 : 如果找到,返回<code>&lt;find&gt;</code>,否则返回空串</li><li>示例 : &nbsp;$(findstring a,a b c)<br>&nbsp;$(findstring a,b c)第一个函数返回 <code>a</code> 字符串,第二个返回空字符串</li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":5} -->
<ol start="5"><li>filter&nbsp;$(filter &lt;pattern...&gt;,&lt;text&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 过滤函数</li><li>功能 : 以<code>&lt;pattern&gt;</code>样式过滤<code>&lt;text&gt;</code>字符串中的单词,保留符合样式<code>&lt;pattern&gt;</code>的单词.可以有多个样式</li><li>返回 : 返回符合模式<code>&lt;pattern&gt;</code>的字符串</li><li>示例:&nbsp;sources := foo.c bar.c baz.s ugh.h<br>&nbsp;foo: $(sources)<br>&nbsp; &nbsp; &nbsp;cc $(filter %.c %.s,$(sources)) -o foo<code>$(filter %.c %.s,$(sources))</code>返回的值是<code>foo.c bar.c baz.s</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":6} -->
<ol start="6"><li>filter-out&nbsp;$(filter-out &lt;pattern...&gt;,&lt;text&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>反过滤函数</li><li>功能 : 以<code>&lt;pattern&gt;</code>样式过滤<code>&lt;text&gt;</code>字符串中的单词,去除符合样式<code>&lt;pattern&gt;</code>的单词.可以由多个样式</li><li>返回 : 返回不符合样式<code>&lt;pattern&gt;</code>的字符串</li><li>示例:&nbsp;objects=main1.o foo.o main2.o bar.o<br>&nbsp;mains=main1.o main2.o<code>$(filter-out $(mains),$(objects))</code> 返回值是 <code>foo.o bar.o</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":7} -->
<ol start="7"><li>sort&nbsp;$(sort &lt;list&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 排序函数</li><li>功能 : 给字符串<code>&lt;list&gt;</code>中的单词排序(升序)</li><li>返回 : 返回排序后的字符串</li><li>示例:&nbsp;$(sort foo bar lose)返回 <code>bar foo lose</code><code>sort</code>函数会去掉<code>&lt;list&gt;</code>中相同的单词</li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":8} -->
<ol start="8"><li>word&nbsp;$(word &lt;n&gt;,&lt;text&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 取单词函数</li><li>功能 : 取字符串<code>&lt;text&gt;</code>中第<code>&lt;n&gt;</code>个单词(从 1 开始数)</li><li>返回 : 返回字符串<code>&lt;text&gt;</code>中第<code>&lt;n&gt;</code>个单词.如果<code>&lt;n&gt;</code>比<code>&lt;text&gt;</code>中的单词数要大,返回空字符串</li><li>示例:&nbsp;$(word 2, foo bar baz)返回<code>bar</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":9} -->
<ol start="9"><li>wordlist&nbsp;$(wordlist &lt;ss&gt;,&lt;e&gt;,&lt;text&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 取单词串函数</li><li>功能 : 从字符串 <code>&lt;text&gt;</code> 中取从 <code>&lt;ss&gt;</code> 开始到 <code>&lt;e&gt;</code> 的单词串. <code>&lt;ss&gt;</code> 和 <code>&lt;e&gt;</code> 是一个数字</li><li>返回 : 返回字符串 <code>&lt;text&gt;</code> 中从 <code>&lt;ss&gt;</code> 到 <code>&lt;e&gt;</code> 的单词字串.如果 <code>&lt;ss&gt;</code> 比 <code>&lt;text&gt;</code> 中的单词数要大,那么返回空字符串.如果 <code>&lt;e&gt;</code> 大于 <code>&lt;text&gt;</code> 的单词数,那么返回从 <code>&lt;ss&gt;</code> 开始,到 <code>&lt;text&gt;</code> 结束的单词串.</li><li>示例 : &nbsp;$(wordlist 2, 3, foo bar baz)返回<code>bar baz</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":10} -->
<ol start="10"><li>words&nbsp;$(words &lt;text&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 单词个数统计函数</li><li>功能 : 统计<code>&lt;text&gt;</code>中字符串中的单词个数</li><li>返回 : 返回<code>&lt;text&gt;</code>中的单词数</li><li>示例&nbsp;$(words, foo bar baz)返回<code>3</code>取最后一个单词:&nbsp;$(word $(words &lt;text&gt;),&lt;text&gt;)</li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":11} -->
<ol start="11"><li>firstword&nbsp;$(firstword &lt;text&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 首单词函数</li><li>功能 : 取字符串<code>&lt;text&gt;</code>中的第一个单词</li><li>返回 : 返回字符串<code>&lt;text&gt;</code>中的第一个单词</li><li>示例 :&nbsp;$(firstword foo bar)返回<code>foo</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":7} -->
<ol start="7"><li>join&nbsp;$(join &lt;list1&gt;,&lt;list2&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 连接函数</li><li>功能 : 将<code>&lt;list2&gt;</code>中的单词对应地加到<code>&lt;list1&gt;</code>的单词后面.如果 <code>&lt;list1&gt;</code> 的单词个数要比 <code>&lt;list2&gt;</code> 的多,那么<code>&lt;list1&gt;</code> 中的多出来的单词将保持原样.如果 <code>&lt;list2&gt;</code> 的单词个数要比 <code>&lt;list1&gt;</code> 多,那么<code>&lt;list2&gt;</code> 多出来的单词将被复制到 <code>&lt;list1&gt;</code> 中</li><li>返回 : 返回连接过后的字符串</li><li>示例 :&nbsp;$(join aaa bbb , 111 222 333)返回<code>aaa111 bbb222 333</code></li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>文件名操作函数</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>每个函数的参数字符串都会被当做一个或是一系列的文件名来对待.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>dir&nbsp;$(dir &lt;names...&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 取目录函数</li><li>功能 : 从文件名序列<code>&lt;names&gt;</code>中取出目录部分.目录指最后一个反斜杠<code>/</code>之前的部分.如果没有<code>/</code>,则返回<code>./</code></li><li>返回 : 返回文件名序列的<code>&lt;names&gt;</code>目录部分</li><li>示例:&nbsp; $(dir src/foo.c hacks)返回<code>src/ ./</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":2} -->
<ol start="2"><li>notdir&nbsp;$(notdir &lt;names...&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 取文件函数</li><li>功能 : 从文件名序列 <code>&lt;names&gt;</code> 中取出非目录部分.非目录部分是指最後一个反斜杠（ <code>/</code> ）之后的部分</li><li>返回 : 返回文件名序列 <code>&lt;names&gt;</code> 的非目录部分</li><li>示例 :&nbsp;$(notdir src/foo.c hacks)返回<code>foo.c hacks</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":3} -->
<ol start="3"><li>suffix&nbsp;$(suffix &lt;names...&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 取后缀函数</li><li>功能 : 从文件名序列<code>&lt;names&gt;</code>中取出各个文件名的后缀</li><li>返回 : 返回文件名序列<code>&lt;names&gt;</code>的后缀序列,如果文件没有后缀,返回空字符串</li><li>示例 : &nbsp;$(suffix src/foo.c src-1.0/bar.c hacks)返回<code>.c .c</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":4} -->
<ol start="4"><li>basename&nbsp;$(basename &lt;names...&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 取前缀函数</li><li>功能 : 从文件名序列<code>&lt;names&gt;</code>中取出哥哥文件名的前缀部分</li><li>返回 : 返回文件名序列<code>&lt;names&gt;</code>的前缀序列.如果文件没有前缀,则返回空字符串</li><li>示例 : &nbsp;$(basename src/foo.c src-1.0/bar.c hacks)返回<code>src/foo src-1.0/bar hacks</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":5} -->
<ol start="5"><li>addsuffix&nbsp;$(addsuffix &lt;suffix&gt;,&lt;names...&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 加后缀函数</li><li>功能 : 将后缀<code>&lt;suffix&gt;</code>加到<code>&lt;names&gt;</code>中的每个单词后面</li><li>返回 : 返回加过后缀的文件名序列</li><li>示例 :&nbsp;$(addsuffix .c,foo bar)返回<code>foo.c bar.c</code></li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":6} -->
<ol start="6"><li>addprefix&nbsp;$(addprefix &lt;prefix&gt;,&lt;names...&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 加前缀函数</li><li>功能 : 将前缀<code>&lt;prefix&gt;</code>加到<code>&lt;names&gt;</code>中的每个单词前面</li><li>返回 : 返回加过前缀的文件名序列</li><li>示例 :&nbsp;$(addprefix src/,foo bar)返回<code>src/foo src/bar</code></li></ul>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>其他函数</h3>
<!-- /wp:heading -->

<!-- wp:list {"ordered":true} -->
<ol><li>foreach&nbsp;$(foreach &lt;var&gt;,&lt;list&gt;,&lt;text&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 循环函数</li><li>功能 : 将参数<code>&lt;list&gt;</code>中的单词逐一取出放到参数 <code>&lt;var&gt;</code> 所指定的变量中,然后再执行 <code>&lt;text&gt;</code> 所包含的表达式.每一次 <code>&lt;text&gt;</code> 会返回一个字符串,循环过程中,<code>&lt;text&gt;</code> 的所返回的每个字符串会以空格分隔</li><li>返回 : <code>&lt;text&gt;</code> 所返回的每个字符串所组成的整个字符串（以空格分隔）将会是foreach函数的返回值</li><li>示例 :&nbsp;names := a b c d<br>&nbsp;​<br>&nbsp;files := $(foreach n,$(names),$(n).o)<code>$(files)</code>的值是<code>a.o b.o c.o d.o</code><code>$(name)</code> 中的单词会被挨个取出，并存到变量 <code>n</code> 中， <code>$(n).o</code> 每次根据 <code>$(n)</code> 计算出一个值，这些值以空格分隔，最后作为foreach函数的返回注意,foreach中的 <code>&lt;var&gt;</code> 参数是一个临时的局部变量,foreach函数执行完后,参数 <code>&lt;var&gt;</code> 的变量将不在作用,其作用域只在foreach函数当中.</li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":2} -->
<ol start="2"><li>if&nbsp;$(if &lt;condition&gt;,&lt;then-part&gt;)<br>&nbsp;​<br>&nbsp;$(if &lt;condition&gt;,&lt;then-part&gt;,&lt;else-part&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 条件函数</li><li>功能 : 如果<code>&lt;condition&gt;</code>的返回值为非空字符串,则表达式为真,执行<code>&lt;then-part&gt;</code>部分,否则执行<code>&lt;else-part&gt;</code>部分</li><li>返回 : 如果 <code>&lt;condition&gt;</code> 为真（非空字符串）,那个 <code>&lt;then-part&gt;</code> 会是整个函数的返回值,如果 <code>&lt;condition&gt;</code> 为假（空字符串）,那么 <code>&lt;else-part&gt;</code> 会是整个函数的返回值,此时如果 <code>&lt;else-part&gt;</code> 没有被定义,那么整个函数返回空字串</li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":3} -->
<ol start="3"><li>call&nbsp;$(call &lt;expression&gt;,&lt;parm1&gt;,&lt;parm2&gt;,...,&lt;parmn&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 传值函数</li><li>功能 : 向表达式<code>&lt;expression&gt;</code>传递参数</li><li>返回 : <code>&lt;expression</code>的返回值</li><li>示例 :&nbsp;reverse = &nbsp;$(2) $(1)<br>&nbsp;​<br>&nbsp;foo = $(call reverse,a,b)返回<code>a b</code>需要注意：在向 call 函数传递参数时要尤其注意空格的使用.call 函数在处理参数时,第2个及其之后的参数中的空格会被保留,因而可能造成一些奇怪的效果.因而在向call函数提供参数时,最安全的做法是去除所有多余的空格</li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":4} -->
<ol start="4"><li>origin&nbsp;$(origin &lt;variable&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 来源函数</li><li>功能 : 返回变量来自何处</li><li>返回 :<ul><li>undefined : 如果<code>&lt;variable&gt;</code>没有定义过,origin返回<code>undefined</code></li><li>default : 如果<code>&lt;variable&gt;</code>是一个默认的定义</li><li>environment : 如果 <code>&lt;variable&gt;</code> 是一个环境变量,并且当Makefile被执行时, <code>-e</code> 参数没有被打开</li><li>file : 如果 <code>&lt;variable&gt;</code> 这个变量被定义在Makefile中</li><li>command line : 如果 <code>&lt;variable&gt;</code> 这个变量是被命令行定义的</li><li>override : 如果 <code>&lt;variable&gt;</code> 是被override指示符重新定义的</li><li>automatic : 如果 <code>&lt;variable&gt;</code> 是一个命令运行中的自动化变量</li></ul></li><li>示例 :&nbsp;ifdef bletch<br>&nbsp; &nbsp; &nbsp;ifeq "$(origin bletch)" "environment"<br>&nbsp; &nbsp; &nbsp; &nbsp; bletch = barf, gag, etc.<br>&nbsp; &nbsp; &nbsp;endif<br>&nbsp;endif假设有一个Makefile其包了一个定义文件 <code>Make.def</code>,在 <code>Make.def</code>中定义了一个变量<code>bletch</code>,而环境中也有一个环境变量<code>bletch</code>,如果变量来源于环境，那么就把<code>bletch</code>重定义了，如果来源于<code>Make.def</code>或是命令行等非环境的，那么就不重新定义它</li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":5} -->
<ol start="5"><li>shell&nbsp;$(shell command)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 终端函数</li><li>功能 : 执行终端命令</li><li>返回 : 执行操作系统命令后的输出作为函数返回</li><li>示例 :&nbsp;contents := $(shell cat foo)<br>&nbsp;files := $(shell echo *.c)这个函数会新生成一个Shell程序来执行命令，所以要注意其运行性能，如果Makefile中有一些比较复杂的规则，并大量使用了这个函数，那么对于系统性能是有害的。特别是Makefile的隐晦的规则可能会让shell函数执行的次数比你想像的多得多</li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":5} -->
<ol start="5"><li>error&nbsp;$(error &lt;text ...&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 报错函数</li><li>功能 : 产生一个致命错误</li><li>返回 :</li><li>示例 :&nbsp;ifdef ERROR_001<br>&nbsp; &nbsp; &nbsp;$(error error is $(ERROR_001))<br>&nbsp;endif</li></ul>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":5} -->
<ol start="5"><li>warning&nbsp;$(warning &lt;text ...&gt;)</li></ol>
<!-- /wp:list -->

<!-- wp:list -->
<ul><li>名称 : 警告函数</li><li>功能 : 产生一个警告</li><li>返回 :</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>六.make参数</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>运行make命令时跟的参数</p>
<!-- /wp:paragraph -->

<!-- wp:table -->
<figure class="wp-block-table"><table><thead><tr><th>参数名</th><th>功能</th></tr></thead><tbody><tr><td>-b, -m</td><td>忽略和其他版本make的兼容性</td></tr><tr><td>-B, --always-make</td><td>认为所有目标都需要更新(重编译)</td></tr><tr><td>-C &lt;dir&gt; , --directory=&lt;dir&gt;</td><td>指定读取makefile的目录.如果有多个<code>-C</code>参数,make的解释是后面的路径以前面的座位相对路径,并以最后的目录座位被指定目录. 例 : <code>make -C ~hchen/test -C prog</code>等价于<code>make -C ~hchen/test/prog</code></td></tr><tr><td>-debug[=&lt;options&gt;]</td><td>输出make的调试信息.如果没有参数,输出最简单的调试信息 a : all, 输出所有的调试信息 b : basic, 只输出简单的调试信息 v : verbose,在b选项的级别之上.输出的信息包括哪个makefile被解析,不需要被重编译的依赖文件（或是依赖目标）等 i : implict,输出所有的隐含规则 j : jobs, 输出执行规则中命令的详细信息 m : makefile, 输出make读取makefile,更新makefile,执行makefile的信息</td></tr><tr><td>-d</td><td>等价于<code>-debug=a</code></td></tr><tr><td>-e, --environment-overrides</td><td>指明环境变量的值覆盖makefile中定义的变量的值</td></tr><tr><td>-f=&lt;file&gt;, --file=&lt;file&gt;, --makefile=&lt;file&gt;</td><td>指定需要执行的makefile</td></tr><tr><td>-h, --helo</td><td>显示帮助信息</td></tr><tr><td>-i, --ignore-errors</td><td>在执行时忽略所有错误</td></tr><tr><td>-I&lt;dir&gt;, --include-dir=&lt;dir&gt;</td><td>指定一个被包含makefile的搜索目标.可以使用多个<code>-I</code>来指定多个目录</td></tr><tr><td>-j[&lt;jobsnum&gt;], --jobs[=&lt;jobsnum&gt;]</td><td>指定同时运行命令的个数.如果没有这个参数,make运行命令时能运行多少就运行多少.如果有一个以上的<code>-j</code>参数，那么仅最后一个<code>-j</code>才是有效的</td></tr><tr><td>-k, --keep-going</td><td>出错也不停止运行.如果生成一个目标失败了,那么依赖于其上的目标就不会被执行了</td></tr><tr><td>-l&lt;load&gt;, --load-average[=&lt;load&gt;], -max-load[=&lt;load&gt;]</td><td>指定make运行命令的负载</td></tr><tr><td>-n, --just-print, --dry-run, --recon</td><td>仅输出执行过程中的命令序列,但并不执行</td></tr><tr><td>-p, --print-data-base</td><td>输出makefile中的所有数据,包括所有的规则和变量</td></tr><tr><td>-q, --question</td><td>不允许命令,也不输出.仅检查指定目标是否需要更新.如果为0则需要更新,如果为2则说明有错误发生</td></tr><tr><td>-r, --no-builtin-rules</td><td>禁止make使用任何隐含规则</td></tr><tr><td>-R, --no-builtin-variabes</td><td>禁止make使用任何作用于变量上的隐含规则</td></tr><tr><td>-s, --silent, --quiet</td><td>在命令运行时不输出命令的输出</td></tr><tr><td>-S, --no-keep-going, --stop</td><td>取消<code>-k</code>选项的作用</td></tr><tr><td>-t, --touch</td><td>相当于UNIX的touch命令,将目标的修改日期变成最新的,也就是阻止生成目标的命令运行</td></tr><tr><td>-v, --version</td><td>输出make程序的版本,版权等关于make的信息</td></tr><tr><td>-w, --print-directory</td><td>输出运行makefile之前和之后的信息</td></tr><tr><td>--no-print-directory</td><td>禁止<code>-W</code>选项</td></tr><tr><td>-W&lt;file&gt;, --what-if=&lt;file&gt;, --new-file=&lt;file&gt;, --assume-file=&lt;file&gt;</td><td>假定目标&lt;file&gt;需要更新,如果和“-n”选项使用,那么这个参数会输出该目标更新时的运行动作.如果没有“-n”那么就像运行UNIX的“touch”命令一样,使得&lt;file&gt;的修改时间为当前时间</td></tr><tr><td>--warn-undefined-variables</td><td>只要make发现有未定义的变量,那么就输出警告信息</td></tr></tbody></table></figure>
<!-- /wp:table -->

<!-- wp:heading -->
<h2>七.隐含规则</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>如果要使用隐含规则生成需要的目标,那么久不能写出这个目标的规则,因为make会自己去推导产生真个目标的规则和命令.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>使用make的参数 <code>-r</code> 或 <code>--no-builtin-rules</code> 选项来取消所有的预设置的隐含规则.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>即使是指定了 <code>-r</code> 参数,某些隐含规则还是会生效,因为有许多的隐含规则都是使用了“后缀规则”来定义的,所以,只要隐含规则中有 “后缀列表”（也就是系统定义在目标 <code>.SUFFIXES</code> 的依赖目标）,那么隐含规则就会生效.默认的后缀列表是：<code>.out, .a, .ln, .o, .c, .cc, .C, .p, .f, .F, .r, .y, .l, .s, .S, .mod, .sym, .def, .h, .info, .dvi, .tex, .texinfo, .texi, .txinfo, .w, .ch .web, .sh, .elc, .el</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>编译c程序的隐含规则<code>&lt;n&gt;.o</code>的目标依赖会自动推导为<code>&lt;n&gt;.c</code>,并且其生成命令<code>$(CC) -c $(CPPFLAGS)$(CFLAGS)</code></li><li>编译c++程序的隐含规则<code>&lt;n&gt;.o</code>的目标依赖会自动推导为<code>&lt;n&gt;.cc</code>或是<code>&lt;n&gt;.C</code>并且其生成命令<code>$(CXX) -c $(CPPFLAGS) $(CFLAGS)</code></li><li>编译Pascal程序的隐含规则<code>&lt;n&gt;.o</code>的目标依赖会自动推导为<code>&lt;n&gt;.p</code>,并且生成命令<code>$(PC) -c $(PFLAGS)</code></li></ol>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":4} -->
<ol start="4"><li>编译Fortran/Ratfor程序的隐含规则<code>&lt;n&gt;.o</code>的目标依赖会自动推导为<code>&lt;n&gt;.r</code>或<code>&lt;n&gt;.F</code>或<code>&lt;n&gt;.f</code>,并且生成命令:<ul><li><code>.f</code> <code>$(FC) –c $(FFLAGS)</code></li><li><code>.F</code> <code>$(FC) –c $(FFLAGS) $(CPPFLAGS)</code></li><li><code>.f</code> <code>$(FC) –c $(FFLAGS) $(RFLAGS)</code></li></ul></li><li>预处理Fortran/Ratfor程序的隐含规则<code>&lt;n&gt;.f</code> 的目标依赖会自动推导为 <code>&lt;n&gt;.r</code> 或 <code>&lt;n&gt;.F</code> .这个规则只是转换Ratfor 或有预处理的Fortran程序到一个标准的Fortran程序,并且生成命令:<ul><li><code>.F</code> <code>$(FC) –F $(CPPFLAGS) $(FFLAGS)</code></li><li><code>.r</code> <code>$(FC) –F $(FFLAGS) $(RFLAGS)</code></li></ul></li><li>编译Modula-2程序的隐含规则<code>&lt;n&gt;.sym</code> 的目标依赖会自动推导为 <code>&lt;n&gt;.def</code> ,并且其生成命令 <code>$(M2C) $(M2FLAGS) $(DEFFLAGS)</code> .<code>&lt;n&gt;.o</code> 的目标依赖会自动推导为 <code>&lt;n&gt;.mod</code> ,并且其生成命令<code>$(M2C) $(M2FLAGS) $(MODFLAGS)</code> .</li></ol>
<!-- /wp:list -->

<!-- wp:list {"ordered":true,"start":7} -->
<ol start="7"><li>汇编和汇编预处理的隐含规则<code>&lt;n&gt;.o</code>的目标依赖会自动推导为 <code>&lt;n&gt;.s</code> ,默认使用编译器 <code>as</code> ,并且其生成命令 <code>$ (AS) $(ASFLAGS)</code>.<code>&lt;n&gt;.s</code> 的目标依赖会自动推导为 <code>&lt;n&gt;.S</code> ,默认使用C预编译器 <code>cpp</code> ,并且其生成命令 <code>$(AS) $(ASFLAGS)</code></li><li>链接Object文件的隐含规则 <code>&lt;n&gt;</code>目标依赖于 <code>&lt;n&gt;.o</code> ,通过运行C的编译器来运行链接程序生成（一般是 <code>ld</code> ）,其生成命令 <code>$(CC) $(LDFLAGS) &lt;n&gt;.o $(LOADLIBES) $(LDLIBS)</code>.这个规则对于只有一个源文件的工程有效，同时对多个Object文件（由不同的源文件生成）也有效.</li><li>Yacc C程序时的隐含规则<code>&lt;n&gt;.c</code>的目标依赖会自动推导为 <code>n.y</code> （Yacc生成的文件）,其生成命令<code>$(YACC) $(YFALGS)</code> .</li><li>Lex C程序时的隐含规则<code>&lt;n&gt;.c</code>的目标依赖会自动推导为 <code>n.l</code> （Lex生成的文件）,其生成命令<code>$(LEX) $(LFALGS)</code> .</li><li>Lex Ratfor程序时的隐含规则<code>&lt;n&gt;.r</code> 的依赖文件被自动推导为 <code>n.l</code>（Lex生成的文件）,其生成命令 <code>$(LEX) $(LFALGS)</code> .</li><li>从C程序、Yacc文件或Lex文件创建Lint库的隐含规则<code>&lt;n&gt;.ln</code> （lint生成的文件）的依赖文件被自动推导为 <code>n.c</code> ,其生成命令 <code>$(LINT) $(LINTFALGS) $(CPPFLAGS) -i</code> .对于 <code>&lt;n&gt;.y</code> 和 <code>&lt;n&gt;.l</code> 也是同样的规则</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>可以重载内建的隐含规则（或是定义一个全新的）,例如你可以重新构造和内建隐含规则不同的命令,如:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;%.o : %.c<br>&nbsp; &nbsp; &nbsp;$(CC) -c $(CPPFLAGS) $(CFLAGS) -D$(date)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>可以取消内建的隐含规则，只要不在后面写命令就行,如:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;%.o : %.s</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>同样，也可以重新定义一个全新的隐含规则,其在隐含规则中的位置取决于在哪里写下这个规则.朝前的位置就靠前.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>隐含规则变量</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>隐含规则中的命令中,基本上都使用了一些预先设置的变量.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>可以在makefile中改变这些变量的值,或是在make的命令行中传入这些值,或是在环境变量中设置这些值,只要设置了这些特定的变量,那么其就会对隐含规则起作用.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>也可以利用make的 <code>-R</code> 或 <code>--no–builtin-variables</code> 参数来取消所定义的变量对隐含规则的作用.</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>命令的变量:<ul><li><code>AR</code> : 函数库打包程序。默认命令是 <code>ar</code></li><li><code>AS</code> : 汇编语言编译程序。默认命令是 <code>as</code></li><li><code>CC</code> : C语言编译程序。默认命令是 <code>cc</code></li><li><code>CXX</code> : C++语言编译程序。默认命令是 <code>g++</code></li><li><code>CO</code> : 从 RCS文件中扩展文件程序。默认命令是 <code>co</code></li><li><code>CPP</code> : C程序的预处理器（输出是标准输出设备）。默认命令是 <code>$(CC) –E</code></li><li><code>FC</code> : Fortran 和 Ratfor 的编译器和预处理程序。默认命令是 <code>f77</code></li><li><code>GET</code> : 从SCCS文件中扩展文件的程序。默认命令是 <code>get</code></li><li><code>LEX</code> : Lex方法分析器程序（针对于C或Ratfor）。默认命令是 <code>lex</code></li><li><code>PC</code> : Pascal语言编译程序。默认命令是 <code>pc</code></li><li><code>YACC</code> : Yacc文法分析器（针对于C程序）。默认命令是 <code>yacc</code></li><li><code>YACCR</code> : Yacc文法分析器（针对于Ratfor程序）。默认命令是 <code>yacc –r</code></li><li><code>MAKEINFO</code> : 转换Texinfo源文件（.texi）到Info文件程序。默认命令是 <code>makeinfo</code></li><li><code>TEX</code> : 从TeX源文件创建TeX DVI文件的程序。默认命令是 <code>tex</code></li><li><code>TEXI2DVI</code> : 从Texinfo源文件创建军TeX DVI 文件的程序。默认命令是 <code>texi2dvi</code></li><li><code>WEAVE</code> : 转换Web到TeX的程序。默认命令是 <code>weave</code></li><li><code>CWEAVE</code> : 转换C Web 到 TeX的程序。默认命令是 <code>cweave</code></li><li><code>TANGLE</code> : 转换Web到Pascal语言的程序。默认命令是 <code>tangle</code></li><li><code>CTANGLE</code> : 转换C Web 到 C。默认命令是 <code>ctangle</code></li><li><code>RM</code> : 删除文件命令。默认命令是 <code>rm –f</code></li></ul></li><li>命令参数的变量如果没有指明其默认值，那么其默认值都是空.<ul><li><code>ARFLAGS</code> : 函数库打包程序AR命令的参数.(默认值是 <code>rv</code>)</li><li><code>ASFLAGS</code> : 汇编语言编译器参数（当明显地调用 <code>.s</code> 或 <code>.S</code> 文件时）</li><li><code>CFLAGS</code> : C语言编译器参数</li><li><code>CXXFLAGS</code> : C++语言编译器参数</li><li><code>COFLAGS</code> : RCS命令参数</li><li><code>CPPFLAGS</code> : C预处理器参数（ C 和 Fortran 编译器也会用到）。</li><li><code>FFLAGS</code> : Fortran语言编译器参数</li><li><code>GFLAGS</code> : SCCS “get”程序参数</li><li><code>LDFLAGS</code> : 链接器参数（如： <code>ld</code> ）</li><li><code>LFLAGS</code> : Lex文法分析器参数</li><li><code>PFLAGS</code> : Pascal语言编译器参数</li><li><code>RFLAGS</code> : Ratfor 程序的Fortran 编译器参数</li><li><code>YFLAGS</code> : Yacc文法分析器参数</li></ul></li></ol>
<!-- /wp:list -->

<!-- wp:heading {"level":3} -->
<h3>隐含规则链</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>一个目标可能被一系列的隐含规则所作用.例如 : 一个 <code>.o</code> 的文件生成,可能会是先被 Yacc的[.y]文件先成 <code>.c</code> ,然后再由C编译器生成<code>.o</code>文件.这一系列的隐含规则叫做“隐含规则链”。</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>上述的<code>.c</code>文件称之为中间目标.对于中间目标,它和一般的目标有两个地方所不同:</p>
<!-- /wp:paragraph -->

<!-- wp:list {"ordered":true} -->
<ol><li>除非中间的目标不存在,才会引发中间规则.</li><li>只要目标成功产生,那么产生最终目标过程中,所产生的中间目标文件会被以 <code>rm -f</code> 删除.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>一个被makefile指定成目标或是依赖目标的文件不能被当作中介.然而,可以明显地说明一个文件或是目标是中介目标,可以使用伪目标 <code>.INTERMEDIATE</code> 来强制声明.（如： <code>.INTERMEDIATE : mid</code> ）</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>也可以阻止make自动删除中间目标,要做到这一点,可以使用伪目标 <code>.SECONDARY</code> 来强制声明（如： <code>.SECONDARY : sec</code> ）.还可以把目标以模式的方式来指定（如： <code>%.o</code> ）成伪目标 <code>.PRECIOUS</code> 的依赖目标,以保存被隐含规则所生成的中间文件.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>在“隐含规则链”中,禁止同一个目标出现两次或两次以上,以防止在make自动推导时出现无限递归的情况.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>make会优化一些特殊的隐含规则,而不生成中间文件.如 : 从文件 <code>foo.c</code> 生成目标程序 <code>foo</code> ,按道理,make会编译生成中间文件 <code>foo.o</code> ,然后链接成 <code>foo</code> ,但在实际情况下,这一动作可以被一条 <code>cc</code> 的命令完成（ <code>cc –o foo foo.c</code> ）,于是优化过的规则就不会生成中间文件.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>定义模式规则</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>使用模式规则来定义一个隐含规则.一个模式规则就好像一个一般的规则,只是在规则中,目标的定义需要有 <code>%</code> 字符.<code>%</code> 的意思是表示一个或多个任意字符.在依赖目标中同样可以使用 <code>%</code> ,只是依赖目标中的 <code>%</code> 的取值,取决于其目标.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>%</code> 的展开发生在变量和函数的展开之后,变量和函数的展开发生在make载入 Makefile时,而模式规则中的 <code>%</code> 则发生在运行时.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>模式规则中,目标(target)定义要包含 <code>%</code> ,否则就是一般的规则.目标中的 <code>%</code> 定义表示对文件名的匹配, <code>%</code> 表示长度任意的非空字符串.例如： <code>%.c</code> 表示以 <code>.c</code> 结尾的文件名（文件名的长度至少为3），而 <code>s.%.c</code> 则表示以 <code>s.</code> 开头， <code>.c</code> 结尾的文件名（文件名的长度至少为5）.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果 <code>%</code> 定义在目标中,那么目标中的 <code>%</code> 的值决定了依赖目标中的 <code>%</code> 的值.例如有一个模式规则如下:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;%.o : %.c ; &lt;command ......&gt;;</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>指出了怎么从所有的 <code>.c</code> 文件生成相应的 <code>.o</code> 文件的规则。如果要生成的目标是 <code>a.o b.o</code> ，那么 <code>%c</code> 就是 <code>a.c b.c</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>模式匹配</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>一个目标的模式有一个有前缀或是后缀的 <code>%</code> ,或是没有前后缀，直接就是一个 <code>%</code> .因为 <code>%</code> 代表一个或多个字符,所以在定义好了的模式中,把 <code>%</code> 所匹配的内容叫做“茎”,例如 <code>%.c</code> 所匹配的文件“test.c”中“test”就是“茎”.因为在目标和依赖目标中同时有 <code>%</code> 时,依赖目标的“茎”会传给目标,当做目标中的“茎”.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>当一个模式匹配包含有斜杠（实际也不经常包含）的文件时,那么在进行模式匹配时,目录部分会首先被移开,然后进行匹配,成功后再把目录加回去.在进行“茎”的传递时,需要知道这个步骤.例如有一个模式 <code>e%t</code> ,文件 <code>src/eat</code> 匹配于该模式,于是 <code>src/a</code> 就是其“茎”.如果这个模式定义在依赖目标中,而被依赖于这个模式的目标中又有个模式 <code>c%r</code> ,那么目标就是 <code>src/car</code> .（“茎”被传递）</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3>自动化变量</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>自动化变量，就是这种变量会把模式中所定义的一系列的文件自动地挨个取出,直至所有的符合模式的文件都取完.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>自动化变量只应出现在规则的命令中.</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><code>$@</code> : 表示规则中的目标文件集.在模式规则中,如果有多个目标,那么 <code>$@</code> 就是匹配于目标模式定义的整个集合.</li><li><code>$%</code> : 仅当目标是函数库文件时，表示规则中的目标成员名。例如 : 如果一个目标是 <code>foo.a(bar.o)</code> ,那么 <code>$%</code> 就是 <code>bar.o</code> ,<code>$@</code> 就是 <code>foo.a</code> .如果目标不是函数库文件（Unix下是 <code>.a</code> ,Windows下是 <code>.lib</code> ）,那么其值为空.</li><li><code>$&lt;</code> : 依赖目标中的第一个目标名字.如果依赖目标是以模式（即 <code>%</code> ）定义的,那么 <code>$&lt;</code> 将是符合模式的一系列的文件集合.注意，其是一个一个取出来的.</li><li><code>$?</code> : 所有比目标新的依赖目标的集合.以空格分隔.</li><li><code>$^</code> : 所有的依赖目标的集合.以空格分隔.如果在依赖目标中有多个重复的.那么这个变量会去除重复的依赖目标,只保留一份。</li><li><code>$+</code> : 这个变量很像 <code>$^</code> ,也是所有依赖目标的集合.只是它不去除重复的依赖目标。</li><li><code>$*</code> : 这个变量表示目标模式中 <code>%</code> 及其之前的部分.如果目标是 <code>dir/a.foo.b</code> ,并且目标的模式是 <code>a.%.b</code> ,那么 <code>$*</code> 的值就是 <code>dir/a.foo</code> .如果目标中没有模式的定义,那么 <code>$*</code> 也就不能被推导出，但是,如果目标文件的后缀是make所识别的,那么 <code>$*</code> 就是除了后缀的那一部分.例如：如果目标是 <code>foo.c</code> ,因为 <code>.c</code> 是make所能识别的后缀名,所以 <code>$*</code> 的值就是 <code>foo</code> .这个特性是GNU make的,很有可能不兼容于其它版本的make,所以你应该尽量避免使用 <code>$*</code> ,除非是在隐含规则或是静态模式中.如果目标中的后缀是make所不能识别的,那么 <code>$*</code> 就是空值.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><code>$?</code> 在显式规则中很有用，例如，假设有一个函数库文件叫 <code>lib</code> ，其由其它几个object文件更新。那么把object文件打包的比较有效率的Makefile规则是：</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;lib : foo.o bar.o lose.o win.o<br>&nbsp; &nbsp;  ar r lib $?</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>八.更新函数库文件</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>函数库文件也就是对Object文件（程序编译的中间文件）的打包文件.在Unix下一般是由命令 <code>ar</code> 来完成打包工作.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>一个函数库文件由多个文件组成.可以用如下格式指定函数库文件及其组成:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;archive(member)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>这个不是一个命令,而是一个目标和依赖的定义.一般来说这种用法基本上就是为了 <code>ar</code> 命令来服务的.如:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;foolib(hack.o) : hack.o<br>&nbsp; &nbsp;  ar cr foolib hack.o</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>如果要指定多个member,那就以空格分开,如:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;foolib(hack.o kludge.o)<br>&nbsp;#等价<br>&nbsp;foolib(hack.o) foolib(kludge.o)<br>&nbsp;#等价<br>&nbsp;foolib(*.o)</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {"level":3} -->
<h3>函数库成员的隐含规则</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>当make搜索一个目标的隐含规则时,一个特殊的特性是 :</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>如果这个目标是 <code>a(m)</code> 形式的,其会把目标变成 <code>(m)</code> .</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>于是,如果我们的成员是 <code>%.o</code> 的模式定义,并且如果我们使用 <code>make foo.a(bar.o)</code> 的形式调用Makefile时,隐含规则会去找 <code>bar.o</code> 的规则.如果没有定义 <code>bar.o</code> 的规则,那么内建隐含规则生效,make会去找 <code>bar.c</code> 文件来生成 <code>bar.o</code> ,如果找得到的话,make执行的命令大致如下:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted">&nbsp;cc -c bar.c -o bar.o<br>&nbsp;ar r foo.a bar.o<br>&nbsp;rm -f bar.o</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>在进行函数库打包文件生成时,小心使用make的并行机制（ <code>-j</code> 参数）.如果多个 <code>ar</code> 命令在同一时间运行在同一个函数库打包文件,就很有可以损坏这个函数库文件.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4904</wp:post_id>
		<wp:post_date><![CDATA[2022-02-22 11:14:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-22 03:14:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[makefile]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="makefile"><![CDATA[makefile]]></category>
		<category domain="category" nicename="%e7%bc%96%e8%af%91%e9%93%be%e6%8e%a5"><![CDATA[编译链接]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown_enabled]]></wp:meta_key>
		<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[asdf]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[1600037849@qq.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[36.20.76.253]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2022-02-22 11:16:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2022-02-22 03:16:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[asdf]]></wp:comment_content>
			<wp:comment_approved><![CDATA[trash]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
			<wp:meta_value><![CDATA[1645499834]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title>makefile</title>
		<link>https://tisenye.com/4909</link>
		<pubDate>Tue, 22 Feb 2022 03:36:26 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4909</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4909</wp:post_id>
		<wp:post_date><![CDATA[2022-02-22 11:36:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-22 03:36:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[makefile-2__trashed]]></wp:post_name>
		<wp:status><![CDATA[trash]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[未分类]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
		<wp:meta_value><![CDATA[publish]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
		<wp:meta_value><![CDATA[1645501000]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_wp_desired_post_slug]]></wp:meta_key>
		<wp:meta_value><![CDATA[makefile-2]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>Ubuntu下升级内核版本及相关</title>
		<link>https://tisenye.com/4921</link>
		<pubDate>Wed, 23 Feb 2022 05:42:07 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4921</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>Ubuntu下升级指定内核版本，且适配相应gcc版本</p>
</blockquote>
<h2>升级指定内核版本</h2>
<ol>
<li>
<p>在<a href="https://kernel.ubuntu.com/~kernel-ppa/mainline/">Ubuntu内核</a>找寻需要的内核版本
<img src="https://tisenye.com/wp-content/uploads/2022/02/image-1645595292055.png" alt="file" /></p>
</li>
<li>
<p>下载对应平台的<code>.deb</code>文件
<img src="https://tisenye.com/wp-content/uploads/2022/02/image-1645595373335.png" alt="file" /></p>
</li>
<li>
<p>安装<code>.deb</code>文件</p>
<pre><code class="language-bash">sudo dpkg -i *.deb</code></pre>
</li>
<li>
<p>重启</p>
</li>
</ol>
<h2>GCC版本不匹配问题</h2>
<p>在安装完新版本内核后，如果编译内核模块会发生错误
<img src="https://tisenye.com/wp-content/uploads/2022/02/image-1645595598274.png" alt="file" />
这是由于编译器版本不是内核当前推荐的版本</p>
<ol>
<li>产看推荐版本
<pre><code class="language-bash">cat /proc/version</code></pre>
<p><img src="https://tisenye.com/wp-content/uploads/2022/02/image-1645595669616.png" alt="file" />
其中的gcc version即推荐版本</p></li>
<li>下载gcc版本<a href="https://mirrors.tuna.tsinghua.edu.cn/gnu/gcc/">清华开源镜像</a>
<img src="https://tisenye.com/wp-content/uploads/2022/02/image-1645596610172.png" alt="file" /></li>
<li>解压下载的包（以.tar.gz为例）
<pre><code class="language-bash">tar -xzvf gcc-5.1.0.tar.gz</code></pre></li>
<li>下载依赖
<pre><code class="language-bash">./contrib/download_prerequisites</code></pre></li>
<li>解压编译依赖
<pre><code class="language-bash">tar jxvf gmp-x.x.x .tar.bz2
cd gmp-x.x.x
./configure --prefix=/usr/local/gmp
make && make install
#如果出现error: No usable m4 in $PATH or /usr/5bin (see config.log for reasons).则需要安装m4
#sudo apt install m4
#
tar jxvf mpfr-x.x.x.tar.bz2
cd mpfr-x.x.x
./configure --prefix=/usr/local/mpfr
make && make install
#如果出现error: gmp.h can't be found, or is unusable. 是因为缺少lipgmp库
#ubuntu环境下 sudo apt-get install libgmp-dev
#gmp网址：https://gmplib.org/#DOWNLOAD
#
tar zxvf mpc-x.x.x.tar.gz
cd mpc-x.x.x
./configure --prefix=/usr/local/mpc
make && make install
#
tar jxvf isl-x.xx.x.tar.bz2
cd isl-x.xx.x
./configure --prefix=/usr/local/isl
make && make install</code></pre>
<p>则需要安装m4</p></li>
<li>配置编译选项
<pre><code class="language-bash">./configure --prefix=/usr/bin/gcc5.4/ --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --enable-languages=c --enable-plugin --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux --disable-multilib</code></pre></li>
<li>编译
<pre><code class="language-bash">make -j4
make install</code></pre></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4921</wp:post_id>
		<wp:post_date><![CDATA[2022-02-23 13:42:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-02-23 05:42:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ubuntu%e4%b8%8b%e5%8d%87%e7%ba%a7%e5%86%85%e6%a0%b8%e7%89%88%e6%9c%ac%e5%8f%8a%e7%9b%b8%e5%85%b3]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="gcc"><![CDATA[gcc]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="%e7%bc%96%e8%af%91%e9%93%be%e6%8e%a5"><![CDATA[编译链接]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[bash]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title>共享库及嵌套Makefile</title>
		<link>https://tisenye.com/4950</link>
		<pubDate>Wed, 16 Mar 2022 07:41:29 +0000</pubDate>
		<dc:creator><![CDATA[tisen]]></dc:creator>
		<guid isPermaLink="false">https://tisenye.com/?p=4950</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>之前网站搬家丢了关于动态库的内容，练习Makefile刚好重写一下</p>
</blockquote>
<h1>一、动态库编译及调用</h1>
<p>1 编译动态库</p>
<pre><code class="language-bash">gcc sub.c -fPIC -shared -o libmath.so</code></pre>
<ul>
<li>-fPIC：Position Independent Code， 用于生成与地址无关的代码。</li>
<li>-shared：生成动态库</li>
</ul>
<p>2 调用动态库</p>
<pre><code class="language-bash">gcc test.c -L./lib -lmath -Wl,-rpath=./lib -o test.o</code></pre>
<ul>
<li>-L：查找动态库.so的路径</li>
<li>-lmath：调用动态库libmath.so</li>
<li>-Wl,-rpath：将将共享库位置嵌入程序，使加载器找到共享库位置</li>
</ul>
<h1>二、静态库编译及调用</h1>
<p>1 编译静态库</p>
<pre><code class="language-bash">gcc -c sub.c -o sub.o
ar -cr libmath.a sub.o
</code></pre>
<p>ar为打包命令，如果有多个模块用空格分隔即可，其参数如下：</p>
<ul>
<li>-c：创建一个库，不管库是否存在，都将创建</li>
<li>-r：将模块插入库，如果库中有对应的模块，那么进行更新</li>
<li>-t：显示库中的模块</li>
<li>-x：去除相应库中的模块</li>
</ul>
<p>2 调用静态库</p>
<pre><code class="language-bash">gcc test.c -o test -I./ -L./ -lmath</code></pre>
<h1>三、Makefile的嵌套编译</h1>
<p>1 ./lib/Makefile</p>
<pre><code class="language-bash">LDFLAG=-fPIC -shared
all : libmath.so

libmath.so :
    gcc sub.c $(LDFLAG) -o libmath.so
</code></pre>
<p>2 ./Makefile</p>
<pre><code class="language-bash">#获取当前文件夹下的所有目录
SUBDIRS=$(shell ls -l | grep ^d | awk &#039;{print $9}&#039;)
C_FLAGS=
LIB_DIR=./lib
all : $(SUBDIRS) main

$(SUBDIRS) : ECHO
    make -C $@

ECHO :
    @echo $(SUBDIRS)

main :
    gcc test.c -L$(LIB_DIR) -lmath -Wl,-rpath=$(LIB_DIR) -o main</code></pre>
<h1>四、主程序调用动态库的方式</h1>
<p>1 隐式调用</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;
//声明函数
extern int sub(int a, int b);

int main(){
    sub(3, 4);

    return 0;
}</code></pre>
<p>编译方式</p>
<pre><code class="language-bash">gcc test.c -L./lib -lmath -Wl,-rpath=./lib -o test.o</code></pre>
<p>2 显示调用</p>
<pre><code class="language-c">#include &lt;dlfcn.h&gt;
#include &lt;stdio.h&gt;

int main()
{

    const char *pstr = &quot;./libmath.so&quot;;
    //获取动态库指针
    void *library = dlopen(pstr, RTLD_NOW);
    if (!library)
    {
        printf(&quot;load dlopen(%s): %s\n&quot;, pstr, dlerror()); //语句3，RTLD_NOW模式在这报错
        return -1;
    }

    //函数指针
    int (*fp)(int a, int b);
    //dlsym函数从相应的动态库中获取函数符号
    fp = (int(*)(int,int))dlsym(library, &quot;sub&quot;);
    fp(4, 3);

    return 0;
}</code></pre>
<p>编译方式</p>
<pre><code class="language-bash">gcc test.c -ldl -o test</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4950</wp:post_id>
		<wp:post_date><![CDATA[2022-03-16 15:41:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2022-03-16 07:41:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[%e5%85%b1%e4%ba%ab%e5%ba%93%e5%8f%8a%e5%b5%8c%e5%a5%97makefile]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="c-c"><![CDATA[C/C++]]></category>
		<category domain="post_tag" nicename="makefile"><![CDATA[makefile]]></category>
		<category domain="category" nicename="%e7%bc%96%e8%af%91%e9%93%be%e6%8e%a5"><![CDATA[编译链接]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_markdown]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mermaid]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_katex]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_mathjax]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_layout_select]]></wp:meta_key>
		<wp:meta_value><![CDATA[sidebar-right]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[hestia_header_layout]]></wp:meta_key>
		<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_prismjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[bash,c,clike]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_githuber_highlightjs]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_sequence]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_is_githuber_flow_chart]]></wp:meta_key>
		<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	